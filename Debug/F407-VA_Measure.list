
F407-VA_Measure.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009768  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00004da4  08009900  08009900  00019900  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800e6a4  0800e6a4  000210e8  2**0
                  CONTENTS
  4 .ARM          00000008  0800e6a4  0800e6a4  0001e6a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800e6ac  0800e6ac  000210e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  0800e6ac  0800e6ac  0001e6ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800e6b4  0800e6b4  0001e6b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000010e8  20000000  0800e6b8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000210e8  2**0
                  CONTENTS
 10 .bss          00000450  20001100  20001100  00021100  2**5
                  ALLOC
 11 ._user_heap_stack 00001800  20001550  20001550  00021100  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000210e8  2**0
                  CONTENTS, READONLY
 13 .debug_info   00016d99  00000000  00000000  00021118  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000331f  00000000  00000000  00037eb1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000b30  00000000  00000000  0003b1d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00001778  00000000  00000000  0003bd00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00023ca3  00000000  00000000  0003d478  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00018acb  00000000  00000000  0006111b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000d73f4  00000000  00000000  00079be6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  00150fda  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00003968  00000000  00000000  0015102c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    00010c41  00000000  00000000  00154994  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .stab         000000cc  00000000  00000000  001655d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 24 .stabstr      000001b9  00000000  00000000  001656a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20001100 	.word	0x20001100
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080098e0 	.word	0x080098e0

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20001104 	.word	0x20001104
 80001cc:	080098e0 	.word	0x080098e0

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_uldivmod>:
 8000ba8:	b953      	cbnz	r3, 8000bc0 <__aeabi_uldivmod+0x18>
 8000baa:	b94a      	cbnz	r2, 8000bc0 <__aeabi_uldivmod+0x18>
 8000bac:	2900      	cmp	r1, #0
 8000bae:	bf08      	it	eq
 8000bb0:	2800      	cmpeq	r0, #0
 8000bb2:	bf1c      	itt	ne
 8000bb4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000bb8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000bbc:	f000 b974 	b.w	8000ea8 <__aeabi_idiv0>
 8000bc0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bc4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bc8:	f000 f806 	bl	8000bd8 <__udivmoddi4>
 8000bcc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bd0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bd4:	b004      	add	sp, #16
 8000bd6:	4770      	bx	lr

08000bd8 <__udivmoddi4>:
 8000bd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bdc:	9d08      	ldr	r5, [sp, #32]
 8000bde:	4604      	mov	r4, r0
 8000be0:	468e      	mov	lr, r1
 8000be2:	2b00      	cmp	r3, #0
 8000be4:	d14d      	bne.n	8000c82 <__udivmoddi4+0xaa>
 8000be6:	428a      	cmp	r2, r1
 8000be8:	4694      	mov	ip, r2
 8000bea:	d969      	bls.n	8000cc0 <__udivmoddi4+0xe8>
 8000bec:	fab2 f282 	clz	r2, r2
 8000bf0:	b152      	cbz	r2, 8000c08 <__udivmoddi4+0x30>
 8000bf2:	fa01 f302 	lsl.w	r3, r1, r2
 8000bf6:	f1c2 0120 	rsb	r1, r2, #32
 8000bfa:	fa20 f101 	lsr.w	r1, r0, r1
 8000bfe:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c02:	ea41 0e03 	orr.w	lr, r1, r3
 8000c06:	4094      	lsls	r4, r2
 8000c08:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000c0c:	0c21      	lsrs	r1, r4, #16
 8000c0e:	fbbe f6f8 	udiv	r6, lr, r8
 8000c12:	fa1f f78c 	uxth.w	r7, ip
 8000c16:	fb08 e316 	mls	r3, r8, r6, lr
 8000c1a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000c1e:	fb06 f107 	mul.w	r1, r6, r7
 8000c22:	4299      	cmp	r1, r3
 8000c24:	d90a      	bls.n	8000c3c <__udivmoddi4+0x64>
 8000c26:	eb1c 0303 	adds.w	r3, ip, r3
 8000c2a:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8000c2e:	f080 811f 	bcs.w	8000e70 <__udivmoddi4+0x298>
 8000c32:	4299      	cmp	r1, r3
 8000c34:	f240 811c 	bls.w	8000e70 <__udivmoddi4+0x298>
 8000c38:	3e02      	subs	r6, #2
 8000c3a:	4463      	add	r3, ip
 8000c3c:	1a5b      	subs	r3, r3, r1
 8000c3e:	b2a4      	uxth	r4, r4
 8000c40:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c44:	fb08 3310 	mls	r3, r8, r0, r3
 8000c48:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c4c:	fb00 f707 	mul.w	r7, r0, r7
 8000c50:	42a7      	cmp	r7, r4
 8000c52:	d90a      	bls.n	8000c6a <__udivmoddi4+0x92>
 8000c54:	eb1c 0404 	adds.w	r4, ip, r4
 8000c58:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000c5c:	f080 810a 	bcs.w	8000e74 <__udivmoddi4+0x29c>
 8000c60:	42a7      	cmp	r7, r4
 8000c62:	f240 8107 	bls.w	8000e74 <__udivmoddi4+0x29c>
 8000c66:	4464      	add	r4, ip
 8000c68:	3802      	subs	r0, #2
 8000c6a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000c6e:	1be4      	subs	r4, r4, r7
 8000c70:	2600      	movs	r6, #0
 8000c72:	b11d      	cbz	r5, 8000c7c <__udivmoddi4+0xa4>
 8000c74:	40d4      	lsrs	r4, r2
 8000c76:	2300      	movs	r3, #0
 8000c78:	e9c5 4300 	strd	r4, r3, [r5]
 8000c7c:	4631      	mov	r1, r6
 8000c7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c82:	428b      	cmp	r3, r1
 8000c84:	d909      	bls.n	8000c9a <__udivmoddi4+0xc2>
 8000c86:	2d00      	cmp	r5, #0
 8000c88:	f000 80ef 	beq.w	8000e6a <__udivmoddi4+0x292>
 8000c8c:	2600      	movs	r6, #0
 8000c8e:	e9c5 0100 	strd	r0, r1, [r5]
 8000c92:	4630      	mov	r0, r6
 8000c94:	4631      	mov	r1, r6
 8000c96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c9a:	fab3 f683 	clz	r6, r3
 8000c9e:	2e00      	cmp	r6, #0
 8000ca0:	d14a      	bne.n	8000d38 <__udivmoddi4+0x160>
 8000ca2:	428b      	cmp	r3, r1
 8000ca4:	d302      	bcc.n	8000cac <__udivmoddi4+0xd4>
 8000ca6:	4282      	cmp	r2, r0
 8000ca8:	f200 80f9 	bhi.w	8000e9e <__udivmoddi4+0x2c6>
 8000cac:	1a84      	subs	r4, r0, r2
 8000cae:	eb61 0303 	sbc.w	r3, r1, r3
 8000cb2:	2001      	movs	r0, #1
 8000cb4:	469e      	mov	lr, r3
 8000cb6:	2d00      	cmp	r5, #0
 8000cb8:	d0e0      	beq.n	8000c7c <__udivmoddi4+0xa4>
 8000cba:	e9c5 4e00 	strd	r4, lr, [r5]
 8000cbe:	e7dd      	b.n	8000c7c <__udivmoddi4+0xa4>
 8000cc0:	b902      	cbnz	r2, 8000cc4 <__udivmoddi4+0xec>
 8000cc2:	deff      	udf	#255	; 0xff
 8000cc4:	fab2 f282 	clz	r2, r2
 8000cc8:	2a00      	cmp	r2, #0
 8000cca:	f040 8092 	bne.w	8000df2 <__udivmoddi4+0x21a>
 8000cce:	eba1 010c 	sub.w	r1, r1, ip
 8000cd2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cd6:	fa1f fe8c 	uxth.w	lr, ip
 8000cda:	2601      	movs	r6, #1
 8000cdc:	0c20      	lsrs	r0, r4, #16
 8000cde:	fbb1 f3f7 	udiv	r3, r1, r7
 8000ce2:	fb07 1113 	mls	r1, r7, r3, r1
 8000ce6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000cea:	fb0e f003 	mul.w	r0, lr, r3
 8000cee:	4288      	cmp	r0, r1
 8000cf0:	d908      	bls.n	8000d04 <__udivmoddi4+0x12c>
 8000cf2:	eb1c 0101 	adds.w	r1, ip, r1
 8000cf6:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8000cfa:	d202      	bcs.n	8000d02 <__udivmoddi4+0x12a>
 8000cfc:	4288      	cmp	r0, r1
 8000cfe:	f200 80cb 	bhi.w	8000e98 <__udivmoddi4+0x2c0>
 8000d02:	4643      	mov	r3, r8
 8000d04:	1a09      	subs	r1, r1, r0
 8000d06:	b2a4      	uxth	r4, r4
 8000d08:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d0c:	fb07 1110 	mls	r1, r7, r0, r1
 8000d10:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000d14:	fb0e fe00 	mul.w	lr, lr, r0
 8000d18:	45a6      	cmp	lr, r4
 8000d1a:	d908      	bls.n	8000d2e <__udivmoddi4+0x156>
 8000d1c:	eb1c 0404 	adds.w	r4, ip, r4
 8000d20:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8000d24:	d202      	bcs.n	8000d2c <__udivmoddi4+0x154>
 8000d26:	45a6      	cmp	lr, r4
 8000d28:	f200 80bb 	bhi.w	8000ea2 <__udivmoddi4+0x2ca>
 8000d2c:	4608      	mov	r0, r1
 8000d2e:	eba4 040e 	sub.w	r4, r4, lr
 8000d32:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000d36:	e79c      	b.n	8000c72 <__udivmoddi4+0x9a>
 8000d38:	f1c6 0720 	rsb	r7, r6, #32
 8000d3c:	40b3      	lsls	r3, r6
 8000d3e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d42:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d46:	fa20 f407 	lsr.w	r4, r0, r7
 8000d4a:	fa01 f306 	lsl.w	r3, r1, r6
 8000d4e:	431c      	orrs	r4, r3
 8000d50:	40f9      	lsrs	r1, r7
 8000d52:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d56:	fa00 f306 	lsl.w	r3, r0, r6
 8000d5a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000d5e:	0c20      	lsrs	r0, r4, #16
 8000d60:	fa1f fe8c 	uxth.w	lr, ip
 8000d64:	fb09 1118 	mls	r1, r9, r8, r1
 8000d68:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d6c:	fb08 f00e 	mul.w	r0, r8, lr
 8000d70:	4288      	cmp	r0, r1
 8000d72:	fa02 f206 	lsl.w	r2, r2, r6
 8000d76:	d90b      	bls.n	8000d90 <__udivmoddi4+0x1b8>
 8000d78:	eb1c 0101 	adds.w	r1, ip, r1
 8000d7c:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000d80:	f080 8088 	bcs.w	8000e94 <__udivmoddi4+0x2bc>
 8000d84:	4288      	cmp	r0, r1
 8000d86:	f240 8085 	bls.w	8000e94 <__udivmoddi4+0x2bc>
 8000d8a:	f1a8 0802 	sub.w	r8, r8, #2
 8000d8e:	4461      	add	r1, ip
 8000d90:	1a09      	subs	r1, r1, r0
 8000d92:	b2a4      	uxth	r4, r4
 8000d94:	fbb1 f0f9 	udiv	r0, r1, r9
 8000d98:	fb09 1110 	mls	r1, r9, r0, r1
 8000d9c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000da0:	fb00 fe0e 	mul.w	lr, r0, lr
 8000da4:	458e      	cmp	lr, r1
 8000da6:	d908      	bls.n	8000dba <__udivmoddi4+0x1e2>
 8000da8:	eb1c 0101 	adds.w	r1, ip, r1
 8000dac:	f100 34ff 	add.w	r4, r0, #4294967295	; 0xffffffff
 8000db0:	d26c      	bcs.n	8000e8c <__udivmoddi4+0x2b4>
 8000db2:	458e      	cmp	lr, r1
 8000db4:	d96a      	bls.n	8000e8c <__udivmoddi4+0x2b4>
 8000db6:	3802      	subs	r0, #2
 8000db8:	4461      	add	r1, ip
 8000dba:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000dbe:	fba0 9402 	umull	r9, r4, r0, r2
 8000dc2:	eba1 010e 	sub.w	r1, r1, lr
 8000dc6:	42a1      	cmp	r1, r4
 8000dc8:	46c8      	mov	r8, r9
 8000dca:	46a6      	mov	lr, r4
 8000dcc:	d356      	bcc.n	8000e7c <__udivmoddi4+0x2a4>
 8000dce:	d053      	beq.n	8000e78 <__udivmoddi4+0x2a0>
 8000dd0:	b15d      	cbz	r5, 8000dea <__udivmoddi4+0x212>
 8000dd2:	ebb3 0208 	subs.w	r2, r3, r8
 8000dd6:	eb61 010e 	sbc.w	r1, r1, lr
 8000dda:	fa01 f707 	lsl.w	r7, r1, r7
 8000dde:	fa22 f306 	lsr.w	r3, r2, r6
 8000de2:	40f1      	lsrs	r1, r6
 8000de4:	431f      	orrs	r7, r3
 8000de6:	e9c5 7100 	strd	r7, r1, [r5]
 8000dea:	2600      	movs	r6, #0
 8000dec:	4631      	mov	r1, r6
 8000dee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000df2:	f1c2 0320 	rsb	r3, r2, #32
 8000df6:	40d8      	lsrs	r0, r3
 8000df8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000dfc:	fa21 f303 	lsr.w	r3, r1, r3
 8000e00:	4091      	lsls	r1, r2
 8000e02:	4301      	orrs	r1, r0
 8000e04:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e08:	fa1f fe8c 	uxth.w	lr, ip
 8000e0c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000e10:	fb07 3610 	mls	r6, r7, r0, r3
 8000e14:	0c0b      	lsrs	r3, r1, #16
 8000e16:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000e1a:	fb00 f60e 	mul.w	r6, r0, lr
 8000e1e:	429e      	cmp	r6, r3
 8000e20:	fa04 f402 	lsl.w	r4, r4, r2
 8000e24:	d908      	bls.n	8000e38 <__udivmoddi4+0x260>
 8000e26:	eb1c 0303 	adds.w	r3, ip, r3
 8000e2a:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 8000e2e:	d22f      	bcs.n	8000e90 <__udivmoddi4+0x2b8>
 8000e30:	429e      	cmp	r6, r3
 8000e32:	d92d      	bls.n	8000e90 <__udivmoddi4+0x2b8>
 8000e34:	3802      	subs	r0, #2
 8000e36:	4463      	add	r3, ip
 8000e38:	1b9b      	subs	r3, r3, r6
 8000e3a:	b289      	uxth	r1, r1
 8000e3c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000e40:	fb07 3316 	mls	r3, r7, r6, r3
 8000e44:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e48:	fb06 f30e 	mul.w	r3, r6, lr
 8000e4c:	428b      	cmp	r3, r1
 8000e4e:	d908      	bls.n	8000e62 <__udivmoddi4+0x28a>
 8000e50:	eb1c 0101 	adds.w	r1, ip, r1
 8000e54:	f106 38ff 	add.w	r8, r6, #4294967295	; 0xffffffff
 8000e58:	d216      	bcs.n	8000e88 <__udivmoddi4+0x2b0>
 8000e5a:	428b      	cmp	r3, r1
 8000e5c:	d914      	bls.n	8000e88 <__udivmoddi4+0x2b0>
 8000e5e:	3e02      	subs	r6, #2
 8000e60:	4461      	add	r1, ip
 8000e62:	1ac9      	subs	r1, r1, r3
 8000e64:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000e68:	e738      	b.n	8000cdc <__udivmoddi4+0x104>
 8000e6a:	462e      	mov	r6, r5
 8000e6c:	4628      	mov	r0, r5
 8000e6e:	e705      	b.n	8000c7c <__udivmoddi4+0xa4>
 8000e70:	4606      	mov	r6, r0
 8000e72:	e6e3      	b.n	8000c3c <__udivmoddi4+0x64>
 8000e74:	4618      	mov	r0, r3
 8000e76:	e6f8      	b.n	8000c6a <__udivmoddi4+0x92>
 8000e78:	454b      	cmp	r3, r9
 8000e7a:	d2a9      	bcs.n	8000dd0 <__udivmoddi4+0x1f8>
 8000e7c:	ebb9 0802 	subs.w	r8, r9, r2
 8000e80:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000e84:	3801      	subs	r0, #1
 8000e86:	e7a3      	b.n	8000dd0 <__udivmoddi4+0x1f8>
 8000e88:	4646      	mov	r6, r8
 8000e8a:	e7ea      	b.n	8000e62 <__udivmoddi4+0x28a>
 8000e8c:	4620      	mov	r0, r4
 8000e8e:	e794      	b.n	8000dba <__udivmoddi4+0x1e2>
 8000e90:	4640      	mov	r0, r8
 8000e92:	e7d1      	b.n	8000e38 <__udivmoddi4+0x260>
 8000e94:	46d0      	mov	r8, sl
 8000e96:	e77b      	b.n	8000d90 <__udivmoddi4+0x1b8>
 8000e98:	3b02      	subs	r3, #2
 8000e9a:	4461      	add	r1, ip
 8000e9c:	e732      	b.n	8000d04 <__udivmoddi4+0x12c>
 8000e9e:	4630      	mov	r0, r6
 8000ea0:	e709      	b.n	8000cb6 <__udivmoddi4+0xde>
 8000ea2:	4464      	add	r4, ip
 8000ea4:	3802      	subs	r0, #2
 8000ea6:	e742      	b.n	8000d2e <__udivmoddi4+0x156>

08000ea8 <__aeabi_idiv0>:
 8000ea8:	4770      	bx	lr
 8000eaa:	bf00      	nop

08000eac <MX_CRC_Init>:
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000eac:	4805      	ldr	r0, [pc, #20]	; (8000ec4 <MX_CRC_Init+0x18>)
{
 8000eae:	b508      	push	{r3, lr}
  hcrc.Instance = CRC;
 8000eb0:	4b05      	ldr	r3, [pc, #20]	; (8000ec8 <MX_CRC_Init+0x1c>)
 8000eb2:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000eb4:	f000 fce8 	bl	8001888 <HAL_CRC_Init>
 8000eb8:	b900      	cbnz	r0, 8000ebc <MX_CRC_Init+0x10>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000eba:	bd08      	pop	{r3, pc}
 8000ebc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 8000ec0:	f000 b9fa 	b.w	80012b8 <Error_Handler>
 8000ec4:	2000111c 	.word	0x2000111c
 8000ec8:	40023000 	.word	0x40023000

08000ecc <HAL_CRC_MspInit>:

void HAL_CRC_MspInit(CRC_HandleTypeDef* crcHandle)
{

  if(crcHandle->Instance==CRC)
 8000ecc:	4b0b      	ldr	r3, [pc, #44]	; (8000efc <HAL_CRC_MspInit+0x30>)
 8000ece:	6802      	ldr	r2, [r0, #0]
 8000ed0:	429a      	cmp	r2, r3
 8000ed2:	d000      	beq.n	8000ed6 <HAL_CRC_MspInit+0xa>
 8000ed4:	4770      	bx	lr
{
 8000ed6:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* CRC clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000ed8:	2200      	movs	r2, #0
 8000eda:	9201      	str	r2, [sp, #4]
 8000edc:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8000ee0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000ee4:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8000ee8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8000eec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000eee:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000ef2:	9301      	str	r3, [sp, #4]
 8000ef4:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }
}
 8000ef6:	b002      	add	sp, #8
 8000ef8:	4770      	bx	lr
 8000efa:	bf00      	nop
 8000efc:	40023000 	.word	0x40023000

08000f00 <MX_GPIO_Init>:

/** Configure pins
     PD14   ------> S_TIM4_CH3
*/
void MX_GPIO_Init(void)
{
 8000f00:	b570      	push	{r4, r5, r6, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f02:	2400      	movs	r4, #0
{
 8000f04:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f06:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8000f0a:	e9cd 4406 	strd	r4, r4, [sp, #24]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000f0e:	4b28      	ldr	r3, [pc, #160]	; (8000fb0 <MX_GPIO_Init+0xb0>)
 8000f10:	9401      	str	r4, [sp, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f12:	9408      	str	r4, [sp, #32]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000f14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  __HAL_RCC_GPIOC_CLK_ENABLE();
  __HAL_RCC_GPIOD_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LED0_Pin|SEL_Pin, GPIO_PIN_RESET);
 8000f16:	4d27      	ldr	r5, [pc, #156]	; (8000fb4 <MX_GPIO_Init+0xb4>)

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 8000f18:	4e27      	ldr	r6, [pc, #156]	; (8000fb8 <MX_GPIO_Init+0xb8>)
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000f1a:	f042 0201 	orr.w	r2, r2, #1
 8000f1e:	631a      	str	r2, [r3, #48]	; 0x30
 8000f20:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000f22:	f002 0201 	and.w	r2, r2, #1
 8000f26:	9201      	str	r2, [sp, #4]
 8000f28:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000f2a:	9402      	str	r4, [sp, #8]
 8000f2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000f2e:	f042 0204 	orr.w	r2, r2, #4
 8000f32:	631a      	str	r2, [r3, #48]	; 0x30
 8000f34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000f36:	f002 0204 	and.w	r2, r2, #4
 8000f3a:	9202      	str	r2, [sp, #8]
 8000f3c:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000f3e:	9403      	str	r4, [sp, #12]
 8000f40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000f42:	f042 0208 	orr.w	r2, r2, #8
 8000f46:	631a      	str	r2, [r3, #48]	; 0x30
 8000f48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f4a:	f003 0308 	and.w	r3, r3, #8
 8000f4e:	9303      	str	r3, [sp, #12]
  HAL_GPIO_WritePin(GPIOA, LED0_Pin|SEL_Pin, GPIO_PIN_RESET);
 8000f50:	4622      	mov	r2, r4
 8000f52:	4628      	mov	r0, r5
 8000f54:	2122      	movs	r1, #34	; 0x22
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000f56:	9b03      	ldr	r3, [sp, #12]
  HAL_GPIO_WritePin(GPIOA, LED0_Pin|SEL_Pin, GPIO_PIN_RESET);
 8000f58:	f000 fdca 	bl	8001af0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 8000f5c:	4622      	mov	r2, r4
 8000f5e:	4630      	mov	r0, r6
 8000f60:	2120      	movs	r1, #32
 8000f62:	f000 fdc5 	bl	8001af0 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PAPin PAPin */
  GPIO_InitStruct.Pin = LED0_Pin|SEL_Pin;
 8000f66:	2400      	movs	r4, #0
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f68:	4628      	mov	r0, r5
  GPIO_InitStruct.Pin = LED0_Pin|SEL_Pin;
 8000f6a:	2222      	movs	r2, #34	; 0x22
 8000f6c:	2500      	movs	r5, #0
 8000f6e:	2301      	movs	r3, #1
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f70:	a904      	add	r1, sp, #16
  GPIO_InitStruct.Pin = LED0_Pin|SEL_Pin;
 8000f72:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8000f76:	e9cd 4506 	strd	r4, r5, [sp, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f7a:	f000 fc99 	bl	80018b0 <HAL_GPIO_Init>
  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LED1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(LED1_GPIO_Port, &GPIO_InitStruct);
 8000f7e:	4630      	mov	r0, r6
 8000f80:	a904      	add	r1, sp, #16
  GPIO_InitStruct.Pin = LED1_Pin;
 8000f82:	2220      	movs	r2, #32
 8000f84:	2301      	movs	r3, #1
 8000f86:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8000f8a:	e9cd 4506 	strd	r4, r5, [sp, #24]
  HAL_GPIO_Init(LED1_GPIO_Port, &GPIO_InitStruct);
 8000f8e:	f000 fc8f 	bl	80018b0 <HAL_GPIO_Init>

  /*Configure GPIO pin : PD14 */
  GPIO_InitStruct.Pin = GPIO_PIN_14;
 8000f92:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000f96:	2302      	movs	r3, #2
 8000f98:	e9cd 2304 	strd	r2, r3, [sp, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000f9c:	4807      	ldr	r0, [pc, #28]	; (8000fbc <MX_GPIO_Init+0xbc>)
  GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8000f9e:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000fa0:	a904      	add	r1, sp, #16
  GPIO_InitStruct.Pin = GPIO_PIN_14;
 8000fa2:	e9cd 4506 	strd	r4, r5, [sp, #24]
  GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8000fa6:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000fa8:	f000 fc82 	bl	80018b0 <HAL_GPIO_Init>

}
 8000fac:	b00a      	add	sp, #40	; 0x28
 8000fae:	bd70      	pop	{r4, r5, r6, pc}
 8000fb0:	40023800 	.word	0x40023800
 8000fb4:	40020000 	.word	0x40020000
 8000fb8:	40020800 	.word	0x40020800
 8000fbc:	40020c00 	.word	0x40020c00

08000fc0 <aiInit>:
void SystemClock_Config(void);
/* USER CODE BEGIN PFP */
/*
 * Bootstrap
 */
int aiInit(void) {
 8000fc0:	b510      	push	{r4, lr}
 8000fc2:	b082      	sub	sp, #8
    ai_error err;

    /* Create and initialize the c-model */
    const ai_handle acts[] = {activations};
 8000fc4:	4b0f      	ldr	r3, [pc, #60]	; (8001004 <aiInit+0x44>)
    err = ai_network_create_and_init(&network, acts, NULL);
 8000fc6:	4810      	ldr	r0, [pc, #64]	; (8001008 <aiInit+0x48>)
    const ai_handle acts[] = {activations};
 8000fc8:	9301      	str	r3, [sp, #4]
    err = ai_network_create_and_init(&network, acts, NULL);
 8000fca:	2200      	movs	r2, #0
 8000fcc:	a901      	add	r1, sp, #4
 8000fce:	f001 fe01 	bl	8002bd4 <ai_network_create_and_init>
    if (err.type != AI_ERROR_NONE) {
 8000fd2:	b2c0      	uxtb	r0, r0
 8000fd4:	b988      	cbnz	r0, 8000ffa <aiInit+0x3a>
        printf("Error INIT AI Network!\r\n");
    };

    /* Reteive pointers to the model's input/output tensors */
    ai_input = ai_network_inputs_get(network, NULL);
 8000fd6:	4c0c      	ldr	r4, [pc, #48]	; (8001008 <aiInit+0x48>)
 8000fd8:	2100      	movs	r1, #0
 8000fda:	6820      	ldr	r0, [r4, #0]
 8000fdc:	f001 fd38 	bl	8002a50 <ai_network_inputs_get>
 8000fe0:	4b0a      	ldr	r3, [pc, #40]	; (800100c <aiInit+0x4c>)
 8000fe2:	4602      	mov	r2, r0
    ai_output = ai_network_outputs_get(network, NULL);
 8000fe4:	2100      	movs	r1, #0
 8000fe6:	6820      	ldr	r0, [r4, #0]
    ai_input = ai_network_inputs_get(network, NULL);
 8000fe8:	601a      	str	r2, [r3, #0]
    ai_output = ai_network_outputs_get(network, NULL);
 8000fea:	f001 fd3d 	bl	8002a68 <ai_network_outputs_get>
 8000fee:	4b08      	ldr	r3, [pc, #32]	; (8001010 <aiInit+0x50>)
 8000ff0:	4602      	mov	r2, r0

    return 0;
}
 8000ff2:	2000      	movs	r0, #0
    ai_output = ai_network_outputs_get(network, NULL);
 8000ff4:	601a      	str	r2, [r3, #0]
}
 8000ff6:	b002      	add	sp, #8
 8000ff8:	bd10      	pop	{r4, pc}
        printf("Error INIT AI Network!\r\n");
 8000ffa:	4806      	ldr	r0, [pc, #24]	; (8001014 <aiInit+0x54>)
 8000ffc:	f004 f962 	bl	80052c4 <puts>
 8001000:	e7e9      	b.n	8000fd6 <aiInit+0x16>
 8001002:	bf00      	nop
 8001004:	20001140 	.word	0x20001140
 8001008:	20001368 	.word	0x20001368
 800100c:	20001340 	.word	0x20001340
 8001010:	20001344 	.word	0x20001344
 8001014:	08009910 	.word	0x08009910

08001018 <SystemClock_Config>:

/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void) {
 8001018:	b510      	push	{r4, lr}
    RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800101a:	2300      	movs	r3, #0
void SystemClock_Config(void) {
 800101c:	b094      	sub	sp, #80	; 0x50
    RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800101e:	e9cd 3309 	strd	r3, r3, [sp, #36]	; 0x24
    RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001022:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001026:	e9cd 3304 	strd	r3, r3, [sp, #16]

    /** Configure the main internal regulator output voltage
    */
    __HAL_RCC_PWR_CLK_ENABLE();
 800102a:	4923      	ldr	r1, [pc, #140]	; (80010b8 <SystemClock_Config+0xa0>)
 800102c:	9300      	str	r3, [sp, #0]
    RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800102e:	9306      	str	r3, [sp, #24]
    __HAL_RCC_PWR_CLK_ENABLE();
 8001030:	6c08      	ldr	r0, [r1, #64]	; 0x40
    __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001032:	4a22      	ldr	r2, [pc, #136]	; (80010bc <SystemClock_Config+0xa4>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8001034:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001038:	6408      	str	r0, [r1, #64]	; 0x40
 800103a:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800103c:	f001 5180 	and.w	r1, r1, #268435456	; 0x10000000
 8001040:	9100      	str	r1, [sp, #0]
 8001042:	9900      	ldr	r1, [sp, #0]
    __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001044:	9301      	str	r3, [sp, #4]
 8001046:	6811      	ldr	r1, [r2, #0]
 8001048:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800104c:	6011      	str	r1, [r2, #0]
 800104e:	6812      	ldr	r2, [r2, #0]
    RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI | RCC_OSCILLATORTYPE_LSI;
    RCC_OscInitStruct.HSIState = RCC_HSI_ON;
    RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
    RCC_OscInitStruct.LSIState = RCC_LSI_ON;
    RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
    RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001050:	930f      	str	r3, [sp, #60]	; 0x3c
    __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001052:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
    RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001056:	2001      	movs	r0, #1
    __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001058:	9201      	str	r2, [sp, #4]
    RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800105a:	2210      	movs	r2, #16
 800105c:	e9cd 020b 	strd	r0, r2, [sp, #44]	; 0x2c
    RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001060:	2302      	movs	r3, #2
    RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI | RCC_OSCILLATORTYPE_LSI;
 8001062:	210a      	movs	r1, #10
    RCC_OscInitStruct.PLL.PLLM = 8;
 8001064:	2208      	movs	r2, #8
    RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001066:	e9cd 030d 	strd	r0, r3, [sp, #52]	; 0x34
    RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI | RCC_OSCILLATORTYPE_LSI;
 800106a:	9108      	str	r1, [sp, #32]
    RCC_OscInitStruct.PLL.PLLM = 8;
 800106c:	9210      	str	r2, [sp, #64]	; 0x40
    RCC_OscInitStruct.PLL.PLLN = 168;
 800106e:	21a8      	movs	r1, #168	; 0xa8
    RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
    RCC_OscInitStruct.PLL.PLLQ = 7;
 8001070:	2207      	movs	r2, #7
    if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8001072:	a808      	add	r0, sp, #32
    RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001074:	e9cd 1311 	strd	r1, r3, [sp, #68]	; 0x44
    __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001078:	9c01      	ldr	r4, [sp, #4]
    RCC_OscInitStruct.PLL.PLLQ = 7;
 800107a:	9213      	str	r2, [sp, #76]	; 0x4c
    if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 800107c:	f000 fd46 	bl	8001b0c <HAL_RCC_OscConfig>
 8001080:	b108      	cbz	r0, 8001086 <SystemClock_Config+0x6e>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001082:	b672      	cpsid	i
  */
void Error_Handler(void) {
    /* USER CODE BEGIN Error_Handler_Debug */
    /* User can add his own implementation to report the HAL error return state */
    __disable_irq();
    while (1) {
 8001084:	e7fe      	b.n	8001084 <SystemClock_Config+0x6c>
    RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 8001086:	ed9f 7b0a 	vldr	d7, [pc, #40]	; 80010b0 <SystemClock_Config+0x98>
 800108a:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800108e:	2200      	movs	r2, #0
 8001090:	e9cd 2304 	strd	r2, r3, [sp, #16]
    if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 8001094:	a802      	add	r0, sp, #8
    RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001096:	f44f 5380 	mov.w	r3, #4096	; 0x1000
    if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 800109a:	2105      	movs	r1, #5
    RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 800109c:	ed8d 7b02 	vstr	d7, [sp, #8]
    RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80010a0:	9306      	str	r3, [sp, #24]
    if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 80010a2:	f000 ff4b 	bl	8001f3c <HAL_RCC_ClockConfig>
 80010a6:	b108      	cbz	r0, 80010ac <SystemClock_Config+0x94>
 80010a8:	b672      	cpsid	i
    while (1) {
 80010aa:	e7fe      	b.n	80010aa <SystemClock_Config+0x92>
}
 80010ac:	b014      	add	sp, #80	; 0x50
 80010ae:	bd10      	pop	{r4, pc}
 80010b0:	0000000f 	.word	0x0000000f
 80010b4:	00000002 	.word	0x00000002
 80010b8:	40023800 	.word	0x40023800
 80010bc:	40007000 	.word	0x40007000

080010c0 <main>:
int main(void) {
 80010c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80010c4:	ed2d 8b04 	vpush	{d8-d9}
 80010c8:	b0cb      	sub	sp, #300	; 0x12c
    HAL_Init();
 80010ca:	f000 fb27 	bl	800171c <HAL_Init>
    SystemClock_Config();
 80010ce:	f7ff ffa3 	bl	8001018 <SystemClock_Config>
    MX_GPIO_Init();
 80010d2:	f7ff ff15 	bl	8000f00 <MX_GPIO_Init>
    MX_USART1_UART_Init();
 80010d6:	f000 fa7b 	bl	80015d0 <MX_USART1_UART_Init>
    MX_TIM3_Init();
 80010da:	f000 f97d 	bl	80013d8 <MX_TIM3_Init>
    MX_RNG_Init();
 80010de:	f000 f8ed 	bl	80012bc <MX_RNG_Init>
    MX_CRC_Init();
 80010e2:	f7ff fee3 	bl	8000eac <MX_CRC_Init>
    MX_TIM5_Init();
 80010e6:	f000 f9b3 	bl	8001450 <MX_TIM5_Init>
    HAL_TIM_Base_Start_IT(&htim3);
 80010ea:	4860      	ldr	r0, [pc, #384]	; (800126c <main+0x1ac>)
 80010ec:	4e60      	ldr	r6, [pc, #384]	; (8001270 <main+0x1b0>)
 80010ee:	f8df b1b8 	ldr.w	fp, [pc, #440]	; 80012a8 <main+0x1e8>
 80010f2:	f8df a1b8 	ldr.w	sl, [pc, #440]	; 80012ac <main+0x1ec>
 80010f6:	4d5f      	ldr	r5, [pc, #380]	; (8001274 <main+0x1b4>)
 80010f8:	f8df 91b4 	ldr.w	r9, [pc, #436]	; 80012b0 <main+0x1f0>
    return min + (randomNumber / (float) UINT32_MAX) * (max - min);
 80010fc:	ed9f 8a5e 	vldr	s16, [pc, #376]	; 8001278 <main+0x1b8>
 8001100:	eddf 9a5e 	vldr	s19, [pc, #376]	; 800127c <main+0x1bc>
 8001104:	ed9f 9a5e 	vldr	s18, [pc, #376]	; 8001280 <main+0x1c0>
 8001108:	eddf 8a5e 	vldr	s17, [pc, #376]	; 8001284 <main+0x1c4>
 800110c:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80012b4 <main+0x1f4>
    HAL_RNG_GenerateRandomNumber(&hrng, &randomNumber);
 8001110:	4f5d      	ldr	r7, [pc, #372]	; (8001288 <main+0x1c8>)
    HAL_TIM_Base_Start_IT(&htim3);
 8001112:	f001 f8af 	bl	8002274 <HAL_TIM_Base_Start_IT>
    aiInit();
 8001116:	ac06      	add	r4, sp, #24
 8001118:	f7ff ff52 	bl	8000fc0 <aiInit>
 800111c:	e02e      	b.n	800117c <main+0xbc>
        if (input_data[i] > maxValue) {
 800111e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8001122:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001126:	f100 8088 	bmi.w	800123a <main+0x17a>
 800112a:	edd5 7a04 	vldr	s15, [r5, #16]
 800112e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001132:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001136:	dc7b      	bgt.n	8001230 <main+0x170>
                sprintf(namaGangguan, "Undervoltage");
 8001138:	4b54      	ldr	r3, [pc, #336]	; (800128c <main+0x1cc>)
 800113a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800113c:	46a4      	mov	ip, r4
 800113e:	e8ac 0007 	stmia.w	ip!, {r0, r1, r2}
 8001142:	f88c 3000 	strb.w	r3, [ip]
        sprintf(buffer, "Invoked (%.2f,%.2f) = %s\r\n", in_data[0], in_data[1],
 8001146:	6830      	ldr	r0, [r6, #0]
 8001148:	f7ff f9fe 	bl	8000548 <__aeabi_f2d>
 800114c:	4602      	mov	r2, r0
 800114e:	460b      	mov	r3, r1
 8001150:	6870      	ldr	r0, [r6, #4]
 8001152:	9402      	str	r4, [sp, #8]
 8001154:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001158:	f7ff f9f6 	bl	8000548 <__aeabi_f2d>
 800115c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001160:	e9cd 0100 	strd	r0, r1, [sp]
 8001164:	494a      	ldr	r1, [pc, #296]	; (8001290 <main+0x1d0>)
 8001166:	a80a      	add	r0, sp, #40	; 0x28
 8001168:	f004 fa68 	bl	800563c <sprintf>
        HAL_GPIO_TogglePin(LED0_GPIO_Port, LED0_Pin);
 800116c:	4849      	ldr	r0, [pc, #292]	; (8001294 <main+0x1d4>)
 800116e:	2102      	movs	r1, #2
 8001170:	f000 fcc2 	bl	8001af8 <HAL_GPIO_TogglePin>
        HAL_Delay(500);
 8001174:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001178:	f000 fafc 	bl	8001774 <HAL_Delay>
    HAL_RNG_GenerateRandomNumber(&hrng, &randomNumber);
 800117c:	4621      	mov	r1, r4
 800117e:	4638      	mov	r0, r7
 8001180:	f000 ffb4 	bl	80020ec <HAL_RNG_GenerateRandomNumber>
    return min + (randomNumber / (float) UINT32_MAX) * (max - min);
 8001184:	edd4 7a00 	vldr	s15, [r4]
 8001188:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800118c:	eeb0 7a49 	vmov.f32	s14, s18
 8001190:	ee67 7a88 	vmul.f32	s15, s15, s16
    HAL_RNG_GenerateRandomNumber(&hrng, &randomNumber);
 8001194:	4621      	mov	r1, r4
    return min + (randomNumber / (float) UINT32_MAX) * (max - min);
 8001196:	eea7 7aa9 	vfma.f32	s14, s15, s19
    HAL_RNG_GenerateRandomNumber(&hrng, &randomNumber);
 800119a:	4638      	mov	r0, r7
        in_data[0] = RandomNumber(0, 120);
 800119c:	ed86 7a00 	vstr	s14, [r6]
    HAL_RNG_GenerateRandomNumber(&hrng, &randomNumber);
 80011a0:	f000 ffa4 	bl	80020ec <HAL_RNG_GenerateRandomNumber>
    return min + (randomNumber / (float) UINT32_MAX) * (max - min);
 80011a4:	edd4 7a00 	vldr	s15, [r4]
    ai_input[0].data = AI_HANDLE_PTR(in_data);
 80011a8:	f8db 1000 	ldr.w	r1, [fp]
    ai_output[0].data = AI_HANDLE_PTR(out_data);
 80011ac:	f8da 2000 	ldr.w	r2, [sl]
    n_batch = ai_network_run(network, &ai_input[0], &ai_output[0]);
 80011b0:	f8d9 0000 	ldr.w	r0, [r9]
    return min + (randomNumber / (float) UINT32_MAX) * (max - min);
 80011b4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80011b8:	eeb3 7a06 	vmov.f32	s14, #54	; 0x41b00000  22.0
 80011bc:	ee67 7a88 	vmul.f32	s15, s15, s16
 80011c0:	eea7 7aa8 	vfma.f32	s14, s15, s17
        in_data[1] = RandomNumber(22, 418);
 80011c4:	ed86 7a01 	vstr	s14, [r6, #4]
    ai_input[0].data = AI_HANDLE_PTR(in_data);
 80011c8:	604e      	str	r6, [r1, #4]
    ai_output[0].data = AI_HANDLE_PTR(out_data);
 80011ca:	6055      	str	r5, [r2, #4]
    n_batch = ai_network_run(network, &ai_input[0], &ai_output[0]);
 80011cc:	f001 fd5a 	bl	8002c84 <ai_network_run>
    if (n_batch != 1) {
 80011d0:	2801      	cmp	r0, #1
 80011d2:	d140      	bne.n	8001256 <main+0x196>
    ai_float maxValue = input_data[0];
 80011d4:	edd5 7a00 	vldr	s15, [r5]
        if (input_data[i] > maxValue) {
 80011d8:	ed95 7a01 	vldr	s14, [r5, #4]
 80011dc:	edd5 6a03 	vldr	s13, [r5, #12]
 80011e0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80011e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80011e8:	bf48      	it	mi
 80011ea:	eef0 7a47 	vmovmi.f32	s15, s14
 80011ee:	ed95 7a02 	vldr	s14, [r5, #8]
 80011f2:	eef4 7ac7 	vcmpe.f32	s15, s14
    for (int i = 1; i < len; i++) {
 80011f6:	bf4c      	ite	mi
 80011f8:	2301      	movmi	r3, #1
    int maxIndex = 0;
 80011fa:	2300      	movpl	r3, #0
        if (input_data[i] > maxValue) {
 80011fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001200:	d48d      	bmi.n	800111e <main+0x5e>
 8001202:	eef4 7ae6 	vcmpe.f32	s15, s13
 8001206:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800120a:	d416      	bmi.n	800123a <main+0x17a>
 800120c:	ed95 7a04 	vldr	s14, [r5, #16]
 8001210:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001214:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001218:	d40a      	bmi.n	8001230 <main+0x170>
        switch (gangguan) {
 800121a:	bb23      	cbnz	r3, 8001266 <main+0x1a6>
                sprintf(namaGangguan, "Normal");
 800121c:	4b1e      	ldr	r3, [pc, #120]	; (8001298 <main+0x1d8>)
 800121e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8001222:	6020      	str	r0, [r4, #0]
 8001224:	f8ad 101c 	strh.w	r1, [sp, #28]
 8001228:	0c09      	lsrs	r1, r1, #16
 800122a:	f88d 101e 	strb.w	r1, [sp, #30]
                break;
 800122e:	e78a      	b.n	8001146 <main+0x86>
                sprintf(namaGangguan, "Overvoltage");
 8001230:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8001234:	e884 0007 	stmia.w	r4, {r0, r1, r2}
                break;
 8001238:	e785      	b.n	8001146 <main+0x86>
        if (input_data[i] > maxValue) {
 800123a:	edd5 7a04 	vldr	s15, [r5, #16]
 800123e:	eef4 7ae6 	vcmpe.f32	s15, s13
 8001242:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001246:	dcf3      	bgt.n	8001230 <main+0x170>
                sprintf(namaGangguan, "Swell");
 8001248:	4b14      	ldr	r3, [pc, #80]	; (800129c <main+0x1dc>)
 800124a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800124e:	6020      	str	r0, [r4, #0]
 8001250:	f8ad 101c 	strh.w	r1, [sp, #28]
                break;
 8001254:	e777      	b.n	8001146 <main+0x86>
        err = ai_network_get_error(network);
 8001256:	f8d9 0000 	ldr.w	r0, [r9]
 800125a:	f001 fbf7 	bl	8002a4c <ai_network_get_error>
        printf("Error Invoking Network!!\r\n");
 800125e:	4810      	ldr	r0, [pc, #64]	; (80012a0 <main+0x1e0>)
 8001260:	f004 f830 	bl	80052c4 <puts>
        return 1;
 8001264:	e7b6      	b.n	80011d4 <main+0x114>
                sprintf(namaGangguan, "Sag");
 8001266:	4b0f      	ldr	r3, [pc, #60]	; (80012a4 <main+0x1e4>)
 8001268:	6023      	str	r3, [r4, #0]
                break;
 800126a:	e76c      	b.n	8001146 <main+0x86>
 800126c:	200013a8 	.word	0x200013a8
 8001270:	20001360 	.word	0x20001360
 8001274:	20001380 	.word	0x20001380
 8001278:	2f800000 	.word	0x2f800000
 800127c:	42f00000 	.word	0x42f00000
 8001280:	00000000 	.word	0x00000000
 8001284:	43c60000 	.word	0x43c60000
 8001288:	20001394 	.word	0x20001394
 800128c:	08009960 	.word	0x08009960
 8001290:	08009970 	.word	0x08009970
 8001294:	40020000 	.word	0x40020000
 8001298:	08009958 	.word	0x08009958
 800129c:	08009944 	.word	0x08009944
 80012a0:	08009928 	.word	0x08009928
 80012a4:	00676153 	.word	0x00676153
 80012a8:	20001340 	.word	0x20001340
 80012ac:	20001344 	.word	0x20001344
 80012b0:	20001368 	.word	0x20001368
 80012b4:	0800994c 	.word	0x0800994c

080012b8 <Error_Handler>:
 80012b8:	b672      	cpsid	i
    while (1) {
 80012ba:	e7fe      	b.n	80012ba <Error_Handler+0x2>

080012bc <MX_RNG_Init>:
  /* USER CODE END RNG_Init 0 */

  /* USER CODE BEGIN RNG_Init 1 */

  /* USER CODE END RNG_Init 1 */
  hrng.Instance = RNG;
 80012bc:	4805      	ldr	r0, [pc, #20]	; (80012d4 <MX_RNG_Init+0x18>)
{
 80012be:	b508      	push	{r3, lr}
  hrng.Instance = RNG;
 80012c0:	4b05      	ldr	r3, [pc, #20]	; (80012d8 <MX_RNG_Init+0x1c>)
 80012c2:	6003      	str	r3, [r0, #0]
  if (HAL_RNG_Init(&hrng) != HAL_OK)
 80012c4:	f000 fef8 	bl	80020b8 <HAL_RNG_Init>
 80012c8:	b900      	cbnz	r0, 80012cc <MX_RNG_Init+0x10>
  }
  /* USER CODE BEGIN RNG_Init 2 */

  /* USER CODE END RNG_Init 2 */

}
 80012ca:	bd08      	pop	{r3, pc}
 80012cc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 80012d0:	f7ff bff2 	b.w	80012b8 <Error_Handler>
 80012d4:	20001394 	.word	0x20001394
 80012d8:	50060800 	.word	0x50060800

080012dc <HAL_RNG_MspInit>:

void HAL_RNG_MspInit(RNG_HandleTypeDef* rngHandle)
{

  if(rngHandle->Instance==RNG)
 80012dc:	4b09      	ldr	r3, [pc, #36]	; (8001304 <HAL_RNG_MspInit+0x28>)
 80012de:	6802      	ldr	r2, [r0, #0]
 80012e0:	429a      	cmp	r2, r3
 80012e2:	d000      	beq.n	80012e6 <HAL_RNG_MspInit+0xa>
 80012e4:	4770      	bx	lr
{
 80012e6:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN RNG_MspInit 0 */

  /* USER CODE END RNG_MspInit 0 */
    /* RNG clock enable */
    __HAL_RCC_RNG_CLK_ENABLE();
 80012e8:	4b07      	ldr	r3, [pc, #28]	; (8001308 <HAL_RNG_MspInit+0x2c>)
 80012ea:	2200      	movs	r2, #0
 80012ec:	9201      	str	r2, [sp, #4]
 80012ee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80012f0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80012f4:	635a      	str	r2, [r3, #52]	; 0x34
 80012f6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80012f8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80012fc:	9301      	str	r3, [sp, #4]
 80012fe:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN RNG_MspInit 1 */

  /* USER CODE END RNG_MspInit 1 */
  }
}
 8001300:	b002      	add	sp, #8
 8001302:	4770      	bx	lr
 8001304:	50060800 	.word	0x50060800
 8001308:	40023800 	.word	0x40023800

0800130c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800130c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800130e:	4b0c      	ldr	r3, [pc, #48]	; (8001340 <HAL_MspInit+0x34>)
 8001310:	2100      	movs	r1, #0
 8001312:	9100      	str	r1, [sp, #0]
 8001314:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001316:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800131a:	645a      	str	r2, [r3, #68]	; 0x44
 800131c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800131e:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8001322:	9200      	str	r2, [sp, #0]
 8001324:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001326:	9101      	str	r1, [sp, #4]
 8001328:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800132a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800132e:	641a      	str	r2, [r3, #64]	; 0x40
 8001330:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001332:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001336:	9301      	str	r3, [sp, #4]
 8001338:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800133a:	b002      	add	sp, #8
 800133c:	4770      	bx	lr
 800133e:	bf00      	nop
 8001340:	40023800 	.word	0x40023800

08001344 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001344:	e7fe      	b.n	8001344 <NMI_Handler>
 8001346:	bf00      	nop

08001348 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001348:	e7fe      	b.n	8001348 <HardFault_Handler>
 800134a:	bf00      	nop

0800134c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800134c:	e7fe      	b.n	800134c <MemManage_Handler>
 800134e:	bf00      	nop

08001350 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001350:	e7fe      	b.n	8001350 <BusFault_Handler>
 8001352:	bf00      	nop

08001354 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001354:	e7fe      	b.n	8001354 <UsageFault_Handler>
 8001356:	bf00      	nop

08001358 <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001358:	4770      	bx	lr
 800135a:	bf00      	nop

0800135c <DebugMon_Handler>:
 800135c:	4770      	bx	lr
 800135e:	bf00      	nop

08001360 <PendSV_Handler>:
 8001360:	4770      	bx	lr
 8001362:	bf00      	nop

08001364 <SysTick_Handler>:
void SysTick_Handler(void)
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001364:	f000 b9f4 	b.w	8001750 <HAL_IncTick>

08001368 <TIM3_IRQHandler>:
void TIM3_IRQHandler(void)
{
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001368:	4801      	ldr	r0, [pc, #4]	; (8001370 <TIM3_IRQHandler+0x8>)
 800136a:	f001 b9e7 	b.w	800273c <HAL_TIM_IRQHandler>
 800136e:	bf00      	nop
 8001370:	200013a8 	.word	0x200013a8

08001374 <TIM5_IRQHandler>:
void TIM5_IRQHandler(void)
{
  /* USER CODE BEGIN TIM5_IRQn 0 */

  /* USER CODE END TIM5_IRQn 0 */
  HAL_TIM_IRQHandler(&htim5);
 8001374:	4801      	ldr	r0, [pc, #4]	; (800137c <TIM5_IRQHandler+0x8>)
 8001376:	f001 b9e1 	b.w	800273c <HAL_TIM_IRQHandler>
 800137a:	bf00      	nop
 800137c:	200013f0 	.word	0x200013f0

08001380 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001380:	b510      	push	{r4, lr}
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001382:	4c0c      	ldr	r4, [pc, #48]	; (80013b4 <_sbrk+0x34>)
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001384:	4b0c      	ldr	r3, [pc, #48]	; (80013b8 <_sbrk+0x38>)
 8001386:	490d      	ldr	r1, [pc, #52]	; (80013bc <_sbrk+0x3c>)
  if (NULL == __sbrk_heap_end)
 8001388:	6822      	ldr	r2, [r4, #0]
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800138a:	1a59      	subs	r1, r3, r1
  if (NULL == __sbrk_heap_end)
 800138c:	b12a      	cbz	r2, 800139a <_sbrk+0x1a>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800138e:	4410      	add	r0, r2
 8001390:	4288      	cmp	r0, r1
 8001392:	d807      	bhi.n	80013a4 <_sbrk+0x24>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 8001394:	6020      	str	r0, [r4, #0]

  return (void *)prev_heap_end;
}
 8001396:	4610      	mov	r0, r2
 8001398:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 800139a:	4a09      	ldr	r2, [pc, #36]	; (80013c0 <_sbrk+0x40>)
 800139c:	6022      	str	r2, [r4, #0]
  if (__sbrk_heap_end + incr > max_heap)
 800139e:	4410      	add	r0, r2
 80013a0:	4288      	cmp	r0, r1
 80013a2:	d9f7      	bls.n	8001394 <_sbrk+0x14>
    errno = ENOMEM;
 80013a4:	f003 fcc0 	bl	8004d28 <__errno>
 80013a8:	230c      	movs	r3, #12
    return (void *)-1;
 80013aa:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    errno = ENOMEM;
 80013ae:	6003      	str	r3, [r0, #0]
}
 80013b0:	4610      	mov	r0, r2
 80013b2:	bd10      	pop	{r4, pc}
 80013b4:	200013a4 	.word	0x200013a4
 80013b8:	2001c000 	.word	0x2001c000
 80013bc:	00001000 	.word	0x00001000
 80013c0:	20001550 	.word	0x20001550

080013c4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80013c4:	4a03      	ldr	r2, [pc, #12]	; (80013d4 <SystemInit+0x10>)
 80013c6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80013ca:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80013ce:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80013d2:	4770      	bx	lr
 80013d4:	e000ed00 	.word	0xe000ed00

080013d8 <MX_TIM3_Init>:
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim5;

/* TIM3 init function */
void MX_TIM3_Init(void)
{
 80013d8:	b500      	push	{lr}
  TIM_MasterConfigTypeDef sMasterConfig = {0};

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80013da:	481a      	ldr	r0, [pc, #104]	; (8001444 <MX_TIM3_Init+0x6c>)
 80013dc:	4a1a      	ldr	r2, [pc, #104]	; (8001448 <MX_TIM3_Init+0x70>)
 80013de:	6002      	str	r2, [r0, #0]
  htim3.Init.Prescaler = 169;
 80013e0:	22a9      	movs	r2, #169	; 0xa9
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80013e2:	2300      	movs	r3, #0
  htim3.Init.Prescaler = 169;
 80013e4:	6042      	str	r2, [r0, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim3.Init.Period = 99;
 80013e6:	2263      	movs	r2, #99	; 0x63
{
 80013e8:	b087      	sub	sp, #28
  htim3.Init.Period = 99;
 80013ea:	e9c0 3202 	strd	r3, r2, [r0, #8]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80013ee:	2280      	movs	r2, #128	; 0x80
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80013f0:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80013f4:	e9cd 3304 	strd	r3, r3, [sp, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80013f8:	e9cd 3300 	strd	r3, r3, [sp]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80013fc:	6103      	str	r3, [r0, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80013fe:	6182      	str	r2, [r0, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001400:	f000 feaa 	bl	8002158 <HAL_TIM_Base_Init>
 8001404:	b998      	cbnz	r0, 800142e <MX_TIM3_Init+0x56>
  {
    Error_Handler();
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001406:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800140a:	480e      	ldr	r0, [pc, #56]	; (8001444 <MX_TIM3_Init+0x6c>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800140c:	9302      	str	r3, [sp, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800140e:	a902      	add	r1, sp, #8
 8001410:	f001 f8da 	bl	80025c8 <HAL_TIM_ConfigClockSource>
 8001414:	b998      	cbnz	r0, 800143e <MX_TIM3_Init+0x66>
  {
    Error_Handler();
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 8001416:	2220      	movs	r2, #32
 8001418:	2300      	movs	r3, #0
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800141a:	480a      	ldr	r0, [pc, #40]	; (8001444 <MX_TIM3_Init+0x6c>)
 800141c:	4669      	mov	r1, sp
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 800141e:	e9cd 2300 	strd	r2, r3, [sp]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001422:	f001 fa35 	bl	8002890 <HAL_TIMEx_MasterConfigSynchronization>
 8001426:	b928      	cbnz	r0, 8001434 <MX_TIM3_Init+0x5c>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8001428:	b007      	add	sp, #28
 800142a:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 800142e:	f7ff ff43 	bl	80012b8 <Error_Handler>
 8001432:	e7e8      	b.n	8001406 <MX_TIM3_Init+0x2e>
    Error_Handler();
 8001434:	f7ff ff40 	bl	80012b8 <Error_Handler>
}
 8001438:	b007      	add	sp, #28
 800143a:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 800143e:	f7ff ff3b 	bl	80012b8 <Error_Handler>
 8001442:	e7e8      	b.n	8001416 <MX_TIM3_Init+0x3e>
 8001444:	200013a8 	.word	0x200013a8
 8001448:	40000400 	.word	0x40000400
 800144c:	00000000 	.word	0x00000000

08001450 <MX_TIM5_Init>:
/* TIM5 init function */
void MX_TIM5_Init(void)
{
 8001450:	b500      	push	{lr}
  TIM_IC_InitTypeDef sConfigIC = {0};

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8001452:	4831      	ldr	r0, [pc, #196]	; (8001518 <MX_TIM5_Init+0xc8>)
  htim5.Init.Prescaler = 168;
 8001454:	4a31      	ldr	r2, [pc, #196]	; (800151c <MX_TIM5_Init+0xcc>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001456:	2300      	movs	r3, #0
{
 8001458:	b08b      	sub	sp, #44	; 0x2c
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800145a:	e9cd 3306 	strd	r3, r3, [sp, #24]
 800145e:	e9cd 3308 	strd	r3, r3, [sp, #32]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001462:	e9cd 3300 	strd	r3, r3, [sp]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8001466:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800146a:	e9cd 3304 	strd	r3, r3, [sp, #16]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 800146e:	6083      	str	r3, [r0, #8]
  htim5.Init.Period = 4294967295;
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001470:	6103      	str	r3, [r0, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001472:	6183      	str	r3, [r0, #24]
  htim5.Init.Prescaler = 168;
 8001474:	23a8      	movs	r3, #168	; 0xa8
 8001476:	e9c0 2300 	strd	r2, r3, [r0]
  htim5.Init.Period = 4294967295;
 800147a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800147e:	60c3      	str	r3, [r0, #12]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8001480:	f000 fe6a 	bl	8002158 <HAL_TIM_Base_Init>
 8001484:	bb60      	cbnz	r0, 80014e0 <MX_TIM5_Init+0x90>
  {
    Error_Handler();
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001486:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 800148a:	4823      	ldr	r0, [pc, #140]	; (8001518 <MX_TIM5_Init+0xc8>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800148c:	9306      	str	r3, [sp, #24]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 800148e:	a906      	add	r1, sp, #24
 8001490:	f001 f89a 	bl	80025c8 <HAL_TIM_ConfigClockSource>
 8001494:	bba8      	cbnz	r0, 8001502 <MX_TIM5_Init+0xb2>
  {
    Error_Handler();
  }
  if (HAL_TIM_IC_Init(&htim5) != HAL_OK)
 8001496:	4820      	ldr	r0, [pc, #128]	; (8001518 <MX_TIM5_Init+0xc8>)
 8001498:	f000 ff2a 	bl	80022f0 <HAL_TIM_IC_Init>
 800149c:	bb70      	cbnz	r0, 80014fc <MX_TIM5_Init+0xac>
  {
    Error_Handler();
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800149e:	2200      	movs	r2, #0
 80014a0:	2300      	movs	r3, #0
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80014a2:	481d      	ldr	r0, [pc, #116]	; (8001518 <MX_TIM5_Init+0xc8>)
 80014a4:	4669      	mov	r1, sp
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80014a6:	e9cd 2300 	strd	r2, r3, [sp]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80014aa:	f001 f9f1 	bl	8002890 <HAL_TIMEx_MasterConfigSynchronization>
 80014ae:	bb10      	cbnz	r0, 80014f6 <MX_TIM5_Init+0xa6>
  {
    Error_Handler();
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 80014b0:	ed9f 7b15 	vldr	d7, [pc, #84]	; 8001508 <MX_TIM5_Init+0xb8>
 80014b4:	ed8d 7b02 	vstr	d7, [sp, #8]
 80014b8:	ed9f 7b15 	vldr	d7, [pc, #84]	; 8001510 <MX_TIM5_Init+0xc0>
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
  sConfigIC.ICFilter = 0;
  if (HAL_TIM_IC_ConfigChannel(&htim5, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 80014bc:	2208      	movs	r2, #8
 80014be:	4816      	ldr	r0, [pc, #88]	; (8001518 <MX_TIM5_Init+0xc8>)
 80014c0:	eb0d 0102 	add.w	r1, sp, r2
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 80014c4:	ed8d 7b04 	vstr	d7, [sp, #16]
  if (HAL_TIM_IC_ConfigChannel(&htim5, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 80014c8:	f000 ffa0 	bl	800240c <HAL_TIM_IC_ConfigChannel>
 80014cc:	b980      	cbnz	r0, 80014f0 <MX_TIM5_Init+0xa0>
  {
    Error_Handler();
  }
  if (HAL_TIM_IC_ConfigChannel(&htim5, &sConfigIC, TIM_CHANNEL_4) != HAL_OK)
 80014ce:	4812      	ldr	r0, [pc, #72]	; (8001518 <MX_TIM5_Init+0xc8>)
 80014d0:	220c      	movs	r2, #12
 80014d2:	a902      	add	r1, sp, #8
 80014d4:	f000 ff9a 	bl	800240c <HAL_TIM_IC_ConfigChannel>
 80014d8:	b928      	cbnz	r0, 80014e6 <MX_TIM5_Init+0x96>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 80014da:	b00b      	add	sp, #44	; 0x2c
 80014dc:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80014e0:	f7ff feea 	bl	80012b8 <Error_Handler>
 80014e4:	e7cf      	b.n	8001486 <MX_TIM5_Init+0x36>
    Error_Handler();
 80014e6:	f7ff fee7 	bl	80012b8 <Error_Handler>
}
 80014ea:	b00b      	add	sp, #44	; 0x2c
 80014ec:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 80014f0:	f7ff fee2 	bl	80012b8 <Error_Handler>
 80014f4:	e7eb      	b.n	80014ce <MX_TIM5_Init+0x7e>
    Error_Handler();
 80014f6:	f7ff fedf 	bl	80012b8 <Error_Handler>
 80014fa:	e7d9      	b.n	80014b0 <MX_TIM5_Init+0x60>
    Error_Handler();
 80014fc:	f7ff fedc 	bl	80012b8 <Error_Handler>
 8001500:	e7cd      	b.n	800149e <MX_TIM5_Init+0x4e>
    Error_Handler();
 8001502:	f7ff fed9 	bl	80012b8 <Error_Handler>
 8001506:	e7c6      	b.n	8001496 <MX_TIM5_Init+0x46>
 8001508:	00000000 	.word	0x00000000
 800150c:	00000001 	.word	0x00000001
	...
 8001518:	200013f0 	.word	0x200013f0
 800151c:	40000c00 	.word	0x40000c00

08001520 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8001520:	b510      	push	{r4, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(tim_baseHandle->Instance==TIM3)
 8001522:	6803      	ldr	r3, [r0, #0]
 8001524:	4a26      	ldr	r2, [pc, #152]	; (80015c0 <HAL_TIM_Base_MspInit+0xa0>)
{
 8001526:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001528:	2400      	movs	r4, #0
  if(tim_baseHandle->Instance==TIM3)
 800152a:	4293      	cmp	r3, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800152c:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001530:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001534:	9408      	str	r4, [sp, #32]
  if(tim_baseHandle->Instance==TIM3)
 8001536:	d004      	beq.n	8001542 <HAL_TIM_Base_MspInit+0x22>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(tim_baseHandle->Instance==TIM5)
 8001538:	4a22      	ldr	r2, [pc, #136]	; (80015c4 <HAL_TIM_Base_MspInit+0xa4>)
 800153a:	4293      	cmp	r3, r2
 800153c:	d016      	beq.n	800156c <HAL_TIM_Base_MspInit+0x4c>
    HAL_NVIC_EnableIRQ(TIM5_IRQn);
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }
}
 800153e:	b00a      	add	sp, #40	; 0x28
 8001540:	bd10      	pop	{r4, pc}
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001542:	4b21      	ldr	r3, [pc, #132]	; (80015c8 <HAL_TIM_Base_MspInit+0xa8>)
 8001544:	9401      	str	r4, [sp, #4]
 8001546:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001548:	f041 0102 	orr.w	r1, r1, #2
 800154c:	6419      	str	r1, [r3, #64]	; 0x40
 800154e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001550:	f003 0302 	and.w	r3, r3, #2
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001554:	4622      	mov	r2, r4
 8001556:	4621      	mov	r1, r4
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001558:	9301      	str	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 800155a:	201d      	movs	r0, #29
    __HAL_RCC_TIM3_CLK_ENABLE();
 800155c:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 800155e:	f000 f92d 	bl	80017bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001562:	201d      	movs	r0, #29
 8001564:	f000 f968 	bl	8001838 <HAL_NVIC_EnableIRQ>
}
 8001568:	b00a      	add	sp, #40	; 0x28
 800156a:	bd10      	pop	{r4, pc}
    __HAL_RCC_TIM5_CLK_ENABLE();
 800156c:	4b16      	ldr	r3, [pc, #88]	; (80015c8 <HAL_TIM_Base_MspInit+0xa8>)
 800156e:	9402      	str	r4, [sp, #8]
 8001570:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001572:	4816      	ldr	r0, [pc, #88]	; (80015cc <HAL_TIM_Base_MspInit+0xac>)
    __HAL_RCC_TIM5_CLK_ENABLE();
 8001574:	f042 0208 	orr.w	r2, r2, #8
 8001578:	641a      	str	r2, [r3, #64]	; 0x40
 800157a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800157c:	f002 0208 	and.w	r2, r2, #8
 8001580:	9202      	str	r2, [sp, #8]
 8001582:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001584:	9403      	str	r4, [sp, #12]
 8001586:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001588:	f042 0201 	orr.w	r2, r2, #1
 800158c:	631a      	str	r2, [r3, #48]	; 0x30
 800158e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001590:	f003 0301 	and.w	r3, r3, #1
 8001594:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Pin = CF_Pin|CF1_Pin;
 8001596:	220c      	movs	r2, #12
 8001598:	2302      	movs	r3, #2
 800159a:	e9cd 2304 	strd	r2, r3, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800159e:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 80015a0:	2302      	movs	r3, #2
 80015a2:	9308      	str	r3, [sp, #32]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80015a4:	9a03      	ldr	r2, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015a6:	f000 f983 	bl	80018b0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(TIM5_IRQn, 0, 0);
 80015aa:	4622      	mov	r2, r4
 80015ac:	4621      	mov	r1, r4
 80015ae:	2032      	movs	r0, #50	; 0x32
 80015b0:	f000 f904 	bl	80017bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM5_IRQn);
 80015b4:	2032      	movs	r0, #50	; 0x32
 80015b6:	f000 f93f 	bl	8001838 <HAL_NVIC_EnableIRQ>
}
 80015ba:	b00a      	add	sp, #40	; 0x28
 80015bc:	bd10      	pop	{r4, pc}
 80015be:	bf00      	nop
 80015c0:	40000400 	.word	0x40000400
 80015c4:	40000c00 	.word	0x40000c00
 80015c8:	40023800 	.word	0x40023800
 80015cc:	40020000 	.word	0x40020000

080015d0 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 80015d0:	b510      	push	{r4, lr}
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80015d2:	480b      	ldr	r0, [pc, #44]	; (8001600 <MX_USART1_UART_Init+0x30>)
 80015d4:	4c0b      	ldr	r4, [pc, #44]	; (8001604 <MX_USART1_UART_Init+0x34>)
  huart1.Init.BaudRate = 230400;
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80015d6:	2300      	movs	r3, #0
  huart1.Init.BaudRate = 230400;
 80015d8:	f44f 3161 	mov.w	r1, #230400	; 0x38400
  huart1.Init.StopBits = UART_STOPBITS_1;
  huart1.Init.Parity = UART_PARITY_NONE;
  huart1.Init.Mode = UART_MODE_TX_RX;
 80015dc:	220c      	movs	r2, #12
  huart1.Init.BaudRate = 230400;
 80015de:	e9c0 4100 	strd	r4, r1, [r0]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80015e2:	e9c0 3302 	strd	r3, r3, [r0, #8]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80015e6:	e9c0 3204 	strd	r3, r2, [r0, #16]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80015ea:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80015ee:	f001 f993 	bl	8002918 <HAL_UART_Init>
 80015f2:	b900      	cbnz	r0, 80015f6 <MX_USART1_UART_Init+0x26>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80015f4:	bd10      	pop	{r4, pc}
 80015f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Error_Handler();
 80015fa:	f7ff be5d 	b.w	80012b8 <Error_Handler>
 80015fe:	bf00      	nop
 8001600:	20001438 	.word	0x20001438
 8001604:	40011000 	.word	0x40011000

08001608 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8001608:	b510      	push	{r4, lr}

  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(uartHandle->Instance==USART1)
 800160a:	4a1b      	ldr	r2, [pc, #108]	; (8001678 <HAL_UART_MspInit+0x70>)
 800160c:	6801      	ldr	r1, [r0, #0]
{
 800160e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001610:	2300      	movs	r3, #0
  if(uartHandle->Instance==USART1)
 8001612:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001614:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001618:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800161c:	9306      	str	r3, [sp, #24]
  if(uartHandle->Instance==USART1)
 800161e:	d001      	beq.n	8001624 <HAL_UART_MspInit+0x1c>

  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8001620:	b008      	add	sp, #32
 8001622:	bd10      	pop	{r4, pc}
    __HAL_RCC_USART1_CLK_ENABLE();
 8001624:	f502 3294 	add.w	r2, r2, #75776	; 0x12800
 8001628:	9300      	str	r3, [sp, #0]
 800162a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800162c:	f040 0010 	orr.w	r0, r0, #16
 8001630:	6450      	str	r0, [r2, #68]	; 0x44
 8001632:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001634:	f000 0010 	and.w	r0, r0, #16
 8001638:	9000      	str	r0, [sp, #0]
 800163a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800163c:	9301      	str	r3, [sp, #4]
 800163e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001640:	480e      	ldr	r0, [pc, #56]	; (800167c <HAL_UART_MspInit+0x74>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001642:	f043 0301 	orr.w	r3, r3, #1
 8001646:	6313      	str	r3, [r2, #48]	; 0x30
 8001648:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 800164a:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001670 <HAL_UART_MspInit+0x68>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800164e:	f003 0301 	and.w	r3, r3, #1
 8001652:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001654:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001656:	2307      	movs	r3, #7
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001658:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 800165a:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800165e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001662:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001664:	f000 f924 	bl	80018b0 <HAL_GPIO_Init>
}
 8001668:	b008      	add	sp, #32
 800166a:	bd10      	pop	{r4, pc}
 800166c:	f3af 8000 	nop.w
 8001670:	00000600 	.word	0x00000600
 8001674:	00000002 	.word	0x00000002
 8001678:	40011000 	.word	0x40011000
 800167c:	40020000 	.word	0x40020000

08001680 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8001680:	f8df d034 	ldr.w	sp, [pc, #52]	; 80016b8 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001684:	480d      	ldr	r0, [pc, #52]	; (80016bc <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8001686:	490e      	ldr	r1, [pc, #56]	; (80016c0 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8001688:	4a0e      	ldr	r2, [pc, #56]	; (80016c4 <LoopFillZerobss+0x1e>)
  movs r3, #0
 800168a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800168c:	e002      	b.n	8001694 <LoopCopyDataInit>

0800168e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800168e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001690:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001692:	3304      	adds	r3, #4

08001694 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001694:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001696:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001698:	d3f9      	bcc.n	800168e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800169a:	4a0b      	ldr	r2, [pc, #44]	; (80016c8 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 800169c:	4c0b      	ldr	r4, [pc, #44]	; (80016cc <LoopFillZerobss+0x26>)
  movs r3, #0
 800169e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80016a0:	e001      	b.n	80016a6 <LoopFillZerobss>

080016a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80016a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80016a4:	3204      	adds	r2, #4

080016a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80016a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80016a8:	d3fb      	bcc.n	80016a2 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 80016aa:	f7ff fe8b 	bl	80013c4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80016ae:	f003 fb41 	bl	8004d34 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80016b2:	f7ff fd05 	bl	80010c0 <main>
  bx  lr    
 80016b6:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80016b8:	2001c000 	.word	0x2001c000
  ldr r0, =_sdata
 80016bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80016c0:	200010e8 	.word	0x200010e8
  ldr r2, =_sidata
 80016c4:	0800e6b8 	.word	0x0800e6b8
  ldr r2, =_sbss
 80016c8:	20001100 	.word	0x20001100
  ldr r4, =_ebss
 80016cc:	20001550 	.word	0x20001550

080016d0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80016d0:	e7fe      	b.n	80016d0 <ADC_IRQHandler>
	...

080016d4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80016d4:	b538      	push	{r3, r4, r5, lr}
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80016d6:	4a0e      	ldr	r2, [pc, #56]	; (8001710 <HAL_InitTick+0x3c>)
 80016d8:	4b0e      	ldr	r3, [pc, #56]	; (8001714 <HAL_InitTick+0x40>)
 80016da:	7812      	ldrb	r2, [r2, #0]
 80016dc:	681b      	ldr	r3, [r3, #0]
{
 80016de:	4605      	mov	r5, r0
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80016e0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80016e4:	fbb0 f0f2 	udiv	r0, r0, r2
 80016e8:	fbb3 f0f0 	udiv	r0, r3, r0
 80016ec:	f000 f8b2 	bl	8001854 <HAL_SYSTICK_Config>
 80016f0:	b908      	cbnz	r0, 80016f6 <HAL_InitTick+0x22>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80016f2:	2d0f      	cmp	r5, #15
 80016f4:	d901      	bls.n	80016fa <HAL_InitTick+0x26>
    return HAL_ERROR;
 80016f6:	2001      	movs	r0, #1
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
}
 80016f8:	bd38      	pop	{r3, r4, r5, pc}
 80016fa:	4604      	mov	r4, r0
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80016fc:	4602      	mov	r2, r0
 80016fe:	4629      	mov	r1, r5
 8001700:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001704:	f000 f85a 	bl	80017bc <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001708:	4b03      	ldr	r3, [pc, #12]	; (8001718 <HAL_InitTick+0x44>)
 800170a:	4620      	mov	r0, r4
 800170c:	601d      	str	r5, [r3, #0]
}
 800170e:	bd38      	pop	{r3, r4, r5, pc}
 8001710:	20000004 	.word	0x20000004
 8001714:	20000000 	.word	0x20000000
 8001718:	20000008 	.word	0x20000008

0800171c <HAL_Init>:
{
 800171c:	b508      	push	{r3, lr}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800171e:	4b0b      	ldr	r3, [pc, #44]	; (800174c <HAL_Init+0x30>)
 8001720:	681a      	ldr	r2, [r3, #0]
 8001722:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001726:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001728:	681a      	ldr	r2, [r3, #0]
 800172a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800172e:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001730:	681a      	ldr	r2, [r3, #0]
 8001732:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001736:	601a      	str	r2, [r3, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001738:	2003      	movs	r0, #3
 800173a:	f000 f82d 	bl	8001798 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 800173e:	200f      	movs	r0, #15
 8001740:	f7ff ffc8 	bl	80016d4 <HAL_InitTick>
  HAL_MspInit();
 8001744:	f7ff fde2 	bl	800130c <HAL_MspInit>
}
 8001748:	2000      	movs	r0, #0
 800174a:	bd08      	pop	{r3, pc}
 800174c:	40023c00 	.word	0x40023c00

08001750 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8001750:	4a03      	ldr	r2, [pc, #12]	; (8001760 <HAL_IncTick+0x10>)
 8001752:	4b04      	ldr	r3, [pc, #16]	; (8001764 <HAL_IncTick+0x14>)
 8001754:	6811      	ldr	r1, [r2, #0]
 8001756:	781b      	ldrb	r3, [r3, #0]
 8001758:	440b      	add	r3, r1
 800175a:	6013      	str	r3, [r2, #0]
}
 800175c:	4770      	bx	lr
 800175e:	bf00      	nop
 8001760:	2000147c 	.word	0x2000147c
 8001764:	20000004 	.word	0x20000004

08001768 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8001768:	4b01      	ldr	r3, [pc, #4]	; (8001770 <HAL_GetTick+0x8>)
 800176a:	6818      	ldr	r0, [r3, #0]
}
 800176c:	4770      	bx	lr
 800176e:	bf00      	nop
 8001770:	2000147c 	.word	0x2000147c

08001774 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001774:	b538      	push	{r3, r4, r5, lr}
 8001776:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8001778:	f7ff fff6 	bl	8001768 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800177c:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800177e:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8001780:	d002      	beq.n	8001788 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8001782:	4b04      	ldr	r3, [pc, #16]	; (8001794 <HAL_Delay+0x20>)
 8001784:	781b      	ldrb	r3, [r3, #0]
 8001786:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8001788:	f7ff ffee 	bl	8001768 <HAL_GetTick>
 800178c:	1b43      	subs	r3, r0, r5
 800178e:	42a3      	cmp	r3, r4
 8001790:	d3fa      	bcc.n	8001788 <HAL_Delay+0x14>
  {
  }
}
 8001792:	bd38      	pop	{r3, r4, r5, pc}
 8001794:	20000004 	.word	0x20000004

08001798 <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001798:	4907      	ldr	r1, [pc, #28]	; (80017b8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800179a:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800179c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800179e:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80017a2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80017a6:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80017a8:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80017aa:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80017ae:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80017b2:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80017b4:	4770      	bx	lr
 80017b6:	bf00      	nop
 80017b8:	e000ed00 	.word	0xe000ed00

080017bc <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80017bc:	4b1c      	ldr	r3, [pc, #112]	; (8001830 <HAL_NVIC_SetPriority+0x74>)
 80017be:	68db      	ldr	r3, [r3, #12]
 80017c0:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80017c4:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80017c6:	f1c3 0e07 	rsb	lr, r3, #7
 80017ca:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80017ce:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80017d2:	bf28      	it	cs
 80017d4:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80017d8:	f1bc 0f06 	cmp.w	ip, #6
 80017dc:	d91b      	bls.n	8001816 <HAL_NVIC_SetPriority+0x5a>
 80017de:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80017e0:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 80017e4:	fa0c fc03 	lsl.w	ip, ip, r3
 80017e8:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80017ec:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 80017f0:	fa0c fc0e 	lsl.w	ip, ip, lr
 80017f4:	ea21 010c 	bic.w	r1, r1, ip
 80017f8:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 80017fa:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80017fc:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8001800:	db0c      	blt.n	800181c <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001802:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8001806:	0109      	lsls	r1, r1, #4
 8001808:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800180c:	b2c9      	uxtb	r1, r1
 800180e:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8001812:	f85d fb04 	ldr.w	pc, [sp], #4
 8001816:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001818:	4613      	mov	r3, r2
 800181a:	e7e7      	b.n	80017ec <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800181c:	4b05      	ldr	r3, [pc, #20]	; (8001834 <HAL_NVIC_SetPriority+0x78>)
 800181e:	f000 000f 	and.w	r0, r0, #15
 8001822:	0109      	lsls	r1, r1, #4
 8001824:	4403      	add	r3, r0
 8001826:	b2c9      	uxtb	r1, r1
 8001828:	7619      	strb	r1, [r3, #24]
 800182a:	f85d fb04 	ldr.w	pc, [sp], #4
 800182e:	bf00      	nop
 8001830:	e000ed00 	.word	0xe000ed00
 8001834:	e000ecfc 	.word	0xe000ecfc

08001838 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8001838:	2800      	cmp	r0, #0
 800183a:	db08      	blt.n	800184e <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800183c:	0941      	lsrs	r1, r0, #5
 800183e:	4a04      	ldr	r2, [pc, #16]	; (8001850 <HAL_NVIC_EnableIRQ+0x18>)
 8001840:	f000 001f 	and.w	r0, r0, #31
 8001844:	2301      	movs	r3, #1
 8001846:	fa03 f000 	lsl.w	r0, r3, r0
 800184a:	f842 0021 	str.w	r0, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800184e:	4770      	bx	lr
 8001850:	e000e100 	.word	0xe000e100

08001854 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001854:	3801      	subs	r0, #1
 8001856:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800185a:	d210      	bcs.n	800187e <HAL_SYSTICK_Config+0x2a>
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800185c:	b410      	push	{r4}
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800185e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001862:	4c08      	ldr	r4, [pc, #32]	; (8001884 <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001864:	6158      	str	r0, [r3, #20]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001866:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 800186a:	f884 c023 	strb.w	ip, [r4, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800186e:	2200      	movs	r2, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001870:	2107      	movs	r1, #7
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001872:	4610      	mov	r0, r2
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001874:	619a      	str	r2, [r3, #24]
   return SysTick_Config(TicksNumb);
}
 8001876:	f85d 4b04 	ldr.w	r4, [sp], #4
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800187a:	6119      	str	r1, [r3, #16]
 800187c:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 800187e:	2001      	movs	r0, #1
 8001880:	4770      	bx	lr
 8001882:	bf00      	nop
 8001884:	e000ed00 	.word	0xe000ed00

08001888 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8001888:	b180      	cbz	r0, 80018ac <HAL_CRC_Init+0x24>
{
 800188a:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800188c:	7943      	ldrb	r3, [r0, #5]
 800188e:	4604      	mov	r4, r0
 8001890:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8001894:	b11b      	cbz	r3, 800189e <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8001896:	2301      	movs	r3, #1
 8001898:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800189a:	2000      	movs	r0, #0
}
 800189c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800189e:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 80018a0:	f7ff fb14 	bl	8000ecc <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 80018a4:	2301      	movs	r3, #1
 80018a6:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 80018a8:	2000      	movs	r0, #0
}
 80018aa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80018ac:	2001      	movs	r0, #1
}
 80018ae:	4770      	bx	lr

080018b0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80018b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80018b4:	2200      	movs	r2, #0
 80018b6:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80018b8:	f8df a22c 	ldr.w	sl, [pc, #556]	; 8001ae8 <HAL_GPIO_Init+0x238>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80018bc:	4e83      	ldr	r6, [pc, #524]	; (8001acc <HAL_GPIO_Init+0x21c>)
{
 80018be:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 80018c0:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80018c2:	4689      	mov	r9, r1
 80018c4:	e005      	b.n	80018d2 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 80018c6:	3301      	adds	r3, #1
 80018c8:	2b10      	cmp	r3, #16
 80018ca:	f102 0202 	add.w	r2, r2, #2
 80018ce:	f000 8089 	beq.w	80019e4 <HAL_GPIO_Init+0x134>
    ioposition = 0x01U << position;
 80018d2:	2101      	movs	r1, #1
 80018d4:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80018d6:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 80018da:	43a1      	bics	r1, r4
 80018dc:	d1f3      	bne.n	80018c6 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80018de:	f8d9 c004 	ldr.w	ip, [r9, #4]
 80018e2:	f00c 0103 	and.w	r1, ip, #3
 80018e6:	1e4d      	subs	r5, r1, #1
 80018e8:	2d01      	cmp	r5, #1
 80018ea:	d97e      	bls.n	80019ea <HAL_GPIO_Init+0x13a>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80018ec:	2903      	cmp	r1, #3
 80018ee:	f040 80be 	bne.w	8001a6e <HAL_GPIO_Init+0x1be>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80018f2:	4091      	lsls	r1, r2
 80018f4:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 80018f6:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80018f8:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80018fa:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80018fc:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8001900:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8001902:	d0e0      	beq.n	80018c6 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001904:	2100      	movs	r1, #0
 8001906:	9103      	str	r1, [sp, #12]
 8001908:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800190c:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001910:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8001914:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8001918:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800191c:	9103      	str	r1, [sp, #12]
 800191e:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8001920:	f023 0103 	bic.w	r1, r3, #3
 8001924:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8001928:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800192c:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8001930:	f8d1 e008 	ldr.w	lr, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001934:	00bf      	lsls	r7, r7, #2
 8001936:	250f      	movs	r5, #15
 8001938:	40bd      	lsls	r5, r7
 800193a:	ea2e 0805 	bic.w	r8, lr, r5
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800193e:	4d64      	ldr	r5, [pc, #400]	; (8001ad0 <HAL_GPIO_Init+0x220>)
 8001940:	42a8      	cmp	r0, r5
 8001942:	d024      	beq.n	800198e <HAL_GPIO_Init+0xde>
 8001944:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8001948:	42a8      	cmp	r0, r5
 800194a:	f000 8094 	beq.w	8001a76 <HAL_GPIO_Init+0x1c6>
 800194e:	4d61      	ldr	r5, [pc, #388]	; (8001ad4 <HAL_GPIO_Init+0x224>)
 8001950:	42a8      	cmp	r0, r5
 8001952:	f000 8097 	beq.w	8001a84 <HAL_GPIO_Init+0x1d4>
 8001956:	4d60      	ldr	r5, [pc, #384]	; (8001ad8 <HAL_GPIO_Init+0x228>)
 8001958:	42a8      	cmp	r0, r5
 800195a:	f000 809a 	beq.w	8001a92 <HAL_GPIO_Init+0x1e2>
 800195e:	4d5f      	ldr	r5, [pc, #380]	; (8001adc <HAL_GPIO_Init+0x22c>)
 8001960:	42a8      	cmp	r0, r5
 8001962:	f000 809d 	beq.w	8001aa0 <HAL_GPIO_Init+0x1f0>
 8001966:	4d5e      	ldr	r5, [pc, #376]	; (8001ae0 <HAL_GPIO_Init+0x230>)
 8001968:	42a8      	cmp	r0, r5
 800196a:	f000 80a0 	beq.w	8001aae <HAL_GPIO_Init+0x1fe>
 800196e:	4d5d      	ldr	r5, [pc, #372]	; (8001ae4 <HAL_GPIO_Init+0x234>)
 8001970:	42a8      	cmp	r0, r5
 8001972:	f000 80a3 	beq.w	8001abc <HAL_GPIO_Init+0x20c>
 8001976:	f8df e174 	ldr.w	lr, [pc, #372]	; 8001aec <HAL_GPIO_Init+0x23c>
 800197a:	4570      	cmp	r0, lr
 800197c:	bf0c      	ite	eq
 800197e:	f04f 0e07 	moveq.w	lr, #7
 8001982:	f04f 0e08 	movne.w	lr, #8
 8001986:	fa0e f707 	lsl.w	r7, lr, r7
 800198a:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800198e:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8001992:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8001994:	ea6f 070b 	mvn.w	r7, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8001998:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800199c:	bf0c      	ite	eq
 800199e:	4039      	andeq	r1, r7
        {
          temp |= iocurrent;
 80019a0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 80019a4:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 80019a6:	68f5      	ldr	r5, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80019a8:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 80019ac:	bf0c      	ite	eq
 80019ae:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80019b0:	ea4b 0505 	orrne.w	r5, fp, r5
        }
        EXTI->FTSR = temp;
 80019b4:	60f5      	str	r5, [r6, #12]

        temp = EXTI->EMR;
 80019b6:	6875      	ldr	r5, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80019b8:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80019bc:	bf0c      	ite	eq
 80019be:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80019c0:	ea4b 0505 	orrne.w	r5, fp, r5
        }
        EXTI->EMR = temp;
 80019c4:	6075      	str	r5, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80019c6:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80019c8:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 80019cc:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 80019d0:	bf0c      	ite	eq
 80019d2:	4039      	andeq	r1, r7
        {
          temp |= iocurrent;
 80019d4:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 80019d8:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 80019da:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80019dc:	f102 0202 	add.w	r2, r2, #2
 80019e0:	f47f af77 	bne.w	80018d2 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 80019e4:	b005      	add	sp, #20
 80019e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 80019ea:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 80019ee:	6887      	ldr	r7, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80019f0:	fa05 f802 	lsl.w	r8, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80019f4:	2503      	movs	r5, #3
 80019f6:	fa05 fe02 	lsl.w	lr, r5, r2
 80019fa:	ea27 070e 	bic.w	r7, r7, lr
        temp |= (GPIO_Init->Speed << (position * 2U));
 80019fe:	ea48 0707 	orr.w	r7, r8, r7
        GPIOx->OSPEEDR = temp;
 8001a02:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8001a04:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8001a06:	ea6f 050e 	mvn.w	r5, lr
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8001a0a:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8001a0e:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8001a12:	409f      	lsls	r7, r3
 8001a14:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8001a18:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8001a1a:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8001a1c:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001a20:	f8d9 7008 	ldr.w	r7, [r9, #8]
 8001a24:	4097      	lsls	r7, r2
 8001a26:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001a2a:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8001a2c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001a2e:	fa01 f102 	lsl.w	r1, r1, r2
 8001a32:	f47f af60 	bne.w	80018f6 <HAL_GPIO_Init+0x46>
        temp = GPIOx->AFR[position >> 3U];
 8001a36:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 8001a3a:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001a3e:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8001a42:	f8de 7020 	ldr.w	r7, [lr, #32]
 8001a46:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001a48:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001a4c:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001a50:	fa07 f708 	lsl.w	r7, r7, r8
 8001a54:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001a56:	270f      	movs	r7, #15
 8001a58:	fa07 f808 	lsl.w	r8, r7, r8
 8001a5c:	9f00      	ldr	r7, [sp, #0]
 8001a5e:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001a62:	9f01      	ldr	r7, [sp, #4]
 8001a64:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 8001a68:	f8ce 7020 	str.w	r7, [lr, #32]
 8001a6c:	e743      	b.n	80018f6 <HAL_GPIO_Init+0x46>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8001a6e:	2503      	movs	r5, #3
 8001a70:	4095      	lsls	r5, r2
 8001a72:	43ed      	mvns	r5, r5
 8001a74:	e7d1      	b.n	8001a1a <HAL_GPIO_Init+0x16a>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001a76:	f04f 0e01 	mov.w	lr, #1
 8001a7a:	fa0e f707 	lsl.w	r7, lr, r7
 8001a7e:	ea48 0807 	orr.w	r8, r8, r7
 8001a82:	e784      	b.n	800198e <HAL_GPIO_Init+0xde>
 8001a84:	f04f 0e02 	mov.w	lr, #2
 8001a88:	fa0e f707 	lsl.w	r7, lr, r7
 8001a8c:	ea48 0807 	orr.w	r8, r8, r7
 8001a90:	e77d      	b.n	800198e <HAL_GPIO_Init+0xde>
 8001a92:	f04f 0e03 	mov.w	lr, #3
 8001a96:	fa0e f707 	lsl.w	r7, lr, r7
 8001a9a:	ea48 0807 	orr.w	r8, r8, r7
 8001a9e:	e776      	b.n	800198e <HAL_GPIO_Init+0xde>
 8001aa0:	f04f 0e04 	mov.w	lr, #4
 8001aa4:	fa0e f707 	lsl.w	r7, lr, r7
 8001aa8:	ea48 0807 	orr.w	r8, r8, r7
 8001aac:	e76f      	b.n	800198e <HAL_GPIO_Init+0xde>
 8001aae:	f04f 0e05 	mov.w	lr, #5
 8001ab2:	fa0e f707 	lsl.w	r7, lr, r7
 8001ab6:	ea48 0807 	orr.w	r8, r8, r7
 8001aba:	e768      	b.n	800198e <HAL_GPIO_Init+0xde>
 8001abc:	f04f 0e06 	mov.w	lr, #6
 8001ac0:	fa0e f707 	lsl.w	r7, lr, r7
 8001ac4:	ea48 0807 	orr.w	r8, r8, r7
 8001ac8:	e761      	b.n	800198e <HAL_GPIO_Init+0xde>
 8001aca:	bf00      	nop
 8001acc:	40013c00 	.word	0x40013c00
 8001ad0:	40020000 	.word	0x40020000
 8001ad4:	40020800 	.word	0x40020800
 8001ad8:	40020c00 	.word	0x40020c00
 8001adc:	40021000 	.word	0x40021000
 8001ae0:	40021400 	.word	0x40021400
 8001ae4:	40021800 	.word	0x40021800
 8001ae8:	40023800 	.word	0x40023800
 8001aec:	40021c00 	.word	0x40021c00

08001af0 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8001af0:	b902      	cbnz	r2, 8001af4 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8001af2:	0409      	lsls	r1, r1, #16
 8001af4:	6181      	str	r1, [r0, #24]
  }
}
 8001af6:	4770      	bx	lr

08001af8 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8001af8:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8001afa:	ea01 0203 	and.w	r2, r1, r3
 8001afe:	ea21 0103 	bic.w	r1, r1, r3
 8001b02:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8001b06:	6181      	str	r1, [r0, #24]
}
 8001b08:	4770      	bx	lr
 8001b0a:	bf00      	nop

08001b0c <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8001b0c:	2800      	cmp	r0, #0
 8001b0e:	f000 81a2 	beq.w	8001e56 <HAL_RCC_OscConfig+0x34a>
{
 8001b12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001b16:	6803      	ldr	r3, [r0, #0]
 8001b18:	07dd      	lsls	r5, r3, #31
{
 8001b1a:	b082      	sub	sp, #8
 8001b1c:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001b1e:	d52f      	bpl.n	8001b80 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001b20:	499e      	ldr	r1, [pc, #632]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
 8001b22:	688a      	ldr	r2, [r1, #8]
 8001b24:	f002 020c 	and.w	r2, r2, #12
 8001b28:	2a04      	cmp	r2, #4
 8001b2a:	f000 80ed 	beq.w	8001d08 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001b2e:	688a      	ldr	r2, [r1, #8]
 8001b30:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001b34:	2a08      	cmp	r2, #8
 8001b36:	f000 80e3 	beq.w	8001d00 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001b3a:	6863      	ldr	r3, [r4, #4]
 8001b3c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001b40:	f000 80ec 	beq.w	8001d1c <HAL_RCC_OscConfig+0x210>
 8001b44:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001b48:	f000 8175 	beq.w	8001e36 <HAL_RCC_OscConfig+0x32a>
 8001b4c:	4d93      	ldr	r5, [pc, #588]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
 8001b4e:	682a      	ldr	r2, [r5, #0]
 8001b50:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001b54:	602a      	str	r2, [r5, #0]
 8001b56:	682a      	ldr	r2, [r5, #0]
 8001b58:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8001b5c:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8001b5e:	2b00      	cmp	r3, #0
 8001b60:	f040 80e1 	bne.w	8001d26 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001b64:	f7ff fe00 	bl	8001768 <HAL_GetTick>
 8001b68:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001b6a:	e005      	b.n	8001b78 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001b6c:	f7ff fdfc 	bl	8001768 <HAL_GetTick>
 8001b70:	1b80      	subs	r0, r0, r6
 8001b72:	2864      	cmp	r0, #100	; 0x64
 8001b74:	f200 8101 	bhi.w	8001d7a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001b78:	682b      	ldr	r3, [r5, #0]
 8001b7a:	039b      	lsls	r3, r3, #14
 8001b7c:	d4f6      	bmi.n	8001b6c <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8001b7e:	6823      	ldr	r3, [r4, #0]
 8001b80:	079f      	lsls	r7, r3, #30
 8001b82:	d528      	bpl.n	8001bd6 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8001b84:	4a85      	ldr	r2, [pc, #532]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
 8001b86:	6891      	ldr	r1, [r2, #8]
 8001b88:	f011 0f0c 	tst.w	r1, #12
 8001b8c:	f000 8090 	beq.w	8001cb0 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001b90:	6891      	ldr	r1, [r2, #8]
 8001b92:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8001b96:	2908      	cmp	r1, #8
 8001b98:	f000 8086 	beq.w	8001ca8 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8001b9c:	68e3      	ldr	r3, [r4, #12]
 8001b9e:	2b00      	cmp	r3, #0
 8001ba0:	f000 810e 	beq.w	8001dc0 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8001ba4:	4b7e      	ldr	r3, [pc, #504]	; (8001da0 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001ba6:	4e7d      	ldr	r6, [pc, #500]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 8001ba8:	2201      	movs	r2, #1
 8001baa:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8001bac:	f7ff fddc 	bl	8001768 <HAL_GetTick>
 8001bb0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001bb2:	e005      	b.n	8001bc0 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8001bb4:	f7ff fdd8 	bl	8001768 <HAL_GetTick>
 8001bb8:	1b40      	subs	r0, r0, r5
 8001bba:	2802      	cmp	r0, #2
 8001bbc:	f200 80dd 	bhi.w	8001d7a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001bc0:	6833      	ldr	r3, [r6, #0]
 8001bc2:	0798      	lsls	r0, r3, #30
 8001bc4:	d5f6      	bpl.n	8001bb4 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001bc6:	6833      	ldr	r3, [r6, #0]
 8001bc8:	6922      	ldr	r2, [r4, #16]
 8001bca:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8001bce:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8001bd2:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001bd4:	6823      	ldr	r3, [r4, #0]
 8001bd6:	071a      	lsls	r2, r3, #28
 8001bd8:	d451      	bmi.n	8001c7e <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8001bda:	0758      	lsls	r0, r3, #29
 8001bdc:	d52f      	bpl.n	8001c3e <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8001bde:	4a6f      	ldr	r2, [pc, #444]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
 8001be0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001be2:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 8001be6:	d07f      	beq.n	8001ce8 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 8001be8:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001bea:	4e6e      	ldr	r6, [pc, #440]	; (8001da4 <HAL_RCC_OscConfig+0x298>)
 8001bec:	6833      	ldr	r3, [r6, #0]
 8001bee:	05d9      	lsls	r1, r3, #23
 8001bf0:	f140 80b3 	bpl.w	8001d5a <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001bf4:	68a3      	ldr	r3, [r4, #8]
 8001bf6:	2b01      	cmp	r3, #1
 8001bf8:	f000 80c3 	beq.w	8001d82 <HAL_RCC_OscConfig+0x276>
 8001bfc:	2b05      	cmp	r3, #5
 8001bfe:	f000 812c 	beq.w	8001e5a <HAL_RCC_OscConfig+0x34e>
 8001c02:	4e66      	ldr	r6, [pc, #408]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
 8001c04:	6f32      	ldr	r2, [r6, #112]	; 0x70
 8001c06:	f022 0201 	bic.w	r2, r2, #1
 8001c0a:	6732      	str	r2, [r6, #112]	; 0x70
 8001c0c:	6f32      	ldr	r2, [r6, #112]	; 0x70
 8001c0e:	f022 0204 	bic.w	r2, r2, #4
 8001c12:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8001c14:	2b00      	cmp	r3, #0
 8001c16:	f040 80b9 	bne.w	8001d8c <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001c1a:	f7ff fda5 	bl	8001768 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8001c1e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8001c22:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001c24:	e005      	b.n	8001c32 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8001c26:	f7ff fd9f 	bl	8001768 <HAL_GetTick>
 8001c2a:	1bc0      	subs	r0, r0, r7
 8001c2c:	4540      	cmp	r0, r8
 8001c2e:	f200 80a4 	bhi.w	8001d7a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001c32:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8001c34:	0798      	lsls	r0, r3, #30
 8001c36:	d4f6      	bmi.n	8001c26 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8001c38:	2d00      	cmp	r5, #0
 8001c3a:	f040 8106 	bne.w	8001e4a <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8001c3e:	69a0      	ldr	r0, [r4, #24]
 8001c40:	b1c8      	cbz	r0, 8001c76 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8001c42:	4d56      	ldr	r5, [pc, #344]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
 8001c44:	68ab      	ldr	r3, [r5, #8]
 8001c46:	f003 030c 	and.w	r3, r3, #12
 8001c4a:	2b08      	cmp	r3, #8
 8001c4c:	f000 80c9 	beq.w	8001de2 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001c50:	4b53      	ldr	r3, [pc, #332]	; (8001da0 <HAL_RCC_OscConfig+0x294>)
 8001c52:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001c54:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8001c56:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001c58:	f000 8109 	beq.w	8001e6e <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001c5c:	f7ff fd84 	bl	8001768 <HAL_GetTick>
 8001c60:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001c62:	e005      	b.n	8001c70 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8001c64:	f7ff fd80 	bl	8001768 <HAL_GetTick>
 8001c68:	1b00      	subs	r0, r0, r4
 8001c6a:	2802      	cmp	r0, #2
 8001c6c:	f200 8085 	bhi.w	8001d7a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001c70:	682b      	ldr	r3, [r5, #0]
 8001c72:	019b      	lsls	r3, r3, #6
 8001c74:	d4f6      	bmi.n	8001c64 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8001c76:	2000      	movs	r0, #0
}
 8001c78:	b002      	add	sp, #8
 8001c7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8001c7e:	6963      	ldr	r3, [r4, #20]
 8001c80:	b30b      	cbz	r3, 8001cc6 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 8001c82:	4b47      	ldr	r3, [pc, #284]	; (8001da0 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001c84:	4e45      	ldr	r6, [pc, #276]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 8001c86:	2201      	movs	r2, #1
 8001c88:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8001c8c:	f7ff fd6c 	bl	8001768 <HAL_GetTick>
 8001c90:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001c92:	e004      	b.n	8001c9e <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8001c94:	f7ff fd68 	bl	8001768 <HAL_GetTick>
 8001c98:	1b40      	subs	r0, r0, r5
 8001c9a:	2802      	cmp	r0, #2
 8001c9c:	d86d      	bhi.n	8001d7a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001c9e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8001ca0:	079b      	lsls	r3, r3, #30
 8001ca2:	d5f7      	bpl.n	8001c94 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8001ca4:	6823      	ldr	r3, [r4, #0]
 8001ca6:	e798      	b.n	8001bda <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001ca8:	6852      	ldr	r2, [r2, #4]
 8001caa:	0256      	lsls	r6, r2, #9
 8001cac:	f53f af76 	bmi.w	8001b9c <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001cb0:	4a3a      	ldr	r2, [pc, #232]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
 8001cb2:	6812      	ldr	r2, [r2, #0]
 8001cb4:	0795      	lsls	r5, r2, #30
 8001cb6:	d544      	bpl.n	8001d42 <HAL_RCC_OscConfig+0x236>
 8001cb8:	68e2      	ldr	r2, [r4, #12]
 8001cba:	2a01      	cmp	r2, #1
 8001cbc:	d041      	beq.n	8001d42 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 8001cbe:	2001      	movs	r0, #1
}
 8001cc0:	b002      	add	sp, #8
 8001cc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 8001cc6:	4a36      	ldr	r2, [pc, #216]	; (8001da0 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001cc8:	4e34      	ldr	r6, [pc, #208]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 8001cca:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8001cce:	f7ff fd4b 	bl	8001768 <HAL_GetTick>
 8001cd2:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001cd4:	e004      	b.n	8001ce0 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8001cd6:	f7ff fd47 	bl	8001768 <HAL_GetTick>
 8001cda:	1b40      	subs	r0, r0, r5
 8001cdc:	2802      	cmp	r0, #2
 8001cde:	d84c      	bhi.n	8001d7a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001ce0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8001ce2:	079f      	lsls	r7, r3, #30
 8001ce4:	d4f7      	bmi.n	8001cd6 <HAL_RCC_OscConfig+0x1ca>
 8001ce6:	e7dd      	b.n	8001ca4 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 8001ce8:	9301      	str	r3, [sp, #4]
 8001cea:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001cec:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001cf0:	6413      	str	r3, [r2, #64]	; 0x40
 8001cf2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001cf4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001cf8:	9301      	str	r3, [sp, #4]
 8001cfa:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8001cfc:	2501      	movs	r5, #1
 8001cfe:	e774      	b.n	8001bea <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001d00:	684a      	ldr	r2, [r1, #4]
 8001d02:	0250      	lsls	r0, r2, #9
 8001d04:	f57f af19 	bpl.w	8001b3a <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001d08:	4a24      	ldr	r2, [pc, #144]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
 8001d0a:	6812      	ldr	r2, [r2, #0]
 8001d0c:	0391      	lsls	r1, r2, #14
 8001d0e:	f57f af37 	bpl.w	8001b80 <HAL_RCC_OscConfig+0x74>
 8001d12:	6862      	ldr	r2, [r4, #4]
 8001d14:	2a00      	cmp	r2, #0
 8001d16:	f47f af33 	bne.w	8001b80 <HAL_RCC_OscConfig+0x74>
 8001d1a:	e7d0      	b.n	8001cbe <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001d1c:	4a1f      	ldr	r2, [pc, #124]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
 8001d1e:	6813      	ldr	r3, [r2, #0]
 8001d20:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001d24:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 8001d26:	f7ff fd1f 	bl	8001768 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001d2a:	4e1c      	ldr	r6, [pc, #112]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 8001d2c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001d2e:	e004      	b.n	8001d3a <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001d30:	f7ff fd1a 	bl	8001768 <HAL_GetTick>
 8001d34:	1b40      	subs	r0, r0, r5
 8001d36:	2864      	cmp	r0, #100	; 0x64
 8001d38:	d81f      	bhi.n	8001d7a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001d3a:	6833      	ldr	r3, [r6, #0]
 8001d3c:	039a      	lsls	r2, r3, #14
 8001d3e:	d5f7      	bpl.n	8001d30 <HAL_RCC_OscConfig+0x224>
 8001d40:	e71d      	b.n	8001b7e <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001d42:	4916      	ldr	r1, [pc, #88]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
 8001d44:	6920      	ldr	r0, [r4, #16]
 8001d46:	680a      	ldr	r2, [r1, #0]
 8001d48:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8001d4c:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 8001d50:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001d52:	071a      	lsls	r2, r3, #28
 8001d54:	f57f af41 	bpl.w	8001bda <HAL_RCC_OscConfig+0xce>
 8001d58:	e791      	b.n	8001c7e <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8001d5a:	6833      	ldr	r3, [r6, #0]
 8001d5c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001d60:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8001d62:	f7ff fd01 	bl	8001768 <HAL_GetTick>
 8001d66:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001d68:	6833      	ldr	r3, [r6, #0]
 8001d6a:	05da      	lsls	r2, r3, #23
 8001d6c:	f53f af42 	bmi.w	8001bf4 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001d70:	f7ff fcfa 	bl	8001768 <HAL_GetTick>
 8001d74:	1bc0      	subs	r0, r0, r7
 8001d76:	2802      	cmp	r0, #2
 8001d78:	d9f6      	bls.n	8001d68 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 8001d7a:	2003      	movs	r0, #3
}
 8001d7c:	b002      	add	sp, #8
 8001d7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001d82:	4a06      	ldr	r2, [pc, #24]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
 8001d84:	6f13      	ldr	r3, [r2, #112]	; 0x70
 8001d86:	f043 0301 	orr.w	r3, r3, #1
 8001d8a:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 8001d8c:	f7ff fcec 	bl	8001768 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001d90:	4f02      	ldr	r7, [pc, #8]	; (8001d9c <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 8001d92:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8001d94:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001d98:	e00b      	b.n	8001db2 <HAL_RCC_OscConfig+0x2a6>
 8001d9a:	bf00      	nop
 8001d9c:	40023800 	.word	0x40023800
 8001da0:	42470000 	.word	0x42470000
 8001da4:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8001da8:	f7ff fcde 	bl	8001768 <HAL_GetTick>
 8001dac:	1b80      	subs	r0, r0, r6
 8001dae:	4540      	cmp	r0, r8
 8001db0:	d8e3      	bhi.n	8001d7a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001db2:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8001db4:	079b      	lsls	r3, r3, #30
 8001db6:	d5f7      	bpl.n	8001da8 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 8001db8:	2d00      	cmp	r5, #0
 8001dba:	f43f af40 	beq.w	8001c3e <HAL_RCC_OscConfig+0x132>
 8001dbe:	e044      	b.n	8001e4a <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 8001dc0:	4a42      	ldr	r2, [pc, #264]	; (8001ecc <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001dc2:	4e43      	ldr	r6, [pc, #268]	; (8001ed0 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 8001dc4:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 8001dc6:	f7ff fccf 	bl	8001768 <HAL_GetTick>
 8001dca:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001dcc:	e004      	b.n	8001dd8 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8001dce:	f7ff fccb 	bl	8001768 <HAL_GetTick>
 8001dd2:	1b40      	subs	r0, r0, r5
 8001dd4:	2802      	cmp	r0, #2
 8001dd6:	d8d0      	bhi.n	8001d7a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001dd8:	6833      	ldr	r3, [r6, #0]
 8001dda:	0799      	lsls	r1, r3, #30
 8001ddc:	d4f7      	bmi.n	8001dce <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001dde:	6823      	ldr	r3, [r4, #0]
 8001de0:	e6f9      	b.n	8001bd6 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8001de2:	2801      	cmp	r0, #1
 8001de4:	f43f af48 	beq.w	8001c78 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 8001de8:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8001dea:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001dec:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8001df0:	4291      	cmp	r1, r2
 8001df2:	f47f af64 	bne.w	8001cbe <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001df6:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8001df8:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001dfc:	4291      	cmp	r1, r2
 8001dfe:	f47f af5e 	bne.w	8001cbe <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8001e02:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001e04:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8001e08:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8001e0a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8001e0e:	f47f af56 	bne.w	8001cbe <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8001e12:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8001e14:	0852      	lsrs	r2, r2, #1
 8001e16:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8001e1a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8001e1c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8001e20:	f47f af4d 	bne.w	8001cbe <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8001e24:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8001e26:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8001e2a:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
            return HAL_TIMEOUT;
 8001e2e:	bf14      	ite	ne
 8001e30:	2001      	movne	r0, #1
 8001e32:	2000      	moveq	r0, #0
 8001e34:	e720      	b.n	8001c78 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001e36:	4b26      	ldr	r3, [pc, #152]	; (8001ed0 <HAL_RCC_OscConfig+0x3c4>)
 8001e38:	681a      	ldr	r2, [r3, #0]
 8001e3a:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8001e3e:	601a      	str	r2, [r3, #0]
 8001e40:	681a      	ldr	r2, [r3, #0]
 8001e42:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001e46:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8001e48:	e76d      	b.n	8001d26 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 8001e4a:	4a21      	ldr	r2, [pc, #132]	; (8001ed0 <HAL_RCC_OscConfig+0x3c4>)
 8001e4c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001e4e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001e52:	6413      	str	r3, [r2, #64]	; 0x40
 8001e54:	e6f3      	b.n	8001c3e <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 8001e56:	2001      	movs	r0, #1
}
 8001e58:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001e5a:	4b1d      	ldr	r3, [pc, #116]	; (8001ed0 <HAL_RCC_OscConfig+0x3c4>)
 8001e5c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8001e5e:	f042 0204 	orr.w	r2, r2, #4
 8001e62:	671a      	str	r2, [r3, #112]	; 0x70
 8001e64:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8001e66:	f042 0201 	orr.w	r2, r2, #1
 8001e6a:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8001e6c:	e78e      	b.n	8001d8c <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 8001e6e:	f7ff fc7b 	bl	8001768 <HAL_GetTick>
 8001e72:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001e74:	e005      	b.n	8001e82 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8001e76:	f7ff fc77 	bl	8001768 <HAL_GetTick>
 8001e7a:	1b80      	subs	r0, r0, r6
 8001e7c:	2802      	cmp	r0, #2
 8001e7e:	f63f af7c 	bhi.w	8001d7a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001e82:	682b      	ldr	r3, [r5, #0]
 8001e84:	0199      	lsls	r1, r3, #6
 8001e86:	d4f6      	bmi.n	8001e76 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8001e88:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 8001e8c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8001e8e:	430b      	orrs	r3, r1
 8001e90:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8001e94:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 8001e98:	0852      	lsrs	r2, r2, #1
 8001e9a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8001e9e:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 8001ea0:	490a      	ldr	r1, [pc, #40]	; (8001ecc <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8001ea2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 8001ea6:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8001ea8:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8001eaa:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 8001eac:	f7ff fc5c 	bl	8001768 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001eb0:	4d07      	ldr	r5, [pc, #28]	; (8001ed0 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 8001eb2:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001eb4:	e005      	b.n	8001ec2 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8001eb6:	f7ff fc57 	bl	8001768 <HAL_GetTick>
 8001eba:	1b00      	subs	r0, r0, r4
 8001ebc:	2802      	cmp	r0, #2
 8001ebe:	f63f af5c 	bhi.w	8001d7a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001ec2:	682b      	ldr	r3, [r5, #0]
 8001ec4:	019a      	lsls	r2, r3, #6
 8001ec6:	d5f6      	bpl.n	8001eb6 <HAL_RCC_OscConfig+0x3aa>
 8001ec8:	e6d5      	b.n	8001c76 <HAL_RCC_OscConfig+0x16a>
 8001eca:	bf00      	nop
 8001ecc:	42470000 	.word	0x42470000
 8001ed0:	40023800 	.word	0x40023800

08001ed4 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8001ed4:	4916      	ldr	r1, [pc, #88]	; (8001f30 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 8001ed6:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8001ed8:	688b      	ldr	r3, [r1, #8]
 8001eda:	f003 030c 	and.w	r3, r3, #12
 8001ede:	2b04      	cmp	r3, #4
 8001ee0:	d01b      	beq.n	8001f1a <HAL_RCC_GetSysClockFreq+0x46>
 8001ee2:	2b08      	cmp	r3, #8
 8001ee4:	d117      	bne.n	8001f16 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001ee6:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8001ee8:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001eea:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8001eec:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001ef0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8001ef4:	d113      	bne.n	8001f1e <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001ef6:	480f      	ldr	r0, [pc, #60]	; (8001f34 <HAL_RCC_GetSysClockFreq+0x60>)
 8001ef8:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8001efc:	fba1 0100 	umull	r0, r1, r1, r0
 8001f00:	f7fe fe52 	bl	8000ba8 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8001f04:	4b0a      	ldr	r3, [pc, #40]	; (8001f30 <HAL_RCC_GetSysClockFreq+0x5c>)
 8001f06:	685b      	ldr	r3, [r3, #4]
 8001f08:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8001f0c:	3301      	adds	r3, #1
 8001f0e:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8001f10:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8001f14:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 8001f16:	4807      	ldr	r0, [pc, #28]	; (8001f34 <HAL_RCC_GetSysClockFreq+0x60>)
}
 8001f18:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8001f1a:	4807      	ldr	r0, [pc, #28]	; (8001f38 <HAL_RCC_GetSysClockFreq+0x64>)
}
 8001f1c:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001f1e:	4806      	ldr	r0, [pc, #24]	; (8001f38 <HAL_RCC_GetSysClockFreq+0x64>)
 8001f20:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8001f24:	2300      	movs	r3, #0
 8001f26:	fba1 0100 	umull	r0, r1, r1, r0
 8001f2a:	f7fe fe3d 	bl	8000ba8 <__aeabi_uldivmod>
 8001f2e:	e7e9      	b.n	8001f04 <HAL_RCC_GetSysClockFreq+0x30>
 8001f30:	40023800 	.word	0x40023800
 8001f34:	00f42400 	.word	0x00f42400
 8001f38:	017d7840 	.word	0x017d7840

08001f3c <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 8001f3c:	2800      	cmp	r0, #0
 8001f3e:	f000 8087 	beq.w	8002050 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8001f42:	4a48      	ldr	r2, [pc, #288]	; (8002064 <HAL_RCC_ClockConfig+0x128>)
 8001f44:	6813      	ldr	r3, [r2, #0]
 8001f46:	f003 0307 	and.w	r3, r3, #7
 8001f4a:	428b      	cmp	r3, r1
{
 8001f4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f50:	460d      	mov	r5, r1
 8001f52:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8001f54:	d209      	bcs.n	8001f6a <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001f56:	b2cb      	uxtb	r3, r1
 8001f58:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8001f5a:	6813      	ldr	r3, [r2, #0]
 8001f5c:	f003 0307 	and.w	r3, r3, #7
 8001f60:	428b      	cmp	r3, r1
 8001f62:	d002      	beq.n	8001f6a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 8001f64:	2001      	movs	r0, #1
}
 8001f66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001f6a:	6823      	ldr	r3, [r4, #0]
 8001f6c:	0798      	lsls	r0, r3, #30
 8001f6e:	d514      	bpl.n	8001f9a <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001f70:	0759      	lsls	r1, r3, #29
 8001f72:	d504      	bpl.n	8001f7e <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8001f74:	493c      	ldr	r1, [pc, #240]	; (8002068 <HAL_RCC_ClockConfig+0x12c>)
 8001f76:	688a      	ldr	r2, [r1, #8]
 8001f78:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 8001f7c:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001f7e:	071a      	lsls	r2, r3, #28
 8001f80:	d504      	bpl.n	8001f8c <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8001f82:	4939      	ldr	r1, [pc, #228]	; (8002068 <HAL_RCC_ClockConfig+0x12c>)
 8001f84:	688a      	ldr	r2, [r1, #8]
 8001f86:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 8001f8a:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001f8c:	4936      	ldr	r1, [pc, #216]	; (8002068 <HAL_RCC_ClockConfig+0x12c>)
 8001f8e:	68a0      	ldr	r0, [r4, #8]
 8001f90:	688a      	ldr	r2, [r1, #8]
 8001f92:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8001f96:	4302      	orrs	r2, r0
 8001f98:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001f9a:	07df      	lsls	r7, r3, #31
 8001f9c:	d521      	bpl.n	8001fe2 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001f9e:	6862      	ldr	r2, [r4, #4]
 8001fa0:	2a01      	cmp	r2, #1
 8001fa2:	d057      	beq.n	8002054 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8001fa4:	1e93      	subs	r3, r2, #2
 8001fa6:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001fa8:	4b2f      	ldr	r3, [pc, #188]	; (8002068 <HAL_RCC_ClockConfig+0x12c>)
 8001faa:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8001fac:	d94d      	bls.n	800204a <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001fae:	0799      	lsls	r1, r3, #30
 8001fb0:	d5d8      	bpl.n	8001f64 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001fb2:	4e2d      	ldr	r6, [pc, #180]	; (8002068 <HAL_RCC_ClockConfig+0x12c>)
 8001fb4:	68b3      	ldr	r3, [r6, #8]
 8001fb6:	f023 0303 	bic.w	r3, r3, #3
 8001fba:	4313      	orrs	r3, r2
 8001fbc:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8001fbe:	f7ff fbd3 	bl	8001768 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001fc2:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8001fc6:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001fc8:	e004      	b.n	8001fd4 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001fca:	f7ff fbcd 	bl	8001768 <HAL_GetTick>
 8001fce:	1bc0      	subs	r0, r0, r7
 8001fd0:	4540      	cmp	r0, r8
 8001fd2:	d844      	bhi.n	800205e <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001fd4:	68b3      	ldr	r3, [r6, #8]
 8001fd6:	6862      	ldr	r2, [r4, #4]
 8001fd8:	f003 030c 	and.w	r3, r3, #12
 8001fdc:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8001fe0:	d1f3      	bne.n	8001fca <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8001fe2:	4a20      	ldr	r2, [pc, #128]	; (8002064 <HAL_RCC_ClockConfig+0x128>)
 8001fe4:	6813      	ldr	r3, [r2, #0]
 8001fe6:	f003 0307 	and.w	r3, r3, #7
 8001fea:	42ab      	cmp	r3, r5
 8001fec:	d906      	bls.n	8001ffc <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001fee:	b2eb      	uxtb	r3, r5
 8001ff0:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8001ff2:	6813      	ldr	r3, [r2, #0]
 8001ff4:	f003 0307 	and.w	r3, r3, #7
 8001ff8:	42ab      	cmp	r3, r5
 8001ffa:	d1b3      	bne.n	8001f64 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001ffc:	6823      	ldr	r3, [r4, #0]
 8001ffe:	075a      	lsls	r2, r3, #29
 8002000:	d506      	bpl.n	8002010 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8002002:	4919      	ldr	r1, [pc, #100]	; (8002068 <HAL_RCC_ClockConfig+0x12c>)
 8002004:	68e0      	ldr	r0, [r4, #12]
 8002006:	688a      	ldr	r2, [r1, #8]
 8002008:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800200c:	4302      	orrs	r2, r0
 800200e:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002010:	071b      	lsls	r3, r3, #28
 8002012:	d507      	bpl.n	8002024 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8002014:	4a14      	ldr	r2, [pc, #80]	; (8002068 <HAL_RCC_ClockConfig+0x12c>)
 8002016:	6921      	ldr	r1, [r4, #16]
 8002018:	6893      	ldr	r3, [r2, #8]
 800201a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800201e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8002022:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8002024:	f7ff ff56 	bl	8001ed4 <HAL_RCC_GetSysClockFreq>
 8002028:	4a0f      	ldr	r2, [pc, #60]	; (8002068 <HAL_RCC_ClockConfig+0x12c>)
 800202a:	4c10      	ldr	r4, [pc, #64]	; (800206c <HAL_RCC_ClockConfig+0x130>)
 800202c:	6892      	ldr	r2, [r2, #8]
 800202e:	4910      	ldr	r1, [pc, #64]	; (8002070 <HAL_RCC_ClockConfig+0x134>)
 8002030:	f3c2 1203 	ubfx	r2, r2, #4, #4
 8002034:	4603      	mov	r3, r0
 8002036:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 8002038:	480e      	ldr	r0, [pc, #56]	; (8002074 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800203a:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800203c:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800203e:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 8002040:	f7ff fb48 	bl	80016d4 <HAL_InitTick>
  return HAL_OK;
 8002044:	2000      	movs	r0, #0
}
 8002046:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800204a:	0198      	lsls	r0, r3, #6
 800204c:	d4b1      	bmi.n	8001fb2 <HAL_RCC_ClockConfig+0x76>
 800204e:	e789      	b.n	8001f64 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 8002050:	2001      	movs	r0, #1
}
 8002052:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002054:	4b04      	ldr	r3, [pc, #16]	; (8002068 <HAL_RCC_ClockConfig+0x12c>)
 8002056:	681b      	ldr	r3, [r3, #0]
 8002058:	039e      	lsls	r6, r3, #14
 800205a:	d4aa      	bmi.n	8001fb2 <HAL_RCC_ClockConfig+0x76>
 800205c:	e782      	b.n	8001f64 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800205e:	2003      	movs	r0, #3
 8002060:	e781      	b.n	8001f66 <HAL_RCC_ClockConfig+0x2a>
 8002062:	bf00      	nop
 8002064:	40023c00 	.word	0x40023c00
 8002068:	40023800 	.word	0x40023800
 800206c:	0800998c 	.word	0x0800998c
 8002070:	20000000 	.word	0x20000000
 8002074:	20000008 	.word	0x20000008

08002078 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8002078:	4b04      	ldr	r3, [pc, #16]	; (800208c <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800207a:	4905      	ldr	r1, [pc, #20]	; (8002090 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800207c:	689b      	ldr	r3, [r3, #8]
 800207e:	4a05      	ldr	r2, [pc, #20]	; (8002094 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8002080:	6808      	ldr	r0, [r1, #0]
 8002082:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8002086:	5cd3      	ldrb	r3, [r2, r3]
}
 8002088:	40d8      	lsrs	r0, r3
 800208a:	4770      	bx	lr
 800208c:	40023800 	.word	0x40023800
 8002090:	20000000 	.word	0x20000000
 8002094:	0800999c 	.word	0x0800999c

08002098 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8002098:	4b04      	ldr	r3, [pc, #16]	; (80020ac <HAL_RCC_GetPCLK2Freq+0x14>)
  return SystemCoreClock;
 800209a:	4905      	ldr	r1, [pc, #20]	; (80020b0 <HAL_RCC_GetPCLK2Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800209c:	689b      	ldr	r3, [r3, #8]
 800209e:	4a05      	ldr	r2, [pc, #20]	; (80020b4 <HAL_RCC_GetPCLK2Freq+0x1c>)
 80020a0:	6808      	ldr	r0, [r1, #0]
 80020a2:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80020a6:	5cd3      	ldrb	r3, [r2, r3]
}
 80020a8:	40d8      	lsrs	r0, r3
 80020aa:	4770      	bx	lr
 80020ac:	40023800 	.word	0x40023800
 80020b0:	20000000 	.word	0x20000000
 80020b4:	0800999c 	.word	0x0800999c

080020b8 <HAL_RNG_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RNG_Init(RNG_HandleTypeDef *hrng)
{
  /* Check the RNG handle allocation */
  if (hrng == NULL)
 80020b8:	b1b0      	cbz	r0, 80020e8 <HAL_RNG_Init+0x30>
{
 80020ba:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hrng->MspInitCallback(hrng);
  }
#else
  if (hrng->State == HAL_RNG_STATE_RESET)
 80020bc:	7943      	ldrb	r3, [r0, #5]
 80020be:	4604      	mov	r4, r0
 80020c0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80020c4:	b163      	cbz	r3, 80020e0 <HAL_RNG_Init+0x28>
  /* Change RNG peripheral state */
  hrng->State = HAL_RNG_STATE_BUSY;


  /* Enable the RNG Peripheral */
  __HAL_RNG_ENABLE(hrng);
 80020c6:	6821      	ldr	r1, [r4, #0]
  hrng->State = HAL_RNG_STATE_BUSY;
 80020c8:	2302      	movs	r3, #2
 80020ca:	7163      	strb	r3, [r4, #5]
  __HAL_RNG_ENABLE(hrng);
 80020cc:	680b      	ldr	r3, [r1, #0]

  /* Initialize the RNG state */
  hrng->State = HAL_RNG_STATE_READY;
 80020ce:	2001      	movs	r0, #1
  __HAL_RNG_ENABLE(hrng);
 80020d0:	f043 0304 	orr.w	r3, r3, #4

  /* Initialise the error code */
  hrng->ErrorCode = HAL_RNG_ERROR_NONE;
 80020d4:	2200      	movs	r2, #0
  __HAL_RNG_ENABLE(hrng);
 80020d6:	600b      	str	r3, [r1, #0]
  hrng->State = HAL_RNG_STATE_READY;
 80020d8:	7160      	strb	r0, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80020da:	4610      	mov	r0, r2
  hrng->ErrorCode = HAL_RNG_ERROR_NONE;
 80020dc:	60a2      	str	r2, [r4, #8]
}
 80020de:	bd10      	pop	{r4, pc}
    hrng->Lock = HAL_UNLOCKED;
 80020e0:	7102      	strb	r2, [r0, #4]
    HAL_RNG_MspInit(hrng);
 80020e2:	f7ff f8fb 	bl	80012dc <HAL_RNG_MspInit>
 80020e6:	e7ee      	b.n	80020c6 <HAL_RNG_Init+0xe>
    return HAL_ERROR;
 80020e8:	2001      	movs	r0, #1
}
 80020ea:	4770      	bx	lr

080020ec <HAL_RNG_GenerateRandomNumber>:
  * @param  random32bit pointer to generated random number variable if successful.
  * @retval HAL status
  */

HAL_StatusTypeDef HAL_RNG_GenerateRandomNumber(RNG_HandleTypeDef *hrng, uint32_t *random32bit)
{
 80020ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;

  /* Process Locked */
  __HAL_LOCK(hrng);
 80020ee:	7903      	ldrb	r3, [r0, #4]
 80020f0:	2b01      	cmp	r3, #1
 80020f2:	d027      	beq.n	8002144 <HAL_RNG_GenerateRandomNumber+0x58>

  /* Check RNG peripheral state */
  if (hrng->State == HAL_RNG_STATE_READY)
 80020f4:	7943      	ldrb	r3, [r0, #5]
  __HAL_LOCK(hrng);
 80020f6:	2201      	movs	r2, #1
  if (hrng->State == HAL_RNG_STATE_READY)
 80020f8:	4293      	cmp	r3, r2
 80020fa:	4604      	mov	r4, r0
  __HAL_LOCK(hrng);
 80020fc:	7102      	strb	r2, [r0, #4]
  if (hrng->State == HAL_RNG_STATE_READY)
 80020fe:	b2de      	uxtb	r6, r3
 8002100:	d006      	beq.n	8002110 <HAL_RNG_GenerateRandomNumber+0x24>

    hrng->State = HAL_RNG_STATE_READY;
  }
  else
  {
    hrng->ErrorCode = HAL_RNG_ERROR_BUSY;
 8002102:	2304      	movs	r3, #4
 8002104:	6083      	str	r3, [r0, #8]
    status = HAL_ERROR;
 8002106:	4616      	mov	r6, r2
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hrng);
 8002108:	2300      	movs	r3, #0
 800210a:	7123      	strb	r3, [r4, #4]

  return status;
}
 800210c:	4630      	mov	r0, r6
 800210e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hrng->State = HAL_RNG_STATE_BUSY;
 8002110:	2302      	movs	r3, #2
 8002112:	7143      	strb	r3, [r0, #5]
    tickstart = HAL_GetTick();
 8002114:	460d      	mov	r5, r1
 8002116:	f7ff fb27 	bl	8001768 <HAL_GetTick>
    while (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_DRDY) == RESET)
 800211a:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
 800211c:	4607      	mov	r7, r0
    while (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_DRDY) == RESET)
 800211e:	685a      	ldr	r2, [r3, #4]
 8002120:	07d2      	lsls	r2, r2, #31
 8002122:	d412      	bmi.n	800214a <HAL_RNG_GenerateRandomNumber+0x5e>
      if ((HAL_GetTick() - tickstart) > RNG_TIMEOUT_VALUE)
 8002124:	f7ff fb20 	bl	8001768 <HAL_GetTick>
 8002128:	1bc0      	subs	r0, r0, r7
 800212a:	2802      	cmp	r0, #2
        if (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_DRDY) == RESET)
 800212c:	6823      	ldr	r3, [r4, #0]
      if ((HAL_GetTick() - tickstart) > RNG_TIMEOUT_VALUE)
 800212e:	d9f6      	bls.n	800211e <HAL_RNG_GenerateRandomNumber+0x32>
        if (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_DRDY) == RESET)
 8002130:	685a      	ldr	r2, [r3, #4]
 8002132:	f012 0201 	ands.w	r2, r2, #1
 8002136:	d1f2      	bne.n	800211e <HAL_RNG_GenerateRandomNumber+0x32>
          hrng->State = HAL_RNG_STATE_READY;
 8002138:	2101      	movs	r1, #1
          hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 800213a:	2302      	movs	r3, #2
          hrng->State = HAL_RNG_STATE_READY;
 800213c:	7161      	strb	r1, [r4, #5]
          __HAL_UNLOCK(hrng);
 800213e:	7122      	strb	r2, [r4, #4]
          hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 8002140:	60a3      	str	r3, [r4, #8]
          return HAL_ERROR;
 8002142:	e7e3      	b.n	800210c <HAL_RNG_GenerateRandomNumber+0x20>
  __HAL_LOCK(hrng);
 8002144:	2602      	movs	r6, #2
}
 8002146:	4630      	mov	r0, r6
 8002148:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hrng->RandomNumber = hrng->Instance->DR;
 800214a:	689b      	ldr	r3, [r3, #8]
 800214c:	60e3      	str	r3, [r4, #12]
    hrng->State = HAL_RNG_STATE_READY;
 800214e:	2201      	movs	r2, #1
    *random32bit = hrng->RandomNumber;
 8002150:	602b      	str	r3, [r5, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8002152:	2600      	movs	r6, #0
    hrng->State = HAL_RNG_STATE_READY;
 8002154:	7162      	strb	r2, [r4, #5]
 8002156:	e7d7      	b.n	8002108 <HAL_RNG_GenerateRandomNumber+0x1c>

08002158 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8002158:	2800      	cmp	r0, #0
 800215a:	f000 8087 	beq.w	800226c <HAL_TIM_Base_Init+0x114>
{
 800215e:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8002160:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8002164:	4604      	mov	r4, r0
 8002166:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800216a:	2b00      	cmp	r3, #0
 800216c:	d079      	beq.n	8002262 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800216e:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8002170:	493f      	ldr	r1, [pc, #252]	; (8002270 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 8002172:	2302      	movs	r3, #2
 8002174:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8002178:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800217a:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800217c:	d05d      	beq.n	800223a <HAL_TIM_Base_Init+0xe2>
 800217e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8002182:	d031      	beq.n	80021e8 <HAL_TIM_Base_Init+0x90>
 8002184:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 8002188:	428a      	cmp	r2, r1
 800218a:	d02d      	beq.n	80021e8 <HAL_TIM_Base_Init+0x90>
 800218c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8002190:	428a      	cmp	r2, r1
 8002192:	d029      	beq.n	80021e8 <HAL_TIM_Base_Init+0x90>
 8002194:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8002198:	428a      	cmp	r2, r1
 800219a:	d025      	beq.n	80021e8 <HAL_TIM_Base_Init+0x90>
 800219c:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 80021a0:	428a      	cmp	r2, r1
 80021a2:	d04a      	beq.n	800223a <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80021a4:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 80021a8:	428a      	cmp	r2, r1
 80021aa:	d021      	beq.n	80021f0 <HAL_TIM_Base_Init+0x98>
 80021ac:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80021b0:	428a      	cmp	r2, r1
 80021b2:	d01d      	beq.n	80021f0 <HAL_TIM_Base_Init+0x98>
 80021b4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80021b8:	428a      	cmp	r2, r1
 80021ba:	d019      	beq.n	80021f0 <HAL_TIM_Base_Init+0x98>
 80021bc:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 80021c0:	428a      	cmp	r2, r1
 80021c2:	d015      	beq.n	80021f0 <HAL_TIM_Base_Init+0x98>
 80021c4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80021c8:	428a      	cmp	r2, r1
 80021ca:	d011      	beq.n	80021f0 <HAL_TIM_Base_Init+0x98>
 80021cc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80021d0:	428a      	cmp	r2, r1
 80021d2:	d00d      	beq.n	80021f0 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80021d4:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80021d6:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80021d8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80021dc:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 80021de:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80021e0:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 80021e2:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 80021e4:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80021e6:	e010      	b.n	800220a <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 80021e8:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80021ea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80021ee:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80021f0:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80021f2:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 80021f4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80021f8:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80021fa:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 80021fe:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8002200:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 8002202:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 8002204:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8002206:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 8002208:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800220a:	2301      	movs	r3, #1
 800220c:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800220e:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8002212:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8002216:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800221a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800221e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8002222:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002226:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800222a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800222e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8002232:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8002236:	2000      	movs	r0, #0
}
 8002238:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800223a:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800223c:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800223e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8002242:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 8002244:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8002248:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800224a:	69a1      	ldr	r1, [r4, #24]
 800224c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002250:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 8002252:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8002254:	68e3      	ldr	r3, [r4, #12]
 8002256:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 8002258:	6863      	ldr	r3, [r4, #4]
 800225a:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800225c:	6963      	ldr	r3, [r4, #20]
 800225e:	6313      	str	r3, [r2, #48]	; 0x30
 8002260:	e7d3      	b.n	800220a <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 8002262:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8002266:	f7ff f95b 	bl	8001520 <HAL_TIM_Base_MspInit>
 800226a:	e780      	b.n	800216e <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800226c:	2001      	movs	r0, #1
}
 800226e:	4770      	bx	lr
 8002270:	40010000 	.word	0x40010000

08002274 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 8002274:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8002278:	2b01      	cmp	r3, #1
 800227a:	d12f      	bne.n	80022dc <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800227c:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800227e:	4919      	ldr	r1, [pc, #100]	; (80022e4 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 8002280:	2202      	movs	r2, #2
 8002282:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8002286:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8002288:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800228a:	f042 0201 	orr.w	r2, r2, #1
 800228e:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8002290:	d019      	beq.n	80022c6 <HAL_TIM_Base_Start_IT+0x52>
 8002292:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002296:	d016      	beq.n	80022c6 <HAL_TIM_Base_Start_IT+0x52>
 8002298:	4a13      	ldr	r2, [pc, #76]	; (80022e8 <HAL_TIM_Base_Start_IT+0x74>)
 800229a:	4293      	cmp	r3, r2
 800229c:	d013      	beq.n	80022c6 <HAL_TIM_Base_Start_IT+0x52>
 800229e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80022a2:	4293      	cmp	r3, r2
 80022a4:	d00f      	beq.n	80022c6 <HAL_TIM_Base_Start_IT+0x52>
 80022a6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80022aa:	4293      	cmp	r3, r2
 80022ac:	d00b      	beq.n	80022c6 <HAL_TIM_Base_Start_IT+0x52>
 80022ae:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80022b2:	4293      	cmp	r3, r2
 80022b4:	d007      	beq.n	80022c6 <HAL_TIM_Base_Start_IT+0x52>
 80022b6:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 80022ba:	4293      	cmp	r3, r2
 80022bc:	d003      	beq.n	80022c6 <HAL_TIM_Base_Start_IT+0x52>
 80022be:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 80022c2:	4293      	cmp	r3, r2
 80022c4:	d104      	bne.n	80022d0 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80022c6:	689a      	ldr	r2, [r3, #8]
 80022c8:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80022cc:	2a06      	cmp	r2, #6
 80022ce:	d007      	beq.n	80022e0 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 80022d0:	681a      	ldr	r2, [r3, #0]
 80022d2:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 80022d6:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 80022d8:	601a      	str	r2, [r3, #0]
 80022da:	4770      	bx	lr
    return HAL_ERROR;
 80022dc:	2001      	movs	r0, #1
 80022de:	4770      	bx	lr
  return HAL_OK;
 80022e0:	2000      	movs	r0, #0
}
 80022e2:	4770      	bx	lr
 80022e4:	40010000 	.word	0x40010000
 80022e8:	40000400 	.word	0x40000400

080022ec <HAL_TIM_IC_MspInit>:
 80022ec:	4770      	bx	lr
 80022ee:	bf00      	nop

080022f0 <HAL_TIM_IC_Init>:
  if (htim == NULL)
 80022f0:	2800      	cmp	r0, #0
 80022f2:	f000 8087 	beq.w	8002404 <HAL_TIM_IC_Init+0x114>
{
 80022f6:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 80022f8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80022fc:	4604      	mov	r4, r0
 80022fe:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8002302:	2b00      	cmp	r3, #0
 8002304:	d079      	beq.n	80023fa <HAL_TIM_IC_Init+0x10a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8002306:	6822      	ldr	r2, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8002308:	493f      	ldr	r1, [pc, #252]	; (8002408 <HAL_TIM_IC_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800230a:	2302      	movs	r3, #2
 800230c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8002310:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 8002312:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8002314:	d05d      	beq.n	80023d2 <HAL_TIM_IC_Init+0xe2>
 8002316:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800231a:	d031      	beq.n	8002380 <HAL_TIM_IC_Init+0x90>
 800231c:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 8002320:	428a      	cmp	r2, r1
 8002322:	d02d      	beq.n	8002380 <HAL_TIM_IC_Init+0x90>
 8002324:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8002328:	428a      	cmp	r2, r1
 800232a:	d029      	beq.n	8002380 <HAL_TIM_IC_Init+0x90>
 800232c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8002330:	428a      	cmp	r2, r1
 8002332:	d025      	beq.n	8002380 <HAL_TIM_IC_Init+0x90>
 8002334:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 8002338:	428a      	cmp	r2, r1
 800233a:	d04a      	beq.n	80023d2 <HAL_TIM_IC_Init+0xe2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800233c:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 8002340:	428a      	cmp	r2, r1
 8002342:	d021      	beq.n	8002388 <HAL_TIM_IC_Init+0x98>
 8002344:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8002348:	428a      	cmp	r2, r1
 800234a:	d01d      	beq.n	8002388 <HAL_TIM_IC_Init+0x98>
 800234c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8002350:	428a      	cmp	r2, r1
 8002352:	d019      	beq.n	8002388 <HAL_TIM_IC_Init+0x98>
 8002354:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 8002358:	428a      	cmp	r2, r1
 800235a:	d015      	beq.n	8002388 <HAL_TIM_IC_Init+0x98>
 800235c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8002360:	428a      	cmp	r2, r1
 8002362:	d011      	beq.n	8002388 <HAL_TIM_IC_Init+0x98>
 8002364:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 8002368:	428a      	cmp	r2, r1
 800236a:	d00d      	beq.n	8002388 <HAL_TIM_IC_Init+0x98>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800236c:	69a0      	ldr	r0, [r4, #24]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800236e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8002370:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002374:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 8002376:	6013      	str	r3, [r2, #0]
  TIMx->PSC = Structure->Prescaler;
 8002378:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800237a:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800237c:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800237e:	e010      	b.n	80023a2 <HAL_TIM_IC_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 8002380:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8002382:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8002386:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8002388:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800238a:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800238c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8002390:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8002392:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 8002396:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8002398:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800239a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800239c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800239e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 80023a0:	6291      	str	r1, [r2, #40]	; 0x28
  TIMx->EGR = TIM_EGR_UG;
 80023a2:	2301      	movs	r3, #1
 80023a4:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80023a6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80023aa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80023ae:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 80023b2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80023b6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80023ba:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80023be:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80023c2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80023c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 80023ca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80023ce:	2000      	movs	r0, #0
}
 80023d0:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 80023d2:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80023d4:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80023d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80023da:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 80023dc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80023e0:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80023e2:	69a1      	ldr	r1, [r4, #24]
 80023e4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80023e8:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 80023ea:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 80023ec:	68e3      	ldr	r3, [r4, #12]
 80023ee:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 80023f0:	6863      	ldr	r3, [r4, #4]
 80023f2:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 80023f4:	6963      	ldr	r3, [r4, #20]
 80023f6:	6313      	str	r3, [r2, #48]	; 0x30
 80023f8:	e7d3      	b.n	80023a2 <HAL_TIM_IC_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 80023fa:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_IC_MspInit(htim);
 80023fe:	f7ff ff75 	bl	80022ec <HAL_TIM_IC_MspInit>
 8002402:	e780      	b.n	8002306 <HAL_TIM_IC_Init+0x16>
    return HAL_ERROR;
 8002404:	2001      	movs	r0, #1
}
 8002406:	4770      	bx	lr
 8002408:	40010000 	.word	0x40010000

0800240c <HAL_TIM_IC_ConfigChannel>:
{
 800240c:	4603      	mov	r3, r0
  __HAL_LOCK(htim);
 800240e:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
 8002412:	2801      	cmp	r0, #1
 8002414:	f000 80d4 	beq.w	80025c0 <HAL_TIM_IC_ConfigChannel+0x1b4>
 8002418:	2001      	movs	r0, #1
{
 800241a:	b4f0      	push	{r4, r5, r6, r7}
  __HAL_LOCK(htim);
 800241c:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  if (Channel == TIM_CHANNEL_1)
 8002420:	b15a      	cbz	r2, 800243a <HAL_TIM_IC_ConfigChannel+0x2e>
  else if (Channel == TIM_CHANNEL_2)
 8002422:	2a04      	cmp	r2, #4
 8002424:	d054      	beq.n	80024d0 <HAL_TIM_IC_ConfigChannel+0xc4>
  else if (Channel == TIM_CHANNEL_3)
 8002426:	2a08      	cmp	r2, #8
 8002428:	f000 80a2 	beq.w	8002570 <HAL_TIM_IC_ConfigChannel+0x164>
  else if (Channel == TIM_CHANNEL_4)
 800242c:	2a0c      	cmp	r2, #12
 800242e:	d079      	beq.n	8002524 <HAL_TIM_IC_ConfigChannel+0x118>
  __HAL_UNLOCK(htim);
 8002430:	2200      	movs	r2, #0
 8002432:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 8002436:	bcf0      	pop	{r4, r5, r6, r7}
 8002438:	4770      	bx	lr
    TIM_TI1_SetConfig(htim->Instance,
 800243a:	681a      	ldr	r2, [r3, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
  tmpccmr1 = TIMx->CCMR1;
  tmpccer = TIMx->CCER;

  /* Select the Input */
  if (IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 800243c:	f8df c184 	ldr.w	ip, [pc, #388]	; 80025c4 <HAL_TIM_IC_ConfigChannel+0x1b8>
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8002440:	6a16      	ldr	r6, [r2, #32]
    TIM_TI1_SetConfig(htim->Instance,
 8002442:	68c8      	ldr	r0, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8002444:	f026 0601 	bic.w	r6, r6, #1
    TIM_TI1_SetConfig(htim->Instance,
 8002448:	e9d1 4500 	ldrd	r4, r5, [r1]
  if (IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 800244c:	4562      	cmp	r2, ip
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800244e:	6216      	str	r6, [r2, #32]
  tmpccmr1 = TIMx->CCMR1;
 8002450:	6997      	ldr	r7, [r2, #24]
  tmpccer = TIMx->CCER;
 8002452:	6a16      	ldr	r6, [r2, #32]
  if (IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 8002454:	d01d      	beq.n	8002492 <HAL_TIM_IC_ConfigChannel+0x86>
 8002456:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800245a:	d01a      	beq.n	8002492 <HAL_TIM_IC_ConfigChannel+0x86>
 800245c:	f5ac 4c7c 	sub.w	ip, ip, #64512	; 0xfc00
 8002460:	4562      	cmp	r2, ip
 8002462:	d016      	beq.n	8002492 <HAL_TIM_IC_ConfigChannel+0x86>
 8002464:	f50c 6c80 	add.w	ip, ip, #1024	; 0x400
 8002468:	4562      	cmp	r2, ip
 800246a:	d012      	beq.n	8002492 <HAL_TIM_IC_ConfigChannel+0x86>
 800246c:	f50c 6c80 	add.w	ip, ip, #1024	; 0x400
 8002470:	4562      	cmp	r2, ip
 8002472:	d00e      	beq.n	8002492 <HAL_TIM_IC_ConfigChannel+0x86>
 8002474:	f50c 4c78 	add.w	ip, ip, #63488	; 0xf800
 8002478:	4562      	cmp	r2, ip
 800247a:	d00a      	beq.n	8002492 <HAL_TIM_IC_ConfigChannel+0x86>
 800247c:	f50c 5c70 	add.w	ip, ip, #15360	; 0x3c00
 8002480:	4562      	cmp	r2, ip
 8002482:	d006      	beq.n	8002492 <HAL_TIM_IC_ConfigChannel+0x86>
 8002484:	f5ac 3c94 	sub.w	ip, ip, #75776	; 0x12800
 8002488:	4562      	cmp	r2, ip
 800248a:	d002      	beq.n	8002492 <HAL_TIM_IC_ConfigChannel+0x86>
    tmpccmr1 &= ~TIM_CCMR1_CC1S;
    tmpccmr1 |= TIM_ICSelection;
  }
  else
  {
    tmpccmr1 |= TIM_CCMR1_CC1S_0;
 800248c:	f047 0c01 	orr.w	ip, r7, #1
 8002490:	e003      	b.n	800249a <HAL_TIM_IC_ConfigChannel+0x8e>
    tmpccmr1 &= ~TIM_CCMR1_CC1S;
 8002492:	f027 0c03 	bic.w	ip, r7, #3
    tmpccmr1 |= TIM_ICSelection;
 8002496:	ea45 0c0c 	orr.w	ip, r5, ip
  }

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= ((TIM_ICFilter << 4U) & TIM_CCMR1_IC1F);
 800249a:	0100      	lsls	r0, r0, #4
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800249c:	f02c 0cf0 	bic.w	ip, ip, #240	; 0xf0
  tmpccmr1 |= ((TIM_ICFilter << 4U) & TIM_CCMR1_IC1F);
 80024a0:	b2c0      	uxtb	r0, r0
 80024a2:	ea40 000c 	orr.w	r0, r0, ip
  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
  tmpccer |= (TIM_ICPolarity & (TIM_CCER_CC1P | TIM_CCER_CC1NP));

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 80024a6:	6190      	str	r0, [r2, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 80024a8:	f026 050a 	bic.w	r5, r6, #10
  tmpccer |= (TIM_ICPolarity & (TIM_CCER_CC1P | TIM_CCER_CC1NP));
 80024ac:	f004 000a 	and.w	r0, r4, #10
 80024b0:	4328      	orrs	r0, r5
  TIMx->CCER = tmpccer;
 80024b2:	6210      	str	r0, [r2, #32]
    htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
 80024b4:	6990      	ldr	r0, [r2, #24]
    htim->Instance->CCMR1 |= sConfig->ICPrescaler;
 80024b6:	688c      	ldr	r4, [r1, #8]
    htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
 80024b8:	f020 000c 	bic.w	r0, r0, #12
 80024bc:	6190      	str	r0, [r2, #24]
    htim->Instance->CCMR1 |= sConfig->ICPrescaler;
 80024be:	6991      	ldr	r1, [r2, #24]
 80024c0:	4321      	orrs	r1, r4
 80024c2:	6191      	str	r1, [r2, #24]
  __HAL_UNLOCK(htim);
 80024c4:	2200      	movs	r2, #0
 80024c6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 80024ca:	2000      	movs	r0, #0
}
 80024cc:	bcf0      	pop	{r4, r5, r6, r7}
 80024ce:	4770      	bx	lr
    TIM_TI2_SetConfig(htim->Instance,
 80024d0:	681a      	ldr	r2, [r3, #0]
 80024d2:	e9d1 0600 	ldrd	r0, r6, [r1]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80024d6:	6a15      	ldr	r5, [r2, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
  tmpccmr1 |= ((TIM_ICFilter << 12U) & TIM_CCMR1_IC2F);

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
  tmpccer |= ((TIM_ICPolarity << 4U) & (TIM_CCER_CC2P | TIM_CCER_CC2NP));
 80024d8:	0100      	lsls	r0, r0, #4
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80024da:	f025 0510 	bic.w	r5, r5, #16
  tmpccer |= ((TIM_ICPolarity << 4U) & (TIM_CCER_CC2P | TIM_CCER_CC2NP));
 80024de:	f000 04a0 	and.w	r4, r0, #160	; 0xa0
    TIM_TI2_SetConfig(htim->Instance,
 80024e2:	68c8      	ldr	r0, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80024e4:	6215      	str	r5, [r2, #32]
    htim->Instance->CCMR1 |= (sConfig->ICPrescaler << 8U);
 80024e6:	688d      	ldr	r5, [r1, #8]
  tmpccmr1 = TIMx->CCMR1;
 80024e8:	6991      	ldr	r1, [r2, #24]
  tmpccmr1 &= ~TIM_CCMR1_CC2S;
 80024ea:	f421 7140 	bic.w	r1, r1, #768	; 0x300
  tmpccmr1 |= (TIM_ICSelection << 8U);
 80024ee:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
  tmpccmr1 |= ((TIM_ICFilter << 12U) & TIM_CCMR1_IC2F);
 80024f2:	0300      	lsls	r0, r0, #12
 80024f4:	b280      	uxth	r0, r0
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80024f6:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccmr1 |= ((TIM_ICFilter << 12U) & TIM_CCMR1_IC2F);
 80024fa:	4301      	orrs	r1, r0
  tmpccer = TIMx->CCER;
 80024fc:	6a10      	ldr	r0, [r2, #32]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 80024fe:	6191      	str	r1, [r2, #24]
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8002500:	f020 00a0 	bic.w	r0, r0, #160	; 0xa0
  tmpccer |= ((TIM_ICPolarity << 4U) & (TIM_CCER_CC2P | TIM_CCER_CC2NP));
 8002504:	4320      	orrs	r0, r4
  TIMx->CCER = tmpccer;
 8002506:	6210      	str	r0, [r2, #32]
    htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
 8002508:	6994      	ldr	r4, [r2, #24]
 800250a:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
 800250e:	6194      	str	r4, [r2, #24]
    htim->Instance->CCMR1 |= (sConfig->ICPrescaler << 8U);
 8002510:	6991      	ldr	r1, [r2, #24]
 8002512:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
 8002516:	6191      	str	r1, [r2, #24]
  __HAL_UNLOCK(htim);
 8002518:	2200      	movs	r2, #0
 800251a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800251e:	2000      	movs	r0, #0
}
 8002520:	bcf0      	pop	{r4, r5, r6, r7}
 8002522:	4770      	bx	lr
    TIM_TI4_SetConfig(htim->Instance,
 8002524:	681a      	ldr	r2, [r3, #0]
 8002526:	e9d1 0600 	ldrd	r0, r6, [r1]
{
  uint32_t tmpccmr2;
  uint32_t tmpccer;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800252a:	6a15      	ldr	r5, [r2, #32]
  tmpccmr2 &= ~TIM_CCMR2_IC4F;
  tmpccmr2 |= ((TIM_ICFilter << 12U) & TIM_CCMR2_IC4F);

  /* Select the Polarity and set the CC4E Bit */
  tmpccer &= ~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
  tmpccer |= ((TIM_ICPolarity << 12U) & (TIM_CCER_CC4P | TIM_CCER_CC4NP));
 800252c:	0300      	lsls	r0, r0, #12
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800252e:	f425 5580 	bic.w	r5, r5, #4096	; 0x1000
  tmpccer |= ((TIM_ICPolarity << 12U) & (TIM_CCER_CC4P | TIM_CCER_CC4NP));
 8002532:	f400 4420 	and.w	r4, r0, #40960	; 0xa000
    TIM_TI4_SetConfig(htim->Instance,
 8002536:	68c8      	ldr	r0, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8002538:	6215      	str	r5, [r2, #32]
    htim->Instance->CCMR2 |= (sConfig->ICPrescaler << 8U);
 800253a:	688d      	ldr	r5, [r1, #8]
  tmpccmr2 = TIMx->CCMR2;
 800253c:	69d1      	ldr	r1, [r2, #28]
  tmpccmr2 &= ~TIM_CCMR2_CC4S;
 800253e:	f421 7140 	bic.w	r1, r1, #768	; 0x300
  tmpccmr2 |= ((TIM_ICFilter << 12U) & TIM_CCMR2_IC4F);
 8002542:	0300      	lsls	r0, r0, #12
  tmpccmr2 |= (TIM_ICSelection << 8U);
 8002544:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
  tmpccmr2 |= ((TIM_ICFilter << 12U) & TIM_CCMR2_IC4F);
 8002548:	b280      	uxth	r0, r0
  tmpccmr2 &= ~TIM_CCMR2_IC4F;
 800254a:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccmr2 |= ((TIM_ICFilter << 12U) & TIM_CCMR2_IC4F);
 800254e:	4301      	orrs	r1, r0
  tmpccer = TIMx->CCER;
 8002550:	6a10      	ldr	r0, [r2, #32]

  /* Write to TIMx CCMR2 and CCER registers */
  TIMx->CCMR2 = tmpccmr2;
 8002552:	61d1      	str	r1, [r2, #28]
  tmpccer &= ~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 8002554:	f420 4020 	bic.w	r0, r0, #40960	; 0xa000
  tmpccer |= ((TIM_ICPolarity << 12U) & (TIM_CCER_CC4P | TIM_CCER_CC4NP));
 8002558:	4320      	orrs	r0, r4
  TIMx->CCER = tmpccer ;
 800255a:	6210      	str	r0, [r2, #32]
    htim->Instance->CCMR2 &= ~TIM_CCMR2_IC4PSC;
 800255c:	69d4      	ldr	r4, [r2, #28]
 800255e:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
 8002562:	61d4      	str	r4, [r2, #28]
    htim->Instance->CCMR2 |= (sConfig->ICPrescaler << 8U);
 8002564:	69d1      	ldr	r1, [r2, #28]
 8002566:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
  HAL_StatusTypeDef status = HAL_OK;
 800256a:	2000      	movs	r0, #0
    htim->Instance->CCMR2 |= (sConfig->ICPrescaler << 8U);
 800256c:	61d1      	str	r1, [r2, #28]
 800256e:	e75f      	b.n	8002430 <HAL_TIM_IC_ConfigChannel+0x24>
    TIM_TI3_SetConfig(htim->Instance,
 8002570:	681a      	ldr	r2, [r3, #0]
 8002572:	e9d1 0400 	ldrd	r0, r4, [r1]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8002576:	6a16      	ldr	r6, [r2, #32]
  tmpccer |= ((TIM_ICPolarity << 8U) & (TIM_CCER_CC3P | TIM_CCER_CC3NP));
 8002578:	0200      	lsls	r0, r0, #8
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800257a:	f426 7680 	bic.w	r6, r6, #256	; 0x100
  tmpccer |= ((TIM_ICPolarity << 8U) & (TIM_CCER_CC3P | TIM_CCER_CC3NP));
 800257e:	f400 6520 	and.w	r5, r0, #2560	; 0xa00
    TIM_TI3_SetConfig(htim->Instance,
 8002582:	68c8      	ldr	r0, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8002584:	6216      	str	r6, [r2, #32]
    htim->Instance->CCMR2 |= sConfig->ICPrescaler;
 8002586:	688e      	ldr	r6, [r1, #8]
  tmpccmr2 = TIMx->CCMR2;
 8002588:	69d1      	ldr	r1, [r2, #28]
  tmpccmr2 &= ~TIM_CCMR2_CC3S;
 800258a:	f021 0103 	bic.w	r1, r1, #3
  tmpccmr2 |= TIM_ICSelection;
 800258e:	4321      	orrs	r1, r4
  tmpccmr2 |= ((TIM_ICFilter << 4U) & TIM_CCMR2_IC3F);
 8002590:	0100      	lsls	r0, r0, #4
 8002592:	b2c0      	uxtb	r0, r0
  tmpccmr2 &= ~TIM_CCMR2_IC3F;
 8002594:	f021 01f0 	bic.w	r1, r1, #240	; 0xf0
  tmpccmr2 |= ((TIM_ICFilter << 4U) & TIM_CCMR2_IC3F);
 8002598:	4301      	orrs	r1, r0
  tmpccer = TIMx->CCER;
 800259a:	6a10      	ldr	r0, [r2, #32]
  TIMx->CCMR2 = tmpccmr2;
 800259c:	61d1      	str	r1, [r2, #28]
  tmpccer &= ~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 800259e:	f420 6020 	bic.w	r0, r0, #2560	; 0xa00
  tmpccer |= ((TIM_ICPolarity << 8U) & (TIM_CCER_CC3P | TIM_CCER_CC3NP));
 80025a2:	4328      	orrs	r0, r5
  TIMx->CCER = tmpccer;
 80025a4:	6210      	str	r0, [r2, #32]
    htim->Instance->CCMR2 &= ~TIM_CCMR2_IC3PSC;
 80025a6:	69d4      	ldr	r4, [r2, #28]
 80025a8:	f024 040c 	bic.w	r4, r4, #12
 80025ac:	61d4      	str	r4, [r2, #28]
    htim->Instance->CCMR2 |= sConfig->ICPrescaler;
 80025ae:	69d1      	ldr	r1, [r2, #28]
 80025b0:	4331      	orrs	r1, r6
 80025b2:	61d1      	str	r1, [r2, #28]
  __HAL_UNLOCK(htim);
 80025b4:	2200      	movs	r2, #0
 80025b6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 80025ba:	2000      	movs	r0, #0
}
 80025bc:	bcf0      	pop	{r4, r5, r6, r7}
 80025be:	4770      	bx	lr
  __HAL_LOCK(htim);
 80025c0:	2002      	movs	r0, #2
}
 80025c2:	4770      	bx	lr
 80025c4:	40010000 	.word	0x40010000

080025c8 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 80025c8:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80025cc:	2b01      	cmp	r3, #1
 80025ce:	d075      	beq.n	80026bc <HAL_TIM_ConfigClockSource+0xf4>
 80025d0:	4602      	mov	r2, r0
{
 80025d2:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 80025d4:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 80025d6:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80025d8:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 80025dc:	2001      	movs	r0, #1
 80025de:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 80025e2:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80025e4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80025e8:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 80025ec:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 80025ee:	680b      	ldr	r3, [r1, #0]
 80025f0:	2b60      	cmp	r3, #96	; 0x60
 80025f2:	d065      	beq.n	80026c0 <HAL_TIM_ConfigClockSource+0xf8>
 80025f4:	d824      	bhi.n	8002640 <HAL_TIM_ConfigClockSource+0x78>
 80025f6:	2b40      	cmp	r3, #64	; 0x40
 80025f8:	d07c      	beq.n	80026f4 <HAL_TIM_ConfigClockSource+0x12c>
 80025fa:	d94b      	bls.n	8002694 <HAL_TIM_ConfigClockSource+0xcc>
 80025fc:	2b50      	cmp	r3, #80	; 0x50
 80025fe:	d117      	bne.n	8002630 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8002600:	6848      	ldr	r0, [r1, #4]
 8002602:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 8002604:	6a21      	ldr	r1, [r4, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8002606:	6a23      	ldr	r3, [r4, #32]
 8002608:	f023 0301 	bic.w	r3, r3, #1
 800260c:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800260e:	69a3      	ldr	r3, [r4, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8002610:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8002614:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccer |= TIM_ICPolarity;
 8002618:	4301      	orrs	r1, r0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800261a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800261e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 8002620:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8002622:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8002624:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8002628:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800262c:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800262e:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 8002630:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 8002632:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 8002634:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8002638:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800263c:	bc30      	pop	{r4, r5}
 800263e:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 8002640:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002644:	d038      	beq.n	80026b8 <HAL_TIM_ConfigClockSource+0xf0>
 8002646:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800264a:	d110      	bne.n	800266e <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800264c:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 8002650:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8002652:	432b      	orrs	r3, r5
 8002654:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8002656:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800265a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800265e:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8002660:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8002662:	68a3      	ldr	r3, [r4, #8]
 8002664:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 8002668:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800266a:	60a3      	str	r3, [r4, #8]
      break;
 800266c:	e7e0      	b.n	8002630 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800266e:	2b70      	cmp	r3, #112	; 0x70
 8002670:	d1de      	bne.n	8002630 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8002672:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 8002676:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8002678:	432b      	orrs	r3, r5
 800267a:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800267c:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8002680:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8002684:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 8002686:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 8002688:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800268a:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800268e:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 8002690:	60a3      	str	r3, [r4, #8]
      break;
 8002692:	e7cd      	b.n	8002630 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 8002694:	2b20      	cmp	r3, #32
 8002696:	d002      	beq.n	800269e <HAL_TIM_ConfigClockSource+0xd6>
 8002698:	d90a      	bls.n	80026b0 <HAL_TIM_ConfigClockSource+0xe8>
 800269a:	2b30      	cmp	r3, #48	; 0x30
 800269c:	d1c8      	bne.n	8002630 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800269e:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 80026a0:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80026a4:	430b      	orrs	r3, r1
 80026a6:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 80026aa:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 80026ac:	60a3      	str	r3, [r4, #8]
}
 80026ae:	e7bf      	b.n	8002630 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 80026b0:	f033 0110 	bics.w	r1, r3, #16
 80026b4:	d1bc      	bne.n	8002630 <HAL_TIM_ConfigClockSource+0x68>
 80026b6:	e7f2      	b.n	800269e <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 80026b8:	2000      	movs	r0, #0
 80026ba:	e7b9      	b.n	8002630 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 80026bc:	2002      	movs	r0, #2
}
 80026be:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80026c0:	6a20      	ldr	r0, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 80026c2:	68cb      	ldr	r3, [r1, #12]
 80026c4:	684d      	ldr	r5, [r1, #4]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80026c6:	f020 0010 	bic.w	r0, r0, #16
 80026ca:	6220      	str	r0, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 80026cc:	69a1      	ldr	r1, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80026ce:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccmr1 |= (TIM_ICFilter << 12U);
 80026d2:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
  tmpccer = TIMx->CCER;
 80026d6:	6a23      	ldr	r3, [r4, #32]
  TIMx->CCMR1 = tmpccmr1 ;
 80026d8:	61a1      	str	r1, [r4, #24]
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80026da:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 80026de:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCER = tmpccer;
 80026e2:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 80026e4:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 80026e6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80026ea:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 80026ee:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 80026f0:	60a3      	str	r3, [r4, #8]
}
 80026f2:	e79d      	b.n	8002630 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 80026f4:	6848      	ldr	r0, [r1, #4]
 80026f6:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 80026f8:	6a21      	ldr	r1, [r4, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80026fa:	6a23      	ldr	r3, [r4, #32]
 80026fc:	f023 0301 	bic.w	r3, r3, #1
 8002700:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 8002702:	69a3      	ldr	r3, [r4, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8002704:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8002708:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccer |= TIM_ICPolarity;
 800270c:	4301      	orrs	r1, r0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800270e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 8002712:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 8002714:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 8002716:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8002718:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800271c:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 8002720:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 8002722:	60a3      	str	r3, [r4, #8]
}
 8002724:	e784      	b.n	8002630 <HAL_TIM_ConfigClockSource+0x68>
 8002726:	bf00      	nop

08002728 <HAL_TIM_PeriodElapsedCallback>:
 8002728:	4770      	bx	lr
 800272a:	bf00      	nop

0800272c <HAL_TIM_OC_DelayElapsedCallback>:
 800272c:	4770      	bx	lr
 800272e:	bf00      	nop

08002730 <HAL_TIM_IC_CaptureCallback>:
 8002730:	4770      	bx	lr
 8002732:	bf00      	nop

08002734 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002734:	4770      	bx	lr
 8002736:	bf00      	nop

08002738 <HAL_TIM_TriggerCallback>:
 8002738:	4770      	bx	lr
 800273a:	bf00      	nop

0800273c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800273c:	6803      	ldr	r3, [r0, #0]
 800273e:	691a      	ldr	r2, [r3, #16]
 8002740:	0791      	lsls	r1, r2, #30
{
 8002742:	b510      	push	{r4, lr}
 8002744:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8002746:	d502      	bpl.n	800274e <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8002748:	68da      	ldr	r2, [r3, #12]
 800274a:	0792      	lsls	r2, r2, #30
 800274c:	d45f      	bmi.n	800280e <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800274e:	691a      	ldr	r2, [r3, #16]
 8002750:	0750      	lsls	r0, r2, #29
 8002752:	d502      	bpl.n	800275a <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8002754:	68da      	ldr	r2, [r3, #12]
 8002756:	0751      	lsls	r1, r2, #29
 8002758:	d446      	bmi.n	80027e8 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800275a:	691a      	ldr	r2, [r3, #16]
 800275c:	0712      	lsls	r2, r2, #28
 800275e:	d502      	bpl.n	8002766 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8002760:	68da      	ldr	r2, [r3, #12]
 8002762:	0710      	lsls	r0, r2, #28
 8002764:	d42e      	bmi.n	80027c4 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8002766:	691a      	ldr	r2, [r3, #16]
 8002768:	06d2      	lsls	r2, r2, #27
 800276a:	d502      	bpl.n	8002772 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800276c:	68da      	ldr	r2, [r3, #12]
 800276e:	06d0      	lsls	r0, r2, #27
 8002770:	d418      	bmi.n	80027a4 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8002772:	691a      	ldr	r2, [r3, #16]
 8002774:	07d1      	lsls	r1, r2, #31
 8002776:	d502      	bpl.n	800277e <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8002778:	68da      	ldr	r2, [r3, #12]
 800277a:	07d2      	lsls	r2, r2, #31
 800277c:	d45d      	bmi.n	800283a <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800277e:	691a      	ldr	r2, [r3, #16]
 8002780:	0610      	lsls	r0, r2, #24
 8002782:	d502      	bpl.n	800278a <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8002784:	68da      	ldr	r2, [r3, #12]
 8002786:	0611      	lsls	r1, r2, #24
 8002788:	d45f      	bmi.n	800284a <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800278a:	691a      	ldr	r2, [r3, #16]
 800278c:	0652      	lsls	r2, r2, #25
 800278e:	d502      	bpl.n	8002796 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8002790:	68da      	ldr	r2, [r3, #12]
 8002792:	0650      	lsls	r0, r2, #25
 8002794:	d461      	bmi.n	800285a <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8002796:	691a      	ldr	r2, [r3, #16]
 8002798:	0691      	lsls	r1, r2, #26
 800279a:	d502      	bpl.n	80027a2 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800279c:	68da      	ldr	r2, [r3, #12]
 800279e:	0692      	lsls	r2, r2, #26
 80027a0:	d443      	bmi.n	800282a <HAL_TIM_IRQHandler+0xee>
}
 80027a2:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80027a4:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80027a8:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80027aa:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80027ac:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80027ae:	69db      	ldr	r3, [r3, #28]
 80027b0:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80027b4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80027b6:	d064      	beq.n	8002882 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 80027b8:	f7ff ffba 	bl	8002730 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80027bc:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80027be:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80027c0:	7722      	strb	r2, [r4, #28]
 80027c2:	e7d6      	b.n	8002772 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80027c4:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80027c8:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80027ca:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80027cc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80027ce:	69db      	ldr	r3, [r3, #28]
 80027d0:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 80027d2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80027d4:	d152      	bne.n	800287c <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80027d6:	f7ff ffa9 	bl	800272c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80027da:	4620      	mov	r0, r4
 80027dc:	f7ff ffaa 	bl	8002734 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80027e0:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80027e2:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80027e4:	7722      	strb	r2, [r4, #28]
 80027e6:	e7be      	b.n	8002766 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80027e8:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80027ec:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80027ee:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80027f0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80027f2:	699b      	ldr	r3, [r3, #24]
 80027f4:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80027f8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80027fa:	d13c      	bne.n	8002876 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80027fc:	f7ff ff96 	bl	800272c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8002800:	4620      	mov	r0, r4
 8002802:	f7ff ff97 	bl	8002734 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8002806:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8002808:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800280a:	7722      	strb	r2, [r4, #28]
 800280c:	e7a5      	b.n	800275a <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800280e:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8002812:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8002814:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8002816:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8002818:	699b      	ldr	r3, [r3, #24]
 800281a:	079b      	lsls	r3, r3, #30
 800281c:	d025      	beq.n	800286a <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800281e:	f7ff ff87 	bl	8002730 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8002822:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8002824:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8002826:	7722      	strb	r2, [r4, #28]
 8002828:	e791      	b.n	800274e <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800282a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800282e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8002830:	611a      	str	r2, [r3, #16]
}
 8002832:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8002836:	f000 b86b 	b.w	8002910 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800283a:	f06f 0201 	mvn.w	r2, #1
 800283e:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8002840:	4620      	mov	r0, r4
 8002842:	f7ff ff71 	bl	8002728 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8002846:	6823      	ldr	r3, [r4, #0]
 8002848:	e799      	b.n	800277e <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800284a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800284e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8002850:	4620      	mov	r0, r4
 8002852:	f000 f85f 	bl	8002914 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8002856:	6823      	ldr	r3, [r4, #0]
 8002858:	e797      	b.n	800278a <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800285a:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800285e:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8002860:	4620      	mov	r0, r4
 8002862:	f7ff ff69 	bl	8002738 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8002866:	6823      	ldr	r3, [r4, #0]
 8002868:	e795      	b.n	8002796 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800286a:	f7ff ff5f 	bl	800272c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800286e:	4620      	mov	r0, r4
 8002870:	f7ff ff60 	bl	8002734 <HAL_TIM_PWM_PulseFinishedCallback>
 8002874:	e7d5      	b.n	8002822 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 8002876:	f7ff ff5b 	bl	8002730 <HAL_TIM_IC_CaptureCallback>
 800287a:	e7c4      	b.n	8002806 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800287c:	f7ff ff58 	bl	8002730 <HAL_TIM_IC_CaptureCallback>
 8002880:	e7ae      	b.n	80027e0 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8002882:	f7ff ff53 	bl	800272c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8002886:	4620      	mov	r0, r4
 8002888:	f7ff ff54 	bl	8002734 <HAL_TIM_PWM_PulseFinishedCallback>
 800288c:	e796      	b.n	80027bc <HAL_TIM_IRQHandler+0x80>
 800288e:	bf00      	nop

08002890 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8002890:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8002894:	2b01      	cmp	r3, #1
 8002896:	d037      	beq.n	8002908 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8002898:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800289a:	2202      	movs	r2, #2
{
 800289c:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800289e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 80028a2:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80028a4:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 80028a6:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 80028a8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80028ac:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80028ae:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80028b0:	4a16      	ldr	r2, [pc, #88]	; (800290c <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 80028b2:	4293      	cmp	r3, r2
 80028b4:	d01a      	beq.n	80028ec <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 80028b6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80028ba:	d017      	beq.n	80028ec <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 80028bc:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80028c0:	4293      	cmp	r3, r2
 80028c2:	d013      	beq.n	80028ec <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 80028c4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80028c8:	4293      	cmp	r3, r2
 80028ca:	d00f      	beq.n	80028ec <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 80028cc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80028d0:	4293      	cmp	r3, r2
 80028d2:	d00b      	beq.n	80028ec <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 80028d4:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80028d8:	4293      	cmp	r3, r2
 80028da:	d007      	beq.n	80028ec <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 80028dc:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 80028e0:	4293      	cmp	r3, r2
 80028e2:	d003      	beq.n	80028ec <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 80028e4:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 80028e8:	4293      	cmp	r3, r2
 80028ea:	d104      	bne.n	80028f6 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80028ec:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 80028ee:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80028f2:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 80028f4:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 80028f6:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 80028f8:	2201      	movs	r2, #1
 80028fa:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 80028fe:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 8002902:	bc30      	pop	{r4, r5}
  return HAL_OK;
 8002904:	4618      	mov	r0, r3
}
 8002906:	4770      	bx	lr
  __HAL_LOCK(htim);
 8002908:	2002      	movs	r0, #2
}
 800290a:	4770      	bx	lr
 800290c:	40010000 	.word	0x40010000

08002910 <HAL_TIMEx_CommutCallback>:
 8002910:	4770      	bx	lr
 8002912:	bf00      	nop

08002914 <HAL_TIMEx_BreakCallback>:
 8002914:	4770      	bx	lr
 8002916:	bf00      	nop

08002918 <HAL_UART_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
  /* Check the UART handle allocation */
  if (huart == NULL)
 8002918:	2800      	cmp	r0, #0
 800291a:	f000 808f 	beq.w	8002a3c <HAL_UART_Init+0x124>
{
 800291e:	b538      	push	{r3, r4, r5, lr}
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 8002920:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8002924:	4604      	mov	r4, r0
 8002926:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800292a:	2b00      	cmp	r3, #0
 800292c:	f000 8081 	beq.w	8002a32 <HAL_UART_Init+0x11a>
  }

  huart->gState = HAL_UART_STATE_BUSY;

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 8002930:	6823      	ldr	r3, [r4, #0]
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8002932:	68e0      	ldr	r0, [r4, #12]
  huart->gState = HAL_UART_STATE_BUSY;
 8002934:	2224      	movs	r2, #36	; 0x24
 8002936:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UART_DISABLE(huart);
 800293a:	68da      	ldr	r2, [r3, #12]
 800293c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002940:	60da      	str	r2, [r3, #12]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8002942:	6919      	ldr	r1, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8002944:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8002946:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
 800294a:	4301      	orrs	r1, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800294c:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800294e:	6119      	str	r1, [r3, #16]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8002950:	4302      	orrs	r2, r0
 8002952:	6960      	ldr	r0, [r4, #20]
  MODIFY_REG(huart->Instance->CR1,
 8002954:	68d9      	ldr	r1, [r3, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8002956:	4302      	orrs	r2, r0
 8002958:	69e0      	ldr	r0, [r4, #28]
  MODIFY_REG(huart->Instance->CR1,
 800295a:	f421 4116 	bic.w	r1, r1, #38400	; 0x9600
 800295e:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8002962:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1,
 8002964:	430a      	orrs	r2, r1
 8002966:	60da      	str	r2, [r3, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8002968:	695a      	ldr	r2, [r3, #20]
 800296a:	69a0      	ldr	r0, [r4, #24]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800296c:	4934      	ldr	r1, [pc, #208]	; (8002a40 <HAL_UART_Init+0x128>)
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800296e:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8002972:	4302      	orrs	r2, r0
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8002974:	428b      	cmp	r3, r1
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8002976:	615a      	str	r2, [r3, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8002978:	d035      	beq.n	80029e6 <HAL_UART_Init+0xce>
 800297a:	4a32      	ldr	r2, [pc, #200]	; (8002a44 <HAL_UART_Init+0x12c>)
 800297c:	4293      	cmp	r3, r2
 800297e:	d032      	beq.n	80029e6 <HAL_UART_Init+0xce>
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8002980:	f7ff fb7a 	bl	8002078 <HAL_RCC_GetPCLK1Freq>
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8002984:	69e3      	ldr	r3, [r4, #28]
 8002986:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800298a:	d032      	beq.n	80029f2 <HAL_UART_Init+0xda>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800298c:	6863      	ldr	r3, [r4, #4]
 800298e:	2119      	movs	r1, #25
 8002990:	009a      	lsls	r2, r3, #2
 8002992:	fba0 0101 	umull	r0, r1, r0, r1
 8002996:	0f9b      	lsrs	r3, r3, #30
 8002998:	f7fe f906 	bl	8000ba8 <__aeabi_uldivmod>
 800299c:	492a      	ldr	r1, [pc, #168]	; (8002a48 <HAL_UART_Init+0x130>)
 800299e:	fba1 3200 	umull	r3, r2, r1, r0
 80029a2:	0952      	lsrs	r2, r2, #5
 80029a4:	2564      	movs	r5, #100	; 0x64
 80029a6:	fb05 0012 	mls	r0, r5, r2, r0
 80029aa:	0100      	lsls	r0, r0, #4
 80029ac:	3032      	adds	r0, #50	; 0x32
 80029ae:	6823      	ldr	r3, [r4, #0]
 80029b0:	fba1 1000 	umull	r1, r0, r1, r0
 80029b4:	0112      	lsls	r2, r2, #4
 80029b6:	eb02 1050 	add.w	r0, r2, r0, lsr #5
 80029ba:	6098      	str	r0, [r3, #8]
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80029bc:	691a      	ldr	r2, [r3, #16]
 80029be:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80029c2:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80029c4:	695a      	ldr	r2, [r3, #20]
 80029c6:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80029ca:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 80029cc:	68da      	ldr	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80029ce:	2500      	movs	r5, #0
  huart->gState = HAL_UART_STATE_READY;
 80029d0:	2120      	movs	r1, #32
  __HAL_UART_ENABLE(huart);
 80029d2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80029d6:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80029d8:	6425      	str	r5, [r4, #64]	; 0x40
  huart->gState = HAL_UART_STATE_READY;
 80029da:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  huart->RxState = HAL_UART_STATE_READY;
 80029de:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
  return HAL_OK;
 80029e2:	4628      	mov	r0, r5
}
 80029e4:	bd38      	pop	{r3, r4, r5, pc}
      pclk = HAL_RCC_GetPCLK2Freq();
 80029e6:	f7ff fb57 	bl	8002098 <HAL_RCC_GetPCLK2Freq>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80029ea:	69e3      	ldr	r3, [r4, #28]
 80029ec:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80029f0:	d1cc      	bne.n	800298c <HAL_UART_Init+0x74>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 80029f2:	6862      	ldr	r2, [r4, #4]
 80029f4:	2119      	movs	r1, #25
 80029f6:	1892      	adds	r2, r2, r2
 80029f8:	f04f 0300 	mov.w	r3, #0
 80029fc:	415b      	adcs	r3, r3
 80029fe:	fba0 0101 	umull	r0, r1, r0, r1
 8002a02:	f7fe f8d1 	bl	8000ba8 <__aeabi_uldivmod>
 8002a06:	4b10      	ldr	r3, [pc, #64]	; (8002a48 <HAL_UART_Init+0x130>)
 8002a08:	fba3 2100 	umull	r2, r1, r3, r0
 8002a0c:	094d      	lsrs	r5, r1, #5
 8002a0e:	2264      	movs	r2, #100	; 0x64
 8002a10:	fb02 0215 	mls	r2, r2, r5, r0
 8002a14:	00d2      	lsls	r2, r2, #3
 8002a16:	3232      	adds	r2, #50	; 0x32
 8002a18:	fba3 3202 	umull	r3, r2, r3, r2
 8002a1c:	f3c2 1142 	ubfx	r1, r2, #5, #3
 8002a20:	0912      	lsrs	r2, r2, #4
 8002a22:	6823      	ldr	r3, [r4, #0]
 8002a24:	eb01 1105 	add.w	r1, r1, r5, lsl #4
 8002a28:	f402 72f8 	and.w	r2, r2, #496	; 0x1f0
 8002a2c:	440a      	add	r2, r1
 8002a2e:	609a      	str	r2, [r3, #8]
 8002a30:	e7c4      	b.n	80029bc <HAL_UART_Init+0xa4>
    huart->Lock = HAL_UNLOCKED;
 8002a32:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_UART_MspInit(huart);
 8002a36:	f7fe fde7 	bl	8001608 <HAL_UART_MspInit>
 8002a3a:	e779      	b.n	8002930 <HAL_UART_Init+0x18>
    return HAL_ERROR;
 8002a3c:	2001      	movs	r0, #1
}
 8002a3e:	4770      	bx	lr
 8002a40:	40011000 	.word	0x40011000
 8002a44:	40011400 	.word	0x40011400
 8002a48:	51eb851f 	.word	0x51eb851f

08002a4c <ai_network_get_error>:
}

AI_API_ENTRY
ai_error ai_network_get_error(ai_handle network)
{
  return ai_platform_network_get_error(network);
 8002a4c:	f000 ba52 	b.w	8002ef4 <ai_platform_network_get_error>

08002a50 <ai_network_inputs_get>:
}

AI_API_ENTRY
ai_buffer* ai_network_inputs_get(ai_handle network, ai_u16 *n_buffer)
{
  if (network == AI_HANDLE_NULL) {
 8002a50:	b108      	cbz	r0, 8002a56 <ai_network_inputs_get+0x6>
    network = (ai_handle)&AI_NET_OBJ_INSTANCE;
    ((ai_network *)network)->magic = AI_MAGIC_CONTEXT_TOKEN;
  }
  return ai_platform_inputs_get(network, n_buffer);
 8002a52:	f000 bac3 	b.w	8002fdc <ai_platform_inputs_get>
    ((ai_network *)network)->magic = AI_MAGIC_CONTEXT_TOKEN;
 8002a56:	4802      	ldr	r0, [pc, #8]	; (8002a60 <ai_network_inputs_get+0x10>)
 8002a58:	4b02      	ldr	r3, [pc, #8]	; (8002a64 <ai_network_inputs_get+0x14>)
 8002a5a:	6003      	str	r3, [r0, #0]
  return ai_platform_inputs_get(network, n_buffer);
 8002a5c:	f000 babe 	b.w	8002fdc <ai_platform_inputs_get>
 8002a60:	20000584 	.word	0x20000584
 8002a64:	a1c00100 	.word	0xa1c00100

08002a68 <ai_network_outputs_get>:
}

AI_API_ENTRY
ai_buffer* ai_network_outputs_get(ai_handle network, ai_u16 *n_buffer)
{
  if (network == AI_HANDLE_NULL) {
 8002a68:	b108      	cbz	r0, 8002a6e <ai_network_outputs_get+0x6>
    network = (ai_handle)&AI_NET_OBJ_INSTANCE;
    ((ai_network *)network)->magic = AI_MAGIC_CONTEXT_TOKEN;
  }
  return ai_platform_outputs_get(network, n_buffer);
 8002a6a:	f000 bb8d 	b.w	8003188 <ai_platform_outputs_get>
    ((ai_network *)network)->magic = AI_MAGIC_CONTEXT_TOKEN;
 8002a6e:	4802      	ldr	r0, [pc, #8]	; (8002a78 <ai_network_outputs_get+0x10>)
 8002a70:	4b02      	ldr	r3, [pc, #8]	; (8002a7c <ai_network_outputs_get+0x14>)
 8002a72:	6003      	str	r3, [r0, #0]
  return ai_platform_outputs_get(network, n_buffer);
 8002a74:	f000 bb88 	b.w	8003188 <ai_platform_outputs_get>
 8002a78:	20000584 	.word	0x20000584
 8002a7c:	a1c00100 	.word	0xa1c00100

08002a80 <ai_network_init>:
}

AI_API_ENTRY
ai_bool ai_network_init(
  ai_handle network, const ai_network_params* params)
{
 8002a80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002a84:	4606      	mov	r6, r0
 8002a86:	460d      	mov	r5, r1
  ai_network* net_ctx = ai_platform_network_init(network, params);
 8002a88:	f000 fd24 	bl	80034d4 <ai_platform_network_init>
  if (!net_ctx) return false;
 8002a8c:	4604      	mov	r4, r0
 8002a8e:	2800      	cmp	r0, #0
 8002a90:	d073      	beq.n	8002b7a <ai_network_init+0xfa>
  if (ai_platform_get_weights_map(g_network_weights_map, 1, params)) {
 8002a92:	4f41      	ldr	r7, [pc, #260]	; (8002b98 <ai_network_init+0x118>)
 8002a94:	462a      	mov	r2, r5
 8002a96:	2101      	movs	r1, #1
 8002a98:	4638      	mov	r0, r7
 8002a9a:	f000 f961 	bl	8002d60 <ai_platform_get_weights_map>
 8002a9e:	4680      	mov	r8, r0
 8002aa0:	2800      	cmp	r0, #0
 8002aa2:	d06c      	beq.n	8002b7e <ai_network_init+0xfe>
    dense_1_bias_array.format |= AI_FMT_FLAG_CONST;
 8002aa4:	f8df e120 	ldr.w	lr, [pc, #288]	; 8002bc8 <ai_network_init+0x148>
    dense_1_bias_array.data = AI_PTR(g_network_weights_map[0] + 0);
 8002aa8:	683b      	ldr	r3, [r7, #0]
    dense_1_bias_array.format |= AI_FMT_FLAG_CONST;
 8002aaa:	f8de 2000 	ldr.w	r2, [lr]
    dense_2_weights_array.format |= AI_FMT_FLAG_CONST;
 8002aae:	4f3b      	ldr	r7, [pc, #236]	; (8002b9c <ai_network_init+0x11c>)
    dense_2_bias_array.format |= AI_FMT_FLAG_CONST;
 8002ab0:	483b      	ldr	r0, [pc, #236]	; (8002ba0 <ai_network_init+0x120>)
    dense_0_weights_array.format |= AI_FMT_FLAG_CONST;
 8002ab2:	493c      	ldr	r1, [pc, #240]	; (8002ba4 <ai_network_init+0x124>)
    dense_0_bias_array.format |= AI_FMT_FLAG_CONST;
 8002ab4:	f8df a114 	ldr.w	sl, [pc, #276]	; 8002bcc <ai_network_init+0x14c>
    dense_1_weights_array.format |= AI_FMT_FLAG_CONST;
 8002ab8:	f8df c114 	ldr.w	ip, [pc, #276]	; 8002bd0 <ai_network_init+0x150>
    dense_1_bias_array.format |= AI_FMT_FLAG_CONST;
 8002abc:	f042 4980 	orr.w	r9, r2, #1073741824	; 0x40000000
    dense_2_weights_array.format |= AI_FMT_FLAG_CONST;
 8002ac0:	683a      	ldr	r2, [r7, #0]
    dense_1_bias_array.format |= AI_FMT_FLAG_CONST;
 8002ac2:	f8ce 9000 	str.w	r9, [lr]
    dense_1_bias_array.data = AI_PTR(g_network_weights_map[0] + 0);
 8002ac6:	e9ce 3302 	strd	r3, r3, [lr, #8]
    dense_2_weights_array.format |= AI_FMT_FLAG_CONST;
 8002aca:	f042 4e80 	orr.w	lr, r2, #1073741824	; 0x40000000
    dense_2_bias_array.format |= AI_FMT_FLAG_CONST;
 8002ace:	6802      	ldr	r2, [r0, #0]
    dense_2_weights_array.format |= AI_FMT_FLAG_CONST;
 8002ad0:	f8c7 e000 	str.w	lr, [r7]
    dense_2_bias_array.format |= AI_FMT_FLAG_CONST;
 8002ad4:	f042 4e80 	orr.w	lr, r2, #1073741824	; 0x40000000
    dense_0_weights_array.format |= AI_FMT_FLAG_CONST;
 8002ad8:	680a      	ldr	r2, [r1, #0]
    dense_2_bias_array.format |= AI_FMT_FLAG_CONST;
 8002ada:	f8c0 e000 	str.w	lr, [r0]
    dense_0_weights_array.format |= AI_FMT_FLAG_CONST;
 8002ade:	f042 4e80 	orr.w	lr, r2, #1073741824	; 0x40000000
    dense_0_bias_array.format |= AI_FMT_FLAG_CONST;
 8002ae2:	f8da 2000 	ldr.w	r2, [sl]
    dense_0_weights_array.format |= AI_FMT_FLAG_CONST;
 8002ae6:	f8c1 e000 	str.w	lr, [r1]
    dense_0_bias_array.format |= AI_FMT_FLAG_CONST;
 8002aea:	f042 4e80 	orr.w	lr, r2, #1073741824	; 0x40000000
    dense_1_weights_array.format |= AI_FMT_FLAG_CONST;
 8002aee:	f8dc 2000 	ldr.w	r2, [ip]
    dense_0_bias_array.format |= AI_FMT_FLAG_CONST;
 8002af2:	f8ca e000 	str.w	lr, [sl]
    dense_1_weights_array.format |= AI_FMT_FLAG_CONST;
 8002af6:	f042 4e80 	orr.w	lr, r2, #1073741824	; 0x40000000
 8002afa:	f8cc e000 	str.w	lr, [ip]
    dense_2_weights_array.data = AI_PTR(g_network_weights_map[0] + 256);
 8002afe:	f503 7e80 	add.w	lr, r3, #256	; 0x100
    dense_2_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 256);
 8002b02:	e9c7 ee02 	strd	lr, lr, [r7, #8]
    dense_2_bias_array.data = AI_PTR(g_network_weights_map[0] + 1536);
 8002b06:	f503 67c0 	add.w	r7, r3, #1536	; 0x600
    dense_2_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 1536);
 8002b0a:	e9c0 7702 	strd	r7, r7, [r0, #8]
    dense_0_weights_array.data = AI_PTR(g_network_weights_map[0] + 1556);
 8002b0e:	f203 6014 	addw	r0, r3, #1556	; 0x614
    dense_0_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 1556);
 8002b12:	e9c1 0002 	strd	r0, r0, [r1, #8]
    dense_0_bias_array.data = AI_PTR(g_network_weights_map[0] + 2068);
 8002b16:	f603 0114 	addw	r1, r3, #2068	; 0x814
    dense_1_weights_array.data = AI_PTR(g_network_weights_map[0] + 2324);
 8002b1a:	f603 1314 	addw	r3, r3, #2324	; 0x914
    dense_0_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 2068);
 8002b1e:	e9ca 1102 	strd	r1, r1, [sl, #8]
    dense_1_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 2324);
 8002b22:	e9cc 3302 	strd	r3, r3, [ip, #8]
  if (ai_platform_get_activations_map(g_network_activations_map, 1, params)) {
 8002b26:	4f20      	ldr	r7, [pc, #128]	; (8002ba8 <ai_network_init+0x128>)
 8002b28:	462a      	mov	r2, r5
 8002b2a:	2101      	movs	r1, #1
 8002b2c:	4638      	mov	r0, r7
 8002b2e:	f000 f96b 	bl	8002e08 <ai_platform_get_activations_map>
 8002b32:	4605      	mov	r5, r0
 8002b34:	b348      	cbz	r0, 8002b8a <ai_network_init+0x10a>
    serving_default_dense_input0_output_array.data = AI_PTR(g_network_activations_map[0] + 248);
 8002b36:	683b      	ldr	r3, [r7, #0]
 8002b38:	4a1c      	ldr	r2, [pc, #112]	; (8002bac <ai_network_init+0x12c>)
 8002b3a:	f103 01f8 	add.w	r1, r3, #248	; 0xf8
 8002b3e:	e9c2 1102 	strd	r1, r1, [r2, #8]
    dense_0_output_array.data = AI_PTR(g_network_activations_map[0] + 256);
 8002b42:	491b      	ldr	r1, [pc, #108]	; (8002bb0 <ai_network_init+0x130>)
 8002b44:	f503 7280 	add.w	r2, r3, #256	; 0x100
    dense_0_output_array.data_start = AI_PTR(g_network_activations_map[0] + 256);
 8002b48:	e9c1 2202 	strd	r2, r2, [r1, #8]
    nl_0_nl_output_array.data = AI_PTR(g_network_activations_map[0] + 256);
 8002b4c:	4919      	ldr	r1, [pc, #100]	; (8002bb4 <ai_network_init+0x134>)
    nl_0_nl_output_array.data_start = AI_PTR(g_network_activations_map[0] + 256);
 8002b4e:	e9c1 2202 	strd	r2, r2, [r1, #8]
    dense_1_output_array.data = AI_PTR(g_network_activations_map[0] + 0);
 8002b52:	4919      	ldr	r1, [pc, #100]	; (8002bb8 <ai_network_init+0x138>)
    dense_1_output_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 8002b54:	e9c1 3302 	strd	r3, r3, [r1, #8]
    nl_1_nl_output_array.data = AI_PTR(g_network_activations_map[0] + 256);
 8002b58:	4918      	ldr	r1, [pc, #96]	; (8002bbc <ai_network_init+0x13c>)
    nl_1_nl_output_array.data_start = AI_PTR(g_network_activations_map[0] + 256);
 8002b5a:	e9c1 2202 	strd	r2, r2, [r1, #8]
    dense_2_output_array.data = AI_PTR(g_network_activations_map[0] + 0);
 8002b5e:	4a18      	ldr	r2, [pc, #96]	; (8002bc0 <ai_network_init+0x140>)
    dense_2_output_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 8002b60:	e9c2 3302 	strd	r3, r3, [r2, #8]
    nl_3_output_array.data = AI_PTR(g_network_activations_map[0] + 20);
 8002b64:	4a17      	ldr	r2, [pc, #92]	; (8002bc4 <ai_network_init+0x144>)
 8002b66:	3314      	adds	r3, #20
    nl_3_output_array.data_start = AI_PTR(g_network_activations_map[0] + 20);
 8002b68:	e9c2 3302 	strd	r3, r3, [r2, #8]

  ai_bool ok = true;
  ok &= network_configure_weights(net_ctx, params);
  ok &= network_configure_activations(net_ctx, params);

  ok &= ai_platform_network_post_init(network);
 8002b6c:	4630      	mov	r0, r6
 8002b6e:	f000 fd9f 	bl	80036b0 <ai_platform_network_post_init>
 8002b72:	4028      	ands	r0, r5
 8002b74:	ea08 0000 	and.w	r0, r8, r0
 8002b78:	b2c0      	uxtb	r0, r0

  return ok;
}
 8002b7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  AI_ERROR_TRAP(net_ctx, INIT_FAILED, NETWORK_WEIGHTS);
 8002b7e:	2212      	movs	r2, #18
 8002b80:	2130      	movs	r1, #48	; 0x30
 8002b82:	4620      	mov	r0, r4
 8002b84:	f000 fa24 	bl	8002fd0 <ai_platform_network_set_error>
  return false;
 8002b88:	e7cd      	b.n	8002b26 <ai_network_init+0xa6>
  AI_ERROR_TRAP(net_ctx, INIT_FAILED, NETWORK_ACTIVATIONS);
 8002b8a:	2213      	movs	r2, #19
 8002b8c:	4620      	mov	r0, r4
 8002b8e:	2130      	movs	r1, #48	; 0x30
 8002b90:	f000 fa1e 	bl	8002fd0 <ai_platform_network_set_error>
  return false;
 8002b94:	e7ea      	b.n	8002b6c <ai_network_init+0xec>
 8002b96:	bf00      	nop
 8002b98:	20001510 	.word	0x20001510
 8002b9c:	20000574 	.word	0x20000574
 8002ba0:	20000500 	.word	0x20000500
 8002ba4:	20000434 	.word	0x20000434
 8002ba8:	2000150c 	.word	0x2000150c
 8002bac:	200006d0 	.word	0x200006d0
 8002bb0:	20000408 	.word	0x20000408
 8002bb4:	2000060c 	.word	0x2000060c
 8002bb8:	200004a8 	.word	0x200004a8
 8002bbc:	20000658 	.word	0x20000658
 8002bc0:	20000548 	.word	0x20000548
 8002bc4:	200006a4 	.word	0x200006a4
 8002bc8:	20000460 	.word	0x20000460
 8002bcc:	200003c0 	.word	0x200003c0
 8002bd0:	200004d4 	.word	0x200004d4

08002bd4 <ai_network_create_and_init>:
{
 8002bd4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002bd8:	b091      	sub	sp, #68	; 0x44
  return ai_platform_network_create(
 8002bda:	2300      	movs	r3, #0
 8002bdc:	2405      	movs	r4, #5
 8002bde:	9301      	str	r3, [sp, #4]
 8002be0:	9400      	str	r4, [sp, #0]
{
 8002be2:	4689      	mov	r9, r1
 8002be4:	4615      	mov	r5, r2
  return ai_platform_network_create(
 8002be6:	4619      	mov	r1, r3
 8002be8:	4a25      	ldr	r2, [pc, #148]	; (8002c80 <ai_network_create_and_init+0xac>)
 8002bea:	2301      	movs	r3, #1
{
 8002bec:	4606      	mov	r6, r0
  return ai_platform_network_create(
 8002bee:	f000 fb9b 	bl	8003328 <ai_platform_network_create>
    if (err.type != AI_ERROR_NONE)
 8002bf2:	f010 08ff 	ands.w	r8, r0, #255	; 0xff
 8002bf6:	d002      	beq.n	8002bfe <ai_network_create_and_init+0x2a>
}
 8002bf8:	b011      	add	sp, #68	; 0x44
 8002bfa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (ai_network_data_params_get(&params) != true) {
 8002bfe:	4607      	mov	r7, r0
 8002c00:	a802      	add	r0, sp, #8
 8002c02:	f000 f841 	bl	8002c88 <ai_network_data_params_get>
 8002c06:	b3b0      	cbz	r0, 8002c76 <ai_network_create_and_init+0xa2>
    if (activations) {
 8002c08:	f1b9 0f00 	cmp.w	r9, #0
 8002c0c:	d010      	beq.n	8002c30 <ai_network_create_and_init+0x5c>
        for (int idx=0;idx<params.map_activations.size;idx++)
 8002c0e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8002c12:	b16b      	cbz	r3, 8002c30 <ai_network_create_and_init+0x5c>
 8002c14:	f1a9 0904 	sub.w	r9, r9, #4
 8002c18:	4644      	mov	r4, r8
            AI_BUFFER_ARRAY_ITEM_SET_ADDRESS(&params.map_activations, idx, activations[idx]);
 8002c1a:	4621      	mov	r1, r4
 8002c1c:	f859 2f04 	ldr.w	r2, [r9, #4]!
 8002c20:	a805      	add	r0, sp, #20
 8002c22:	f000 f889 	bl	8002d38 <ai_buffer_array_item_set_address>
        for (int idx=0;idx<params.map_activations.size;idx++)
 8002c26:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8002c2a:	3401      	adds	r4, #1
 8002c2c:	42a3      	cmp	r3, r4
 8002c2e:	dcf4      	bgt.n	8002c1a <ai_network_create_and_init+0x46>
    if (weights) {
 8002c30:	b17d      	cbz	r5, 8002c52 <ai_network_create_and_init+0x7e>
        for (int idx=0;idx<params.map_weights.size;idx++)
 8002c32:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8002c36:	b163      	cbz	r3, 8002c52 <ai_network_create_and_init+0x7e>
 8002c38:	3d04      	subs	r5, #4
 8002c3a:	2400      	movs	r4, #0
            AI_BUFFER_ARRAY_ITEM_SET_ADDRESS(&params.map_weights, idx, weights[idx]);
 8002c3c:	4621      	mov	r1, r4
 8002c3e:	f855 2f04 	ldr.w	r2, [r5, #4]!
 8002c42:	a803      	add	r0, sp, #12
 8002c44:	f000 f878 	bl	8002d38 <ai_buffer_array_item_set_address>
        for (int idx=0;idx<params.map_weights.size;idx++)
 8002c48:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8002c4c:	3401      	adds	r4, #1
 8002c4e:	42a3      	cmp	r3, r4
 8002c50:	dcf4      	bgt.n	8002c3c <ai_network_create_and_init+0x68>
    if (ai_network_init(*network, &params) != true) {
 8002c52:	6830      	ldr	r0, [r6, #0]
 8002c54:	a902      	add	r1, sp, #8
 8002c56:	f7ff ff13 	bl	8002a80 <ai_network_init>
 8002c5a:	b128      	cbz	r0, 8002c68 <ai_network_create_and_init+0x94>
    return err;
 8002c5c:	f368 0707 	bfi	r7, r8, #0, #8
 8002c60:	4638      	mov	r0, r7
}
 8002c62:	b011      	add	sp, #68	; 0x44
 8002c64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  return ai_platform_network_get_error(network);
 8002c68:	6830      	ldr	r0, [r6, #0]
 8002c6a:	f000 f943 	bl	8002ef4 <ai_platform_network_get_error>
 8002c6e:	fa5f f880 	uxtb.w	r8, r0
 8002c72:	4607      	mov	r7, r0
 8002c74:	e7f2      	b.n	8002c5c <ai_network_create_and_init+0x88>
 8002c76:	6830      	ldr	r0, [r6, #0]
 8002c78:	f000 f93c 	bl	8002ef4 <ai_platform_network_get_error>
        return err;
 8002c7c:	e7bc      	b.n	8002bf8 <ai_network_create_and_init+0x24>
 8002c7e:	bf00      	nop
 8002c80:	20000584 	.word	0x20000584

08002c84 <ai_network_run>:

AI_API_ENTRY
ai_i32 ai_network_run(
  ai_handle network, const ai_buffer* input, ai_buffer* output)
{
  return ai_platform_network_process(network, input, output);
 8002c84:	f000 bd9c 	b.w	80037c0 <ai_platform_network_process>

08002c88 <ai_network_data_params_get>:
 * @return true if a valid configuration is present, false otherwise
 */
AI_API_ENTRY
ai_bool ai_network_data_params_get(ai_network_params* params)
{
  if (!params) return false;
 8002c88:	4603      	mov	r3, r0
 8002c8a:	b198      	cbz	r0, 8002cb4 <ai_network_data_params_get+0x2c>
{
 8002c8c:	b510      	push	{r4, lr}
  
  const ai_buffer_array map_activations = 
 8002c8e:	4c0a      	ldr	r4, [pc, #40]	; (8002cb8 <ai_network_data_params_get+0x30>)
 8002c90:	e894 0003 	ldmia.w	r4, {r0, r1}
{
 8002c94:	b084      	sub	sp, #16
  const ai_buffer_array map_activations = 
 8002c96:	466a      	mov	r2, sp
    AI_BUFFER_ARRAY_OBJ_INIT(AI_FLAG_NONE, AI_NETWORK_DATA_ACTIVATIONS_COUNT, g_network_data_map_activations);
  
  const ai_buffer_array map_weights = 
 8002c98:	3408      	adds	r4, #8
  const ai_buffer_array map_activations = 
 8002c9a:	e882 0003 	stmia.w	r2, {r0, r1}
  const ai_buffer_array map_weights = 
 8002c9e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8002ca2:	ac02      	add	r4, sp, #8
 8002ca4:	e884 0003 	stmia.w	r4, {r0, r1}
    AI_BUFFER_ARRAY_OBJ_INIT(AI_FLAG_NONE, AI_NETWORK_DATA_WEIGHTS_COUNT, g_network_data_map_weights);

  return ai_platform_bind_network_params(params, &map_weights, &map_activations);
 8002ca8:	4621      	mov	r1, r4
 8002caa:	4618      	mov	r0, r3
 8002cac:	f000 f900 	bl	8002eb0 <ai_platform_bind_network_params>
}
 8002cb0:	b004      	add	sp, #16
 8002cb2:	bd10      	pop	{r4, pc}
 8002cb4:	4770      	bx	lr
 8002cb6:	bf00      	nop
 8002cb8:	08009900 	.word	0x08009900

08002cbc <ai_buffer_get_size>:
 8002cbc:	b378      	cbz	r0, 8002d1e <ai_buffer_get_size+0x62>
 8002cbe:	b410      	push	{r4}
 8002cc0:	6803      	ldr	r3, [r0, #0]
 8002cc2:	4a17      	ldr	r2, [pc, #92]	; (8002d20 <ai_buffer_get_size+0x64>)
 8002cc4:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
 8002cc8:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002ccc:	4293      	cmp	r3, r2
 8002cce:	d01e      	beq.n	8002d0e <ai_buffer_get_size+0x52>
 8002cd0:	6984      	ldr	r4, [r0, #24]
 8002cd2:	6862      	ldr	r2, [r4, #4]
 8002cd4:	7d03      	ldrb	r3, [r0, #20]
 8002cd6:	6941      	ldr	r1, [r0, #20]
 8002cd8:	f1a3 0301 	sub.w	r3, r3, #1
 8002cdc:	fab3 f383 	clz	r3, r3
 8002ce0:	095b      	lsrs	r3, r3, #5
 8002ce2:	ebb3 2f11 	cmp.w	r3, r1, lsr #8
 8002ce6:	f3c1 2017 	ubfx	r0, r1, #8, #24
 8002cea:	da0b      	bge.n	8002d04 <ai_buffer_get_size+0x48>
 8002cec:	2b01      	cmp	r3, #1
 8002cee:	d102      	bne.n	8002cf6 <ai_buffer_get_size+0x3a>
 8002cf0:	2802      	cmp	r0, #2
 8002cf2:	d007      	beq.n	8002d04 <ai_buffer_get_size+0x48>
 8002cf4:	2302      	movs	r3, #2
 8002cf6:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 8002cfa:	3301      	adds	r3, #1
 8002cfc:	4298      	cmp	r0, r3
 8002cfe:	fb01 f202 	mul.w	r2, r1, r2
 8002d02:	d1f3      	bne.n	8002cec <ai_buffer_get_size+0x30>
 8002d04:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 8002d08:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002d0c:	4770      	bx	lr
 8002d0e:	2900      	cmp	r1, #0
 8002d10:	d0de      	beq.n	8002cd0 <ai_buffer_get_size+0x14>
 8002d12:	6984      	ldr	r4, [r0, #24]
 8002d14:	6863      	ldr	r3, [r4, #4]
 8002d16:	331f      	adds	r3, #31
 8002d18:	f023 021f 	bic.w	r2, r3, #31
 8002d1c:	e7da      	b.n	8002cd4 <ai_buffer_get_size+0x18>
 8002d1e:	4770      	bx	lr
 8002d20:	000400c0 	.word	0x000400c0

08002d24 <ai_buffer_array_sane>:
 8002d24:	b138      	cbz	r0, 8002d36 <ai_buffer_array_sane+0x12>
 8002d26:	6843      	ldr	r3, [r0, #4]
 8002d28:	b123      	cbz	r3, 8002d34 <ai_buffer_array_sane+0x10>
 8002d2a:	8840      	ldrh	r0, [r0, #2]
 8002d2c:	3800      	subs	r0, #0
 8002d2e:	bf18      	it	ne
 8002d30:	2001      	movne	r0, #1
 8002d32:	4770      	bx	lr
 8002d34:	4618      	mov	r0, r3
 8002d36:	4770      	bx	lr

08002d38 <ai_buffer_array_item_set_address>:
 8002d38:	b150      	cbz	r0, 8002d50 <ai_buffer_array_item_set_address+0x18>
 8002d3a:	6843      	ldr	r3, [r0, #4]
 8002d3c:	b14b      	cbz	r3, 8002d52 <ai_buffer_array_item_set_address+0x1a>
 8002d3e:	8840      	ldrh	r0, [r0, #2]
 8002d40:	b900      	cbnz	r0, 8002d44 <ai_buffer_array_item_set_address+0xc>
 8002d42:	4770      	bx	lr
 8002d44:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 8002d48:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 8002d4c:	2001      	movs	r0, #1
 8002d4e:	604a      	str	r2, [r1, #4]
 8002d50:	4770      	bx	lr
 8002d52:	4618      	mov	r0, r3
 8002d54:	4770      	bx	lr
 8002d56:	bf00      	nop

08002d58 <_ai_platform_acquire_crc>:
 8002d58:	2001      	movs	r0, #1
 8002d5a:	4770      	bx	lr

08002d5c <_ai_platform_release_crc>:
 8002d5c:	4770      	bx	lr
 8002d5e:	bf00      	nop

08002d60 <ai_platform_get_weights_map>:
 8002d60:	2a00      	cmp	r2, #0
 8002d62:	d037      	beq.n	8002dd4 <ai_platform_get_weights_map+0x74>
 8002d64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002d66:	4604      	mov	r4, r0
 8002d68:	b1a0      	cbz	r0, 8002d94 <ai_platform_get_weights_map+0x34>
 8002d6a:	460f      	mov	r7, r1
 8002d6c:	b191      	cbz	r1, 8002d94 <ai_platform_get_weights_map+0x34>
 8002d6e:	4b25      	ldr	r3, [pc, #148]	; (8002e04 <ai_platform_get_weights_map+0xa4>)
 8002d70:	6810      	ldr	r0, [r2, #0]
 8002d72:	4298      	cmp	r0, r3
 8002d74:	4615      	mov	r5, r2
 8002d76:	d00f      	beq.n	8002d98 <ai_platform_get_weights_map+0x38>
 8002d78:	6855      	ldr	r5, [r2, #4]
 8002d7a:	b15d      	cbz	r5, 8002d94 <ai_platform_get_weights_map+0x34>
 8002d7c:	682e      	ldr	r6, [r5, #0]
 8002d7e:	429e      	cmp	r6, r3
 8002d80:	d02a      	beq.n	8002dd8 <ai_platform_get_weights_map+0x78>
 8002d82:	f1a1 0001 	sub.w	r0, r1, #1
 8002d86:	6025      	str	r5, [r4, #0]
 8002d88:	fab0 f080 	clz	r0, r0
 8002d8c:	0940      	lsrs	r0, r0, #5
 8002d8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002d90:	42a7      	cmp	r7, r4
 8002d92:	d034      	beq.n	8002dfe <ai_platform_get_weights_map+0x9e>
 8002d94:	2000      	movs	r0, #0
 8002d96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002d98:	1d10      	adds	r0, r2, #4
 8002d9a:	f7ff ffc3 	bl	8002d24 <ai_buffer_array_sane>
 8002d9e:	2800      	cmp	r0, #0
 8002da0:	d0f8      	beq.n	8002d94 <ai_platform_get_weights_map+0x34>
 8002da2:	88eb      	ldrh	r3, [r5, #6]
 8002da4:	429f      	cmp	r7, r3
 8002da6:	d1f5      	bne.n	8002d94 <ai_platform_get_weights_map+0x34>
 8002da8:	f04f 0e00 	mov.w	lr, #0
 8002dac:	1f23      	subs	r3, r4, #4
 8002dae:	4670      	mov	r0, lr
 8002db0:	68aa      	ldr	r2, [r5, #8]
 8002db2:	eb02 0c0e 	add.w	ip, r2, lr
 8002db6:	f10e 0e1c 	add.w	lr, lr, #28
 8002dba:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8002dbe:	b124      	cbz	r4, 8002dca <ai_platform_get_weights_map+0x6a>
 8002dc0:	3001      	adds	r0, #1
 8002dc2:	4287      	cmp	r7, r0
 8002dc4:	f843 4f04 	str.w	r4, [r3, #4]!
 8002dc8:	d1f2      	bne.n	8002db0 <ai_platform_get_weights_map+0x50>
 8002dca:	1a38      	subs	r0, r7, r0
 8002dcc:	fab0 f080 	clz	r0, r0
 8002dd0:	0940      	lsrs	r0, r0, #5
 8002dd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002dd4:	2000      	movs	r0, #0
 8002dd6:	4770      	bx	lr
 8002dd8:	1f23      	subs	r3, r4, #4
 8002dda:	4628      	mov	r0, r5
 8002ddc:	2400      	movs	r4, #0
 8002dde:	e000      	b.n	8002de2 <ai_platform_get_weights_map+0x82>
 8002de0:	4614      	mov	r4, r2
 8002de2:	f850 2f04 	ldr.w	r2, [r0, #4]!
 8002de6:	42b2      	cmp	r2, r6
 8002de8:	d0d2      	beq.n	8002d90 <ai_platform_get_weights_map+0x30>
 8002dea:	f843 2f04 	str.w	r2, [r3, #4]!
 8002dee:	1c62      	adds	r2, r4, #1
 8002df0:	4297      	cmp	r7, r2
 8002df2:	d1f5      	bne.n	8002de0 <ai_platform_get_weights_map+0x80>
 8002df4:	3402      	adds	r4, #2
 8002df6:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8002dfa:	42b3      	cmp	r3, r6
 8002dfc:	d1ca      	bne.n	8002d94 <ai_platform_get_weights_map+0x34>
 8002dfe:	2001      	movs	r0, #1
 8002e00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e02:	bf00      	nop
 8002e04:	a1facade 	.word	0xa1facade

08002e08 <ai_platform_get_activations_map>:
 8002e08:	2a00      	cmp	r2, #0
 8002e0a:	d038      	beq.n	8002e7e <ai_platform_get_activations_map+0x76>
 8002e0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002e0e:	4604      	mov	r4, r0
 8002e10:	b1a0      	cbz	r0, 8002e3c <ai_platform_get_activations_map+0x34>
 8002e12:	460f      	mov	r7, r1
 8002e14:	b191      	cbz	r1, 8002e3c <ai_platform_get_activations_map+0x34>
 8002e16:	4b25      	ldr	r3, [pc, #148]	; (8002eac <ai_platform_get_activations_map+0xa4>)
 8002e18:	6810      	ldr	r0, [r2, #0]
 8002e1a:	4298      	cmp	r0, r3
 8002e1c:	4615      	mov	r5, r2
 8002e1e:	d00f      	beq.n	8002e40 <ai_platform_get_activations_map+0x38>
 8002e20:	6a15      	ldr	r5, [r2, #32]
 8002e22:	b15d      	cbz	r5, 8002e3c <ai_platform_get_activations_map+0x34>
 8002e24:	682e      	ldr	r6, [r5, #0]
 8002e26:	429e      	cmp	r6, r3
 8002e28:	d02b      	beq.n	8002e82 <ai_platform_get_activations_map+0x7a>
 8002e2a:	f1a1 0001 	sub.w	r0, r1, #1
 8002e2e:	6025      	str	r5, [r4, #0]
 8002e30:	fab0 f080 	clz	r0, r0
 8002e34:	0940      	lsrs	r0, r0, #5
 8002e36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e38:	42a7      	cmp	r7, r4
 8002e3a:	d035      	beq.n	8002ea8 <ai_platform_get_activations_map+0xa0>
 8002e3c:	2000      	movs	r0, #0
 8002e3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e40:	f102 000c 	add.w	r0, r2, #12
 8002e44:	f7ff ff6e 	bl	8002d24 <ai_buffer_array_sane>
 8002e48:	2800      	cmp	r0, #0
 8002e4a:	d0f7      	beq.n	8002e3c <ai_platform_get_activations_map+0x34>
 8002e4c:	89eb      	ldrh	r3, [r5, #14]
 8002e4e:	429f      	cmp	r7, r3
 8002e50:	d1f4      	bne.n	8002e3c <ai_platform_get_activations_map+0x34>
 8002e52:	f04f 0e00 	mov.w	lr, #0
 8002e56:	1f23      	subs	r3, r4, #4
 8002e58:	4670      	mov	r0, lr
 8002e5a:	692a      	ldr	r2, [r5, #16]
 8002e5c:	eb02 0c0e 	add.w	ip, r2, lr
 8002e60:	f10e 0e1c 	add.w	lr, lr, #28
 8002e64:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8002e68:	b124      	cbz	r4, 8002e74 <ai_platform_get_activations_map+0x6c>
 8002e6a:	3001      	adds	r0, #1
 8002e6c:	4287      	cmp	r7, r0
 8002e6e:	f843 4f04 	str.w	r4, [r3, #4]!
 8002e72:	d1f2      	bne.n	8002e5a <ai_platform_get_activations_map+0x52>
 8002e74:	1a38      	subs	r0, r7, r0
 8002e76:	fab0 f080 	clz	r0, r0
 8002e7a:	0940      	lsrs	r0, r0, #5
 8002e7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e7e:	2000      	movs	r0, #0
 8002e80:	4770      	bx	lr
 8002e82:	1f23      	subs	r3, r4, #4
 8002e84:	4628      	mov	r0, r5
 8002e86:	2400      	movs	r4, #0
 8002e88:	e000      	b.n	8002e8c <ai_platform_get_activations_map+0x84>
 8002e8a:	4614      	mov	r4, r2
 8002e8c:	f850 2f04 	ldr.w	r2, [r0, #4]!
 8002e90:	42b2      	cmp	r2, r6
 8002e92:	d0d1      	beq.n	8002e38 <ai_platform_get_activations_map+0x30>
 8002e94:	f843 2f04 	str.w	r2, [r3, #4]!
 8002e98:	1c62      	adds	r2, r4, #1
 8002e9a:	4297      	cmp	r7, r2
 8002e9c:	d1f5      	bne.n	8002e8a <ai_platform_get_activations_map+0x82>
 8002e9e:	3402      	adds	r4, #2
 8002ea0:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8002ea4:	42b3      	cmp	r3, r6
 8002ea6:	d1c9      	bne.n	8002e3c <ai_platform_get_activations_map+0x34>
 8002ea8:	2001      	movs	r0, #1
 8002eaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002eac:	a1facade 	.word	0xa1facade

08002eb0 <ai_platform_bind_network_params>:
 8002eb0:	b1a0      	cbz	r0, 8002edc <ai_platform_bind_network_params+0x2c>
 8002eb2:	b1b1      	cbz	r1, 8002ee2 <ai_platform_bind_network_params+0x32>
 8002eb4:	b1c2      	cbz	r2, 8002ee8 <ai_platform_bind_network_params+0x38>
 8002eb6:	b410      	push	{r4}
 8002eb8:	4603      	mov	r3, r0
 8002eba:	4c0d      	ldr	r4, [pc, #52]	; (8002ef0 <ai_platform_bind_network_params+0x40>)
 8002ebc:	f843 4b04 	str.w	r4, [r3], #4
 8002ec0:	f100 0c0c 	add.w	ip, r0, #12
 8002ec4:	c903      	ldmia	r1, {r0, r1}
 8002ec6:	e883 0003 	stmia.w	r3, {r0, r1}
 8002eca:	e892 0003 	ldmia.w	r2, {r0, r1}
 8002ece:	e88c 0003 	stmia.w	ip, {r0, r1}
 8002ed2:	2301      	movs	r3, #1
 8002ed4:	4618      	mov	r0, r3
 8002ed6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002eda:	4770      	bx	lr
 8002edc:	4603      	mov	r3, r0
 8002ede:	4618      	mov	r0, r3
 8002ee0:	4770      	bx	lr
 8002ee2:	460b      	mov	r3, r1
 8002ee4:	4618      	mov	r0, r3
 8002ee6:	4770      	bx	lr
 8002ee8:	4613      	mov	r3, r2
 8002eea:	4618      	mov	r0, r3
 8002eec:	4770      	bx	lr
 8002eee:	bf00      	nop
 8002ef0:	a1facade 	.word	0xa1facade

08002ef4 <ai_platform_network_get_error>:
 8002ef4:	b510      	push	{r4, lr}
 8002ef6:	b1f0      	cbz	r0, 8002f36 <ai_platform_network_get_error+0x42>
 8002ef8:	4b2f      	ldr	r3, [pc, #188]	; (8002fb8 <ai_platform_network_get_error+0xc4>)
 8002efa:	6802      	ldr	r2, [r0, #0]
 8002efc:	429a      	cmp	r2, r3
 8002efe:	4604      	mov	r4, r0
 8002f00:	d119      	bne.n	8002f36 <ai_platform_network_get_error+0x42>
 8002f02:	f7ff ff29 	bl	8002d58 <_ai_platform_acquire_crc>
 8002f06:	4b2d      	ldr	r3, [pc, #180]	; (8002fbc <ai_platform_network_get_error+0xc8>)
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002f0e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002f12:	d03c      	beq.n	8002f8e <ai_platform_network_get_error+0x9a>
 8002f14:	4a2a      	ldr	r2, [pc, #168]	; (8002fc0 <ai_platform_network_get_error+0xcc>)
 8002f16:	2301      	movs	r3, #1
 8002f18:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8002f1c:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8002f20:	2b00      	cmp	r3, #0
 8002f22:	d1fb      	bne.n	8002f1c <ai_platform_network_get_error+0x28>
 8002f24:	4b27      	ldr	r3, [pc, #156]	; (8002fc4 <ai_platform_network_get_error+0xd0>)
 8002f26:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8002f2a:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8002f2e:	4b26      	ldr	r3, [pc, #152]	; (8002fc8 <ai_platform_network_get_error+0xd4>)
 8002f30:	429a      	cmp	r2, r3
 8002f32:	d038      	beq.n	8002fa6 <ai_platform_network_get_error+0xb2>
 8002f34:	e7fe      	b.n	8002f34 <ai_platform_network_get_error+0x40>
 8002f36:	f7ff ff0f 	bl	8002d58 <_ai_platform_acquire_crc>
 8002f3a:	4b20      	ldr	r3, [pc, #128]	; (8002fbc <ai_platform_network_get_error+0xc8>)
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002f42:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002f46:	d010      	beq.n	8002f6a <ai_platform_network_get_error+0x76>
 8002f48:	4a1d      	ldr	r2, [pc, #116]	; (8002fc0 <ai_platform_network_get_error+0xcc>)
 8002f4a:	2301      	movs	r3, #1
 8002f4c:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8002f50:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8002f54:	2b00      	cmp	r3, #0
 8002f56:	d1fb      	bne.n	8002f50 <ai_platform_network_get_error+0x5c>
 8002f58:	4b1a      	ldr	r3, [pc, #104]	; (8002fc4 <ai_platform_network_get_error+0xd0>)
 8002f5a:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8002f5e:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8002f62:	4b19      	ldr	r3, [pc, #100]	; (8002fc8 <ai_platform_network_get_error+0xd4>)
 8002f64:	429a      	cmp	r2, r3
 8002f66:	d00d      	beq.n	8002f84 <ai_platform_network_get_error+0x90>
 8002f68:	e7fe      	b.n	8002f68 <ai_platform_network_get_error+0x74>
 8002f6a:	4a18      	ldr	r2, [pc, #96]	; (8002fcc <ai_platform_network_get_error+0xd8>)
 8002f6c:	2301      	movs	r3, #1
 8002f6e:	6093      	str	r3, [r2, #8]
 8002f70:	6893      	ldr	r3, [r2, #8]
 8002f72:	2b00      	cmp	r3, #0
 8002f74:	d1fc      	bne.n	8002f70 <ai_platform_network_get_error+0x7c>
 8002f76:	4b13      	ldr	r3, [pc, #76]	; (8002fc4 <ai_platform_network_get_error+0xd0>)
 8002f78:	6013      	str	r3, [r2, #0]
 8002f7a:	6812      	ldr	r2, [r2, #0]
 8002f7c:	4b12      	ldr	r3, [pc, #72]	; (8002fc8 <ai_platform_network_get_error+0xd4>)
 8002f7e:	429a      	cmp	r2, r3
 8002f80:	d000      	beq.n	8002f84 <ai_platform_network_get_error+0x90>
 8002f82:	e7fe      	b.n	8002f82 <ai_platform_network_get_error+0x8e>
 8002f84:	f7ff feea 	bl	8002d5c <_ai_platform_release_crc>
 8002f88:	f241 0010 	movw	r0, #4112	; 0x1010
 8002f8c:	bd10      	pop	{r4, pc}
 8002f8e:	4a0f      	ldr	r2, [pc, #60]	; (8002fcc <ai_platform_network_get_error+0xd8>)
 8002f90:	2301      	movs	r3, #1
 8002f92:	6093      	str	r3, [r2, #8]
 8002f94:	6893      	ldr	r3, [r2, #8]
 8002f96:	2b00      	cmp	r3, #0
 8002f98:	d1fc      	bne.n	8002f94 <ai_platform_network_get_error+0xa0>
 8002f9a:	4b0a      	ldr	r3, [pc, #40]	; (8002fc4 <ai_platform_network_get_error+0xd0>)
 8002f9c:	6013      	str	r3, [r2, #0]
 8002f9e:	6812      	ldr	r2, [r2, #0]
 8002fa0:	4b09      	ldr	r3, [pc, #36]	; (8002fc8 <ai_platform_network_get_error+0xd4>)
 8002fa2:	429a      	cmp	r2, r3
 8002fa4:	d107      	bne.n	8002fb6 <ai_platform_network_get_error+0xc2>
 8002fa6:	f7ff fed9 	bl	8002d5c <_ai_platform_release_crc>
 8002faa:	f104 0010 	add.w	r0, r4, #16
 8002fae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002fb2:	f000 be8d 	b.w	8003cd0 <core_get_error>
 8002fb6:	e7fe      	b.n	8002fb6 <ai_platform_network_get_error+0xc2>
 8002fb8:	a1c00100 	.word	0xa1c00100
 8002fbc:	e0042000 	.word	0xe0042000
 8002fc0:	58024000 	.word	0x58024000
 8002fc4:	f407a5c2 	.word	0xf407a5c2
 8002fc8:	b5e8b5cd 	.word	0xb5e8b5cd
 8002fcc:	40023000 	.word	0x40023000

08002fd0 <ai_platform_network_set_error>:
 8002fd0:	b110      	cbz	r0, 8002fd8 <ai_platform_network_set_error+0x8>
 8002fd2:	3010      	adds	r0, #16
 8002fd4:	f000 be82 	b.w	8003cdc <core_set_error>
 8002fd8:	4770      	bx	lr
 8002fda:	bf00      	nop

08002fdc <ai_platform_inputs_get>:
 8002fdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002fe0:	b085      	sub	sp, #20
 8002fe2:	9102      	str	r1, [sp, #8]
 8002fe4:	b1f0      	cbz	r0, 8003024 <ai_platform_inputs_get+0x48>
 8002fe6:	4b62      	ldr	r3, [pc, #392]	; (8003170 <ai_platform_inputs_get+0x194>)
 8002fe8:	6802      	ldr	r2, [r0, #0]
 8002fea:	429a      	cmp	r2, r3
 8002fec:	4607      	mov	r7, r0
 8002fee:	d119      	bne.n	8003024 <ai_platform_inputs_get+0x48>
 8002ff0:	f7ff feb2 	bl	8002d58 <_ai_platform_acquire_crc>
 8002ff4:	4b5f      	ldr	r3, [pc, #380]	; (8003174 <ai_platform_inputs_get+0x198>)
 8002ff6:	681b      	ldr	r3, [r3, #0]
 8002ff8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002ffc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003000:	d03d      	beq.n	800307e <ai_platform_inputs_get+0xa2>
 8003002:	4a5d      	ldr	r2, [pc, #372]	; (8003178 <ai_platform_inputs_get+0x19c>)
 8003004:	2301      	movs	r3, #1
 8003006:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 800300a:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 800300e:	2b00      	cmp	r3, #0
 8003010:	d1fb      	bne.n	800300a <ai_platform_inputs_get+0x2e>
 8003012:	4b5a      	ldr	r3, [pc, #360]	; (800317c <ai_platform_inputs_get+0x1a0>)
 8003014:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8003018:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 800301c:	4b58      	ldr	r3, [pc, #352]	; (8003180 <ai_platform_inputs_get+0x1a4>)
 800301e:	429a      	cmp	r2, r3
 8003020:	d039      	beq.n	8003096 <ai_platform_inputs_get+0xba>
 8003022:	e7fe      	b.n	8003022 <ai_platform_inputs_get+0x46>
 8003024:	f7ff fe98 	bl	8002d58 <_ai_platform_acquire_crc>
 8003028:	4b52      	ldr	r3, [pc, #328]	; (8003174 <ai_platform_inputs_get+0x198>)
 800302a:	681b      	ldr	r3, [r3, #0]
 800302c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8003030:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003034:	d010      	beq.n	8003058 <ai_platform_inputs_get+0x7c>
 8003036:	4a50      	ldr	r2, [pc, #320]	; (8003178 <ai_platform_inputs_get+0x19c>)
 8003038:	2301      	movs	r3, #1
 800303a:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 800303e:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8003042:	2b00      	cmp	r3, #0
 8003044:	d1fb      	bne.n	800303e <ai_platform_inputs_get+0x62>
 8003046:	4b4d      	ldr	r3, [pc, #308]	; (800317c <ai_platform_inputs_get+0x1a0>)
 8003048:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 800304c:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8003050:	4b4b      	ldr	r3, [pc, #300]	; (8003180 <ai_platform_inputs_get+0x1a4>)
 8003052:	429a      	cmp	r2, r3
 8003054:	d00d      	beq.n	8003072 <ai_platform_inputs_get+0x96>
 8003056:	e7fe      	b.n	8003056 <ai_platform_inputs_get+0x7a>
 8003058:	4a4a      	ldr	r2, [pc, #296]	; (8003184 <ai_platform_inputs_get+0x1a8>)
 800305a:	2301      	movs	r3, #1
 800305c:	6093      	str	r3, [r2, #8]
 800305e:	6893      	ldr	r3, [r2, #8]
 8003060:	2b00      	cmp	r3, #0
 8003062:	d1fc      	bne.n	800305e <ai_platform_inputs_get+0x82>
 8003064:	4b45      	ldr	r3, [pc, #276]	; (800317c <ai_platform_inputs_get+0x1a0>)
 8003066:	6013      	str	r3, [r2, #0]
 8003068:	6812      	ldr	r2, [r2, #0]
 800306a:	4b45      	ldr	r3, [pc, #276]	; (8003180 <ai_platform_inputs_get+0x1a4>)
 800306c:	429a      	cmp	r2, r3
 800306e:	d000      	beq.n	8003072 <ai_platform_inputs_get+0x96>
 8003070:	e7fe      	b.n	8003070 <ai_platform_inputs_get+0x94>
 8003072:	f7ff fe73 	bl	8002d5c <_ai_platform_release_crc>
 8003076:	2000      	movs	r0, #0
 8003078:	b005      	add	sp, #20
 800307a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800307e:	4a41      	ldr	r2, [pc, #260]	; (8003184 <ai_platform_inputs_get+0x1a8>)
 8003080:	2301      	movs	r3, #1
 8003082:	6093      	str	r3, [r2, #8]
 8003084:	6893      	ldr	r3, [r2, #8]
 8003086:	2b00      	cmp	r3, #0
 8003088:	d1fc      	bne.n	8003084 <ai_platform_inputs_get+0xa8>
 800308a:	4b3c      	ldr	r3, [pc, #240]	; (800317c <ai_platform_inputs_get+0x1a0>)
 800308c:	6013      	str	r3, [r2, #0]
 800308e:	6812      	ldr	r2, [r2, #0]
 8003090:	4b3b      	ldr	r3, [pc, #236]	; (8003180 <ai_platform_inputs_get+0x1a4>)
 8003092:	429a      	cmp	r2, r3
 8003094:	d155      	bne.n	8003142 <ai_platform_inputs_get+0x166>
 8003096:	f7ff fe61 	bl	8002d5c <_ai_platform_release_crc>
 800309a:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 800309c:	2b00      	cmp	r3, #0
 800309e:	d051      	beq.n	8003144 <ai_platform_inputs_get+0x168>
 80030a0:	f8d7 a030 	ldr.w	sl, [r7, #48]	; 0x30
 80030a4:	f1ba 0f00 	cmp.w	sl, #0
 80030a8:	d04c      	beq.n	8003144 <ai_platform_inputs_get+0x168>
 80030aa:	f04f 0b00 	mov.w	fp, #0
 80030ae:	465d      	mov	r5, fp
 80030b0:	9703      	str	r7, [sp, #12]
 80030b2:	e016      	b.n	80030e2 <ai_platform_inputs_get+0x106>
 80030b4:	9901      	ldr	r1, [sp, #4]
 80030b6:	2301      	movs	r3, #1
 80030b8:	507b      	str	r3, [r7, r1]
 80030ba:	69b1      	ldr	r1, [r6, #24]
 80030bc:	6849      	ldr	r1, [r1, #4]
 80030be:	6121      	str	r1, [r4, #16]
 80030c0:	f04f 0301 	mov.w	r3, #1
 80030c4:	7523      	strb	r3, [r4, #20]
 80030c6:	e9c4 c200 	strd	ip, r2, [r4]
 80030ca:	6962      	ldr	r2, [r4, #20]
 80030cc:	60a0      	str	r0, [r4, #8]
 80030ce:	2300      	movs	r3, #0
 80030d0:	f369 221f 	bfi	r2, r9, #8, #24
 80030d4:	f8c4 8018 	str.w	r8, [r4, #24]
 80030d8:	60e3      	str	r3, [r4, #12]
 80030da:	3501      	adds	r5, #1
 80030dc:	f10b 0b1c 	add.w	fp, fp, #28
 80030e0:	6162      	str	r2, [r4, #20]
 80030e2:	f8ba 3000 	ldrh.w	r3, [sl]
 80030e6:	42ab      	cmp	r3, r5
 80030e8:	b2aa      	uxth	r2, r5
 80030ea:	d93a      	bls.n	8003162 <ai_platform_inputs_get+0x186>
 80030ec:	f8da 3004 	ldr.w	r3, [sl, #4]
 80030f0:	00e9      	lsls	r1, r5, #3
 80030f2:	9101      	str	r1, [sp, #4]
 80030f4:	2b00      	cmp	r3, #0
 80030f6:	d034      	beq.n	8003162 <ai_platform_inputs_get+0x186>
 80030f8:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
 80030fc:	2e00      	cmp	r6, #0
 80030fe:	d030      	beq.n	8003162 <ai_platform_inputs_get+0x186>
 8003100:	f8da 3008 	ldr.w	r3, [sl, #8]
 8003104:	69b2      	ldr	r2, [r6, #24]
 8003106:	f8d6 800c 	ldr.w	r8, [r6, #12]
 800310a:	6810      	ldr	r0, [r2, #0]
 800310c:	e9d3 4701 	ldrd	r4, r7, [r3, #4]
 8003110:	68b3      	ldr	r3, [r6, #8]
 8003112:	f3c3 2917 	ubfx	r9, r3, #8, #24
 8003116:	f001 fc2d 	bl	8004974 <ai_array_to_buffer_fmt>
 800311a:	69b1      	ldr	r1, [r6, #24]
 800311c:	4684      	mov	ip, r0
 800311e:	eb07 00c5 	add.w	r0, r7, r5, lsl #3
 8003122:	688a      	ldr	r2, [r1, #8]
 8003124:	445c      	add	r4, fp
 8003126:	2800      	cmp	r0, #0
 8003128:	d0c8      	beq.n	80030bc <ai_platform_inputs_get+0xe0>
 800312a:	2100      	movs	r1, #0
 800312c:	f847 1035 	str.w	r1, [r7, r5, lsl #3]
 8003130:	6831      	ldr	r1, [r6, #0]
 8003132:	6041      	str	r1, [r0, #4]
 8003134:	b111      	cbz	r1, 800313c <ai_platform_inputs_get+0x160>
 8003136:	8849      	ldrh	r1, [r1, #2]
 8003138:	2900      	cmp	r1, #0
 800313a:	d1bb      	bne.n	80030b4 <ai_platform_inputs_get+0xd8>
 800313c:	69b1      	ldr	r1, [r6, #24]
 800313e:	2000      	movs	r0, #0
 8003140:	e7bc      	b.n	80030bc <ai_platform_inputs_get+0xe0>
 8003142:	e7fe      	b.n	8003142 <ai_platform_inputs_get+0x166>
 8003144:	2218      	movs	r2, #24
 8003146:	2111      	movs	r1, #17
 8003148:	f107 0010 	add.w	r0, r7, #16
 800314c:	f000 fdc6 	bl	8003cdc <core_set_error>
 8003150:	2200      	movs	r2, #0
 8003152:	4610      	mov	r0, r2
 8003154:	9b02      	ldr	r3, [sp, #8]
 8003156:	2b00      	cmp	r3, #0
 8003158:	d08e      	beq.n	8003078 <ai_platform_inputs_get+0x9c>
 800315a:	801a      	strh	r2, [r3, #0]
 800315c:	b005      	add	sp, #20
 800315e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003162:	9f03      	ldr	r7, [sp, #12]
 8003164:	2a00      	cmp	r2, #0
 8003166:	d0ed      	beq.n	8003144 <ai_platform_inputs_get+0x168>
 8003168:	f8da 3008 	ldr.w	r3, [sl, #8]
 800316c:	6858      	ldr	r0, [r3, #4]
 800316e:	e7f1      	b.n	8003154 <ai_platform_inputs_get+0x178>
 8003170:	a1c00100 	.word	0xa1c00100
 8003174:	e0042000 	.word	0xe0042000
 8003178:	58024000 	.word	0x58024000
 800317c:	f407a5c2 	.word	0xf407a5c2
 8003180:	b5e8b5cd 	.word	0xb5e8b5cd
 8003184:	40023000 	.word	0x40023000

08003188 <ai_platform_outputs_get>:
 8003188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800318c:	b085      	sub	sp, #20
 800318e:	9102      	str	r1, [sp, #8]
 8003190:	b1f0      	cbz	r0, 80031d0 <ai_platform_outputs_get+0x48>
 8003192:	4b5f      	ldr	r3, [pc, #380]	; (8003310 <ai_platform_outputs_get+0x188>)
 8003194:	6802      	ldr	r2, [r0, #0]
 8003196:	429a      	cmp	r2, r3
 8003198:	4607      	mov	r7, r0
 800319a:	d119      	bne.n	80031d0 <ai_platform_outputs_get+0x48>
 800319c:	f7ff fddc 	bl	8002d58 <_ai_platform_acquire_crc>
 80031a0:	4b5c      	ldr	r3, [pc, #368]	; (8003314 <ai_platform_outputs_get+0x18c>)
 80031a2:	681b      	ldr	r3, [r3, #0]
 80031a4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80031a8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80031ac:	d03d      	beq.n	800322a <ai_platform_outputs_get+0xa2>
 80031ae:	4a5a      	ldr	r2, [pc, #360]	; (8003318 <ai_platform_outputs_get+0x190>)
 80031b0:	2301      	movs	r3, #1
 80031b2:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80031b6:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80031ba:	2b00      	cmp	r3, #0
 80031bc:	d1fb      	bne.n	80031b6 <ai_platform_outputs_get+0x2e>
 80031be:	4b57      	ldr	r3, [pc, #348]	; (800331c <ai_platform_outputs_get+0x194>)
 80031c0:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 80031c4:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80031c8:	4b55      	ldr	r3, [pc, #340]	; (8003320 <ai_platform_outputs_get+0x198>)
 80031ca:	429a      	cmp	r2, r3
 80031cc:	d039      	beq.n	8003242 <ai_platform_outputs_get+0xba>
 80031ce:	e7fe      	b.n	80031ce <ai_platform_outputs_get+0x46>
 80031d0:	f7ff fdc2 	bl	8002d58 <_ai_platform_acquire_crc>
 80031d4:	4b4f      	ldr	r3, [pc, #316]	; (8003314 <ai_platform_outputs_get+0x18c>)
 80031d6:	681b      	ldr	r3, [r3, #0]
 80031d8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80031dc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80031e0:	d010      	beq.n	8003204 <ai_platform_outputs_get+0x7c>
 80031e2:	4a4d      	ldr	r2, [pc, #308]	; (8003318 <ai_platform_outputs_get+0x190>)
 80031e4:	2301      	movs	r3, #1
 80031e6:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80031ea:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80031ee:	2b00      	cmp	r3, #0
 80031f0:	d1fb      	bne.n	80031ea <ai_platform_outputs_get+0x62>
 80031f2:	4b4a      	ldr	r3, [pc, #296]	; (800331c <ai_platform_outputs_get+0x194>)
 80031f4:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 80031f8:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80031fc:	4b48      	ldr	r3, [pc, #288]	; (8003320 <ai_platform_outputs_get+0x198>)
 80031fe:	429a      	cmp	r2, r3
 8003200:	d00d      	beq.n	800321e <ai_platform_outputs_get+0x96>
 8003202:	e7fe      	b.n	8003202 <ai_platform_outputs_get+0x7a>
 8003204:	4a47      	ldr	r2, [pc, #284]	; (8003324 <ai_platform_outputs_get+0x19c>)
 8003206:	2301      	movs	r3, #1
 8003208:	6093      	str	r3, [r2, #8]
 800320a:	6893      	ldr	r3, [r2, #8]
 800320c:	2b00      	cmp	r3, #0
 800320e:	d1fc      	bne.n	800320a <ai_platform_outputs_get+0x82>
 8003210:	4b42      	ldr	r3, [pc, #264]	; (800331c <ai_platform_outputs_get+0x194>)
 8003212:	6013      	str	r3, [r2, #0]
 8003214:	6812      	ldr	r2, [r2, #0]
 8003216:	4b42      	ldr	r3, [pc, #264]	; (8003320 <ai_platform_outputs_get+0x198>)
 8003218:	429a      	cmp	r2, r3
 800321a:	d000      	beq.n	800321e <ai_platform_outputs_get+0x96>
 800321c:	e7fe      	b.n	800321c <ai_platform_outputs_get+0x94>
 800321e:	f7ff fd9d 	bl	8002d5c <_ai_platform_release_crc>
 8003222:	2000      	movs	r0, #0
 8003224:	b005      	add	sp, #20
 8003226:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800322a:	4a3e      	ldr	r2, [pc, #248]	; (8003324 <ai_platform_outputs_get+0x19c>)
 800322c:	2301      	movs	r3, #1
 800322e:	6093      	str	r3, [r2, #8]
 8003230:	6893      	ldr	r3, [r2, #8]
 8003232:	2b00      	cmp	r3, #0
 8003234:	d1fc      	bne.n	8003230 <ai_platform_outputs_get+0xa8>
 8003236:	4b39      	ldr	r3, [pc, #228]	; (800331c <ai_platform_outputs_get+0x194>)
 8003238:	6013      	str	r3, [r2, #0]
 800323a:	6812      	ldr	r2, [r2, #0]
 800323c:	4b38      	ldr	r3, [pc, #224]	; (8003320 <ai_platform_outputs_get+0x198>)
 800323e:	429a      	cmp	r2, r3
 8003240:	d150      	bne.n	80032e4 <ai_platform_outputs_get+0x15c>
 8003242:	f7ff fd8b 	bl	8002d5c <_ai_platform_release_crc>
 8003246:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8003248:	2b01      	cmp	r3, #1
 800324a:	d958      	bls.n	80032fe <ai_platform_outputs_get+0x176>
 800324c:	f04f 0b00 	mov.w	fp, #0
 8003250:	f8d7 a030 	ldr.w	sl, [r7, #48]	; 0x30
 8003254:	9703      	str	r7, [sp, #12]
 8003256:	465d      	mov	r5, fp
 8003258:	e016      	b.n	8003288 <ai_platform_outputs_get+0x100>
 800325a:	9901      	ldr	r1, [sp, #4]
 800325c:	2301      	movs	r3, #1
 800325e:	507b      	str	r3, [r7, r1]
 8003260:	69b1      	ldr	r1, [r6, #24]
 8003262:	6849      	ldr	r1, [r1, #4]
 8003264:	6121      	str	r1, [r4, #16]
 8003266:	f04f 0301 	mov.w	r3, #1
 800326a:	7523      	strb	r3, [r4, #20]
 800326c:	e9c4 c200 	strd	ip, r2, [r4]
 8003270:	6962      	ldr	r2, [r4, #20]
 8003272:	60a0      	str	r0, [r4, #8]
 8003274:	2300      	movs	r3, #0
 8003276:	f369 221f 	bfi	r2, r9, #8, #24
 800327a:	f8c4 8018 	str.w	r8, [r4, #24]
 800327e:	60e3      	str	r3, [r4, #12]
 8003280:	3501      	adds	r5, #1
 8003282:	f10b 0b1c 	add.w	fp, fp, #28
 8003286:	6162      	str	r2, [r4, #20]
 8003288:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 800328c:	42ab      	cmp	r3, r5
 800328e:	b2aa      	uxth	r2, r5
 8003290:	d929      	bls.n	80032e6 <ai_platform_outputs_get+0x15e>
 8003292:	f8da 3010 	ldr.w	r3, [sl, #16]
 8003296:	00e9      	lsls	r1, r5, #3
 8003298:	9101      	str	r1, [sp, #4]
 800329a:	b323      	cbz	r3, 80032e6 <ai_platform_outputs_get+0x15e>
 800329c:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
 80032a0:	b30e      	cbz	r6, 80032e6 <ai_platform_outputs_get+0x15e>
 80032a2:	f8da 3014 	ldr.w	r3, [sl, #20]
 80032a6:	69b2      	ldr	r2, [r6, #24]
 80032a8:	f8d6 800c 	ldr.w	r8, [r6, #12]
 80032ac:	6810      	ldr	r0, [r2, #0]
 80032ae:	e9d3 4701 	ldrd	r4, r7, [r3, #4]
 80032b2:	68b3      	ldr	r3, [r6, #8]
 80032b4:	f3c3 2917 	ubfx	r9, r3, #8, #24
 80032b8:	f001 fb5c 	bl	8004974 <ai_array_to_buffer_fmt>
 80032bc:	69b1      	ldr	r1, [r6, #24]
 80032be:	4684      	mov	ip, r0
 80032c0:	eb07 00c5 	add.w	r0, r7, r5, lsl #3
 80032c4:	688a      	ldr	r2, [r1, #8]
 80032c6:	445c      	add	r4, fp
 80032c8:	2800      	cmp	r0, #0
 80032ca:	d0ca      	beq.n	8003262 <ai_platform_outputs_get+0xda>
 80032cc:	2100      	movs	r1, #0
 80032ce:	f847 1035 	str.w	r1, [r7, r5, lsl #3]
 80032d2:	6831      	ldr	r1, [r6, #0]
 80032d4:	6041      	str	r1, [r0, #4]
 80032d6:	b111      	cbz	r1, 80032de <ai_platform_outputs_get+0x156>
 80032d8:	8849      	ldrh	r1, [r1, #2]
 80032da:	2900      	cmp	r1, #0
 80032dc:	d1bd      	bne.n	800325a <ai_platform_outputs_get+0xd2>
 80032de:	69b1      	ldr	r1, [r6, #24]
 80032e0:	2000      	movs	r0, #0
 80032e2:	e7be      	b.n	8003262 <ai_platform_outputs_get+0xda>
 80032e4:	e7fe      	b.n	80032e4 <ai_platform_outputs_get+0x15c>
 80032e6:	9f03      	ldr	r7, [sp, #12]
 80032e8:	b14a      	cbz	r2, 80032fe <ai_platform_outputs_get+0x176>
 80032ea:	f8da 3014 	ldr.w	r3, [sl, #20]
 80032ee:	6858      	ldr	r0, [r3, #4]
 80032f0:	9b02      	ldr	r3, [sp, #8]
 80032f2:	2b00      	cmp	r3, #0
 80032f4:	d096      	beq.n	8003224 <ai_platform_outputs_get+0x9c>
 80032f6:	801a      	strh	r2, [r3, #0]
 80032f8:	b005      	add	sp, #20
 80032fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032fe:	2218      	movs	r2, #24
 8003300:	2111      	movs	r1, #17
 8003302:	f107 0010 	add.w	r0, r7, #16
 8003306:	f000 fce9 	bl	8003cdc <core_set_error>
 800330a:	2200      	movs	r2, #0
 800330c:	4610      	mov	r0, r2
 800330e:	e7ef      	b.n	80032f0 <ai_platform_outputs_get+0x168>
 8003310:	a1c00100 	.word	0xa1c00100
 8003314:	e0042000 	.word	0xe0042000
 8003318:	58024000 	.word	0x58024000
 800331c:	f407a5c2 	.word	0xf407a5c2
 8003320:	b5e8b5cd 	.word	0xb5e8b5cd
 8003324:	40023000 	.word	0x40023000

08003328 <ai_platform_network_create>:
 8003328:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800332c:	b083      	sub	sp, #12
 800332e:	4606      	mov	r6, r0
 8003330:	f89d 8028 	ldrb.w	r8, [sp, #40]	; 0x28
 8003334:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8003338:	4615      	mov	r5, r2
 800333a:	461f      	mov	r7, r3
 800333c:	f7ff fd0c 	bl	8002d58 <_ai_platform_acquire_crc>
 8003340:	b188      	cbz	r0, 8003366 <ai_platform_network_create+0x3e>
 8003342:	4a5d      	ldr	r2, [pc, #372]	; (80034b8 <ai_platform_network_create+0x190>)
 8003344:	6812      	ldr	r2, [r2, #0]
 8003346:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 800334a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800334e:	4603      	mov	r3, r0
 8003350:	d00e      	beq.n	8003370 <ai_platform_network_create+0x48>
 8003352:	4a5a      	ldr	r2, [pc, #360]	; (80034bc <ai_platform_network_create+0x194>)
 8003354:	2118      	movs	r1, #24
 8003356:	f8c2 1c08 	str.w	r1, [r2, #3080]	; 0xc08
 800335a:	f8d2 1c08 	ldr.w	r1, [r2, #3080]	; 0xc08
 800335e:	2918      	cmp	r1, #24
 8003360:	d018      	beq.n	8003394 <ai_platform_network_create+0x6c>
 8003362:	f7ff fcfb 	bl	8002d5c <_ai_platform_release_crc>
 8003366:	f244 1033 	movw	r0, #16691	; 0x4133
 800336a:	b003      	add	sp, #12
 800336c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003370:	4a53      	ldr	r2, [pc, #332]	; (80034c0 <ai_platform_network_create+0x198>)
 8003372:	2101      	movs	r1, #1
 8003374:	6091      	str	r1, [r2, #8]
 8003376:	2114      	movs	r1, #20
 8003378:	e001      	b.n	800337e <ai_platform_network_create+0x56>
 800337a:	3901      	subs	r1, #1
 800337c:	d002      	beq.n	8003384 <ai_platform_network_create+0x5c>
 800337e:	6894      	ldr	r4, [r2, #8]
 8003380:	2c00      	cmp	r4, #0
 8003382:	d1fa      	bne.n	800337a <ai_platform_network_create+0x52>
 8003384:	4a4e      	ldr	r2, [pc, #312]	; (80034c0 <ai_platform_network_create+0x198>)
 8003386:	6891      	ldr	r1, [r2, #8]
 8003388:	b911      	cbnz	r1, 8003390 <ai_platform_network_create+0x68>
 800338a:	6812      	ldr	r2, [r2, #0]
 800338c:	3201      	adds	r2, #1
 800338e:	d008      	beq.n	80033a2 <ai_platform_network_create+0x7a>
 8003390:	4618      	mov	r0, r3
 8003392:	e7e6      	b.n	8003362 <ai_platform_network_create+0x3a>
 8003394:	2101      	movs	r1, #1
 8003396:	f8c2 1c08 	str.w	r1, [r2, #3080]	; 0xc08
 800339a:	f8d2 1c08 	ldr.w	r1, [r2, #3080]	; 0xc08
 800339e:	2900      	cmp	r1, #0
 80033a0:	d1fb      	bne.n	800339a <ai_platform_network_create+0x72>
 80033a2:	4618      	mov	r0, r3
 80033a4:	f7ff fcda 	bl	8002d5c <_ai_platform_release_crc>
 80033a8:	f7ff fcd6 	bl	8002d58 <_ai_platform_acquire_crc>
 80033ac:	4b42      	ldr	r3, [pc, #264]	; (80034b8 <ai_platform_network_create+0x190>)
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80033b4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80033b8:	d010      	beq.n	80033dc <ai_platform_network_create+0xb4>
 80033ba:	4b40      	ldr	r3, [pc, #256]	; (80034bc <ai_platform_network_create+0x194>)
 80033bc:	2201      	movs	r2, #1
 80033be:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 80033c2:	f8d3 1c08 	ldr.w	r1, [r3, #3080]	; 0xc08
 80033c6:	2900      	cmp	r1, #0
 80033c8:	d1fb      	bne.n	80033c2 <ai_platform_network_create+0x9a>
 80033ca:	4a3e      	ldr	r2, [pc, #248]	; (80034c4 <ai_platform_network_create+0x19c>)
 80033cc:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 80033d0:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 80033d4:	4b3c      	ldr	r3, [pc, #240]	; (80034c8 <ai_platform_network_create+0x1a0>)
 80033d6:	429a      	cmp	r2, r3
 80033d8:	d00c      	beq.n	80033f4 <ai_platform_network_create+0xcc>
 80033da:	e7fe      	b.n	80033da <ai_platform_network_create+0xb2>
 80033dc:	4a38      	ldr	r2, [pc, #224]	; (80034c0 <ai_platform_network_create+0x198>)
 80033de:	2301      	movs	r3, #1
 80033e0:	6093      	str	r3, [r2, #8]
 80033e2:	6893      	ldr	r3, [r2, #8]
 80033e4:	2b00      	cmp	r3, #0
 80033e6:	d1fc      	bne.n	80033e2 <ai_platform_network_create+0xba>
 80033e8:	4b36      	ldr	r3, [pc, #216]	; (80034c4 <ai_platform_network_create+0x19c>)
 80033ea:	6013      	str	r3, [r2, #0]
 80033ec:	6812      	ldr	r2, [r2, #0]
 80033ee:	4b36      	ldr	r3, [pc, #216]	; (80034c8 <ai_platform_network_create+0x1a0>)
 80033f0:	429a      	cmp	r2, r3
 80033f2:	d122      	bne.n	800343a <ai_platform_network_create+0x112>
 80033f4:	f7ff fcb2 	bl	8002d5c <_ai_platform_release_crc>
 80033f8:	b38e      	cbz	r6, 800345e <ai_platform_network_create+0x136>
 80033fa:	4b34      	ldr	r3, [pc, #208]	; (80034cc <ai_platform_network_create+0x1a4>)
 80033fc:	602b      	str	r3, [r5, #0]
 80033fe:	6035      	str	r5, [r6, #0]
 8003400:	f000 fc64 	bl	8003ccc <core_init>
 8003404:	b1d0      	cbz	r0, 800343c <ai_platform_network_create+0x114>
 8003406:	f7ff fca7 	bl	8002d58 <_ai_platform_acquire_crc>
 800340a:	4b2b      	ldr	r3, [pc, #172]	; (80034b8 <ai_platform_network_create+0x190>)
 800340c:	681b      	ldr	r3, [r3, #0]
 800340e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8003412:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003416:	d025      	beq.n	8003464 <ai_platform_network_create+0x13c>
 8003418:	4a28      	ldr	r2, [pc, #160]	; (80034bc <ai_platform_network_create+0x194>)
 800341a:	2301      	movs	r3, #1
 800341c:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8003420:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8003424:	2b00      	cmp	r3, #0
 8003426:	d1fb      	bne.n	8003420 <ai_platform_network_create+0xf8>
 8003428:	4b26      	ldr	r3, [pc, #152]	; (80034c4 <ai_platform_network_create+0x19c>)
 800342a:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 800342e:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8003432:	4b25      	ldr	r3, [pc, #148]	; (80034c8 <ai_platform_network_create+0x1a0>)
 8003434:	429a      	cmp	r2, r3
 8003436:	d022      	beq.n	800347e <ai_platform_network_create+0x156>
 8003438:	e7fe      	b.n	8003438 <ai_platform_network_create+0x110>
 800343a:	e7fe      	b.n	800343a <ai_platform_network_create+0x112>
 800343c:	2430      	movs	r4, #48	; 0x30
 800343e:	2300      	movs	r3, #0
 8003440:	6033      	str	r3, [r6, #0]
 8003442:	2610      	movs	r6, #16
 8003444:	464a      	mov	r2, r9
 8003446:	4641      	mov	r1, r8
 8003448:	4638      	mov	r0, r7
 800344a:	f001 fa75 	bl	8004938 <ai_version_get>
 800344e:	4603      	mov	r3, r0
 8003450:	2000      	movs	r0, #0
 8003452:	f364 0007 	bfi	r0, r4, #0, #8
 8003456:	64ab      	str	r3, [r5, #72]	; 0x48
 8003458:	f366 201f 	bfi	r0, r6, #8, #24
 800345c:	e785      	b.n	800336a <ai_platform_network_create+0x42>
 800345e:	f241 0010 	movw	r0, #4112	; 0x1010
 8003462:	e782      	b.n	800336a <ai_platform_network_create+0x42>
 8003464:	4a16      	ldr	r2, [pc, #88]	; (80034c0 <ai_platform_network_create+0x198>)
 8003466:	2301      	movs	r3, #1
 8003468:	6093      	str	r3, [r2, #8]
 800346a:	6893      	ldr	r3, [r2, #8]
 800346c:	2b00      	cmp	r3, #0
 800346e:	d1fc      	bne.n	800346a <ai_platform_network_create+0x142>
 8003470:	4b14      	ldr	r3, [pc, #80]	; (80034c4 <ai_platform_network_create+0x19c>)
 8003472:	6013      	str	r3, [r2, #0]
 8003474:	6812      	ldr	r2, [r2, #0]
 8003476:	4b14      	ldr	r3, [pc, #80]	; (80034c8 <ai_platform_network_create+0x1a0>)
 8003478:	429a      	cmp	r2, r3
 800347a:	d000      	beq.n	800347e <ai_platform_network_create+0x156>
 800347c:	e7fe      	b.n	800347c <ai_platform_network_create+0x154>
 800347e:	f7ff fc6d 	bl	8002d5c <_ai_platform_release_crc>
 8003482:	2200      	movs	r2, #0
 8003484:	4641      	mov	r1, r8
 8003486:	4638      	mov	r0, r7
 8003488:	f001 fa56 	bl	8004938 <ai_version_get>
 800348c:	2200      	movs	r2, #0
 800348e:	4604      	mov	r4, r0
 8003490:	2105      	movs	r1, #5
 8003492:	2001      	movs	r0, #1
 8003494:	f001 fa50 	bl	8004938 <ai_version_get>
 8003498:	4284      	cmp	r4, r0
 800349a:	d001      	beq.n	80034a0 <ai_platform_network_create+0x178>
 800349c:	2401      	movs	r4, #1
 800349e:	e7ce      	b.n	800343e <ai_platform_network_create+0x116>
 80034a0:	4b0b      	ldr	r3, [pc, #44]	; (80034d0 <ai_platform_network_create+0x1a8>)
 80034a2:	9301      	str	r3, [sp, #4]
 80034a4:	a801      	add	r0, sp, #4
 80034a6:	f001 f88d 	bl	80045c4 <ai_check_custom_types>
 80034aa:	b110      	cbz	r0, 80034b2 <ai_platform_network_create+0x18a>
 80034ac:	2600      	movs	r6, #0
 80034ae:	4634      	mov	r4, r6
 80034b0:	e7c8      	b.n	8003444 <ai_platform_network_create+0x11c>
 80034b2:	2402      	movs	r4, #2
 80034b4:	e7c3      	b.n	800343e <ai_platform_network_create+0x116>
 80034b6:	bf00      	nop
 80034b8:	e0042000 	.word	0xe0042000
 80034bc:	58024000 	.word	0x58024000
 80034c0:	40023000 	.word	0x40023000
 80034c4:	f407a5c2 	.word	0xf407a5c2
 80034c8:	b5e8b5cd 	.word	0xb5e8b5cd
 80034cc:	a1c00100 	.word	0xa1c00100
 80034d0:	84048403 	.word	0x84048403

080034d4 <ai_platform_network_init>:
 80034d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80034d8:	b1f8      	cbz	r0, 800351a <ai_platform_network_init+0x46>
 80034da:	4b6e      	ldr	r3, [pc, #440]	; (8003694 <ai_platform_network_init+0x1c0>)
 80034dc:	6802      	ldr	r2, [r0, #0]
 80034de:	429a      	cmp	r2, r3
 80034e0:	4604      	mov	r4, r0
 80034e2:	d11a      	bne.n	800351a <ai_platform_network_init+0x46>
 80034e4:	460e      	mov	r6, r1
 80034e6:	f7ff fc37 	bl	8002d58 <_ai_platform_acquire_crc>
 80034ea:	4b6b      	ldr	r3, [pc, #428]	; (8003698 <ai_platform_network_init+0x1c4>)
 80034ec:	681b      	ldr	r3, [r3, #0]
 80034ee:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80034f2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80034f6:	d03d      	beq.n	8003574 <ai_platform_network_init+0xa0>
 80034f8:	4a68      	ldr	r2, [pc, #416]	; (800369c <ai_platform_network_init+0x1c8>)
 80034fa:	2301      	movs	r3, #1
 80034fc:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8003500:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8003504:	2b00      	cmp	r3, #0
 8003506:	d1fb      	bne.n	8003500 <ai_platform_network_init+0x2c>
 8003508:	4b65      	ldr	r3, [pc, #404]	; (80036a0 <ai_platform_network_init+0x1cc>)
 800350a:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 800350e:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8003512:	4b64      	ldr	r3, [pc, #400]	; (80036a4 <ai_platform_network_init+0x1d0>)
 8003514:	429a      	cmp	r2, r3
 8003516:	d039      	beq.n	800358c <ai_platform_network_init+0xb8>
 8003518:	e7fe      	b.n	8003518 <ai_platform_network_init+0x44>
 800351a:	f7ff fc1d 	bl	8002d58 <_ai_platform_acquire_crc>
 800351e:	4b5e      	ldr	r3, [pc, #376]	; (8003698 <ai_platform_network_init+0x1c4>)
 8003520:	681b      	ldr	r3, [r3, #0]
 8003522:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8003526:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800352a:	d010      	beq.n	800354e <ai_platform_network_init+0x7a>
 800352c:	4a5b      	ldr	r2, [pc, #364]	; (800369c <ai_platform_network_init+0x1c8>)
 800352e:	2301      	movs	r3, #1
 8003530:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8003534:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8003538:	2b00      	cmp	r3, #0
 800353a:	d1fb      	bne.n	8003534 <ai_platform_network_init+0x60>
 800353c:	4b58      	ldr	r3, [pc, #352]	; (80036a0 <ai_platform_network_init+0x1cc>)
 800353e:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8003542:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8003546:	4b57      	ldr	r3, [pc, #348]	; (80036a4 <ai_platform_network_init+0x1d0>)
 8003548:	429a      	cmp	r2, r3
 800354a:	d00d      	beq.n	8003568 <ai_platform_network_init+0x94>
 800354c:	e7fe      	b.n	800354c <ai_platform_network_init+0x78>
 800354e:	4a56      	ldr	r2, [pc, #344]	; (80036a8 <ai_platform_network_init+0x1d4>)
 8003550:	2301      	movs	r3, #1
 8003552:	6093      	str	r3, [r2, #8]
 8003554:	6893      	ldr	r3, [r2, #8]
 8003556:	2b00      	cmp	r3, #0
 8003558:	d1fc      	bne.n	8003554 <ai_platform_network_init+0x80>
 800355a:	4b51      	ldr	r3, [pc, #324]	; (80036a0 <ai_platform_network_init+0x1cc>)
 800355c:	6013      	str	r3, [r2, #0]
 800355e:	6812      	ldr	r2, [r2, #0]
 8003560:	4b50      	ldr	r3, [pc, #320]	; (80036a4 <ai_platform_network_init+0x1d0>)
 8003562:	429a      	cmp	r2, r3
 8003564:	d000      	beq.n	8003568 <ai_platform_network_init+0x94>
 8003566:	e7fe      	b.n	8003566 <ai_platform_network_init+0x92>
 8003568:	f7ff fbf8 	bl	8002d5c <_ai_platform_release_crc>
 800356c:	2600      	movs	r6, #0
 800356e:	4630      	mov	r0, r6
 8003570:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003574:	4a4c      	ldr	r2, [pc, #304]	; (80036a8 <ai_platform_network_init+0x1d4>)
 8003576:	2301      	movs	r3, #1
 8003578:	6093      	str	r3, [r2, #8]
 800357a:	6893      	ldr	r3, [r2, #8]
 800357c:	2b00      	cmp	r3, #0
 800357e:	d1fc      	bne.n	800357a <ai_platform_network_init+0xa6>
 8003580:	4b47      	ldr	r3, [pc, #284]	; (80036a0 <ai_platform_network_init+0x1cc>)
 8003582:	6013      	str	r3, [r2, #0]
 8003584:	6812      	ldr	r2, [r2, #0]
 8003586:	4b47      	ldr	r3, [pc, #284]	; (80036a4 <ai_platform_network_init+0x1d0>)
 8003588:	429a      	cmp	r2, r3
 800358a:	d11c      	bne.n	80035c6 <ai_platform_network_init+0xf2>
 800358c:	f7ff fbe6 	bl	8002d5c <_ai_platform_release_crc>
 8003590:	2e00      	cmp	r6, #0
 8003592:	d06f      	beq.n	8003674 <ai_platform_network_init+0x1a0>
 8003594:	4b45      	ldr	r3, [pc, #276]	; (80036ac <ai_platform_network_init+0x1d8>)
 8003596:	6832      	ldr	r2, [r6, #0]
 8003598:	429a      	cmp	r2, r3
 800359a:	d115      	bne.n	80035c8 <ai_platform_network_init+0xf4>
 800359c:	e9d6 2101 	ldrd	r2, r1, [r6, #4]
 80035a0:	6933      	ldr	r3, [r6, #16]
 80035a2:	f8b6 e00c 	ldrh.w	lr, [r6, #12]
 80035a6:	89f7      	ldrh	r7, [r6, #14]
 80035a8:	62a3      	str	r3, [r4, #40]	; 0x28
 80035aa:	e9c4 2107 	strd	r2, r1, [r4, #28]
 80035ae:	2303      	movs	r3, #3
 80035b0:	84e7      	strh	r7, [r4, #38]	; 0x26
 80035b2:	f8a4 e024 	strh.w	lr, [r4, #36]	; 0x24
 80035b6:	60e3      	str	r3, [r4, #12]
 80035b8:	4620      	mov	r0, r4
 80035ba:	4626      	mov	r6, r4
 80035bc:	f001 f82c 	bl	8004618 <ai_layers_init_all>
 80035c0:	4630      	mov	r0, r6
 80035c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80035c6:	e7fe      	b.n	80035c6 <ai_platform_network_init+0xf2>
 80035c8:	2101      	movs	r1, #1
 80035ca:	4630      	mov	r0, r6
 80035cc:	4635      	mov	r5, r6
 80035ce:	6876      	ldr	r6, [r6, #4]
 80035d0:	f7ff fb74 	bl	8002cbc <ai_buffer_get_size>
 80035d4:	f105 081c 	add.w	r8, r5, #28
 80035d8:	4681      	mov	r9, r0
 80035da:	2101      	movs	r1, #1
 80035dc:	4640      	mov	r0, r8
 80035de:	6a2f      	ldr	r7, [r5, #32]
 80035e0:	f7ff fb6c 	bl	8002cbc <ai_buffer_get_size>
 80035e4:	f1b9 0f00 	cmp.w	r9, #0
 80035e8:	d025      	beq.n	8003636 <ai_platform_network_init+0x162>
 80035ea:	2201      	movs	r2, #1
 80035ec:	4696      	mov	lr, r2
 80035ee:	bb30      	cbnz	r0, 800363e <ai_platform_network_init+0x16a>
 80035f0:	4680      	mov	r8, r0
 80035f2:	4607      	mov	r7, r0
 80035f4:	b376      	cbz	r6, 8003654 <ai_platform_network_init+0x180>
 80035f6:	8be3      	ldrh	r3, [r4, #30]
 80035f8:	4573      	cmp	r3, lr
 80035fa:	d323      	bcc.n	8003644 <ai_platform_network_init+0x170>
 80035fc:	b142      	cbz	r2, 8003610 <ai_platform_network_init+0x13c>
 80035fe:	46ac      	mov	ip, r5
 8003600:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8003604:	6a25      	ldr	r5, [r4, #32]
 8003606:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003608:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 800360c:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8003610:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8003612:	f8a4 e01e 	strh.w	lr, [r4, #30]
 8003616:	2600      	movs	r6, #0
 8003618:	42bb      	cmp	r3, r7
 800361a:	83a6      	strh	r6, [r4, #28]
 800361c:	d323      	bcc.n	8003666 <ai_platform_network_init+0x192>
 800361e:	b37f      	cbz	r7, 8003680 <ai_platform_network_init+0x1ac>
 8003620:	46c4      	mov	ip, r8
 8003622:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8003626:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 8003628:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800362a:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 800362e:	46b6      	mov	lr, r6
 8003630:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8003634:	e7bb      	b.n	80035ae <ai_platform_network_init+0xda>
 8003636:	464a      	mov	r2, r9
 8003638:	46ce      	mov	lr, r9
 800363a:	464d      	mov	r5, r9
 800363c:	e7d7      	b.n	80035ee <ai_platform_network_init+0x11a>
 800363e:	b30f      	cbz	r7, 8003684 <ai_platform_network_init+0x1b0>
 8003640:	2701      	movs	r7, #1
 8003642:	e7d7      	b.n	80035f4 <ai_platform_network_init+0x120>
 8003644:	2212      	movs	r2, #18
 8003646:	2116      	movs	r1, #22
 8003648:	f104 0010 	add.w	r0, r4, #16
 800364c:	f000 fb46 	bl	8003cdc <core_set_error>
 8003650:	2600      	movs	r6, #0
 8003652:	e78c      	b.n	800356e <ai_platform_network_init+0x9a>
 8003654:	f1b9 0f00 	cmp.w	r9, #0
 8003658:	d0cd      	beq.n	80035f6 <ai_platform_network_init+0x122>
 800365a:	2110      	movs	r1, #16
 800365c:	2212      	movs	r2, #18
 800365e:	1860      	adds	r0, r4, r1
 8003660:	f000 fb3c 	bl	8003cdc <core_set_error>
 8003664:	e783      	b.n	800356e <ai_platform_network_init+0x9a>
 8003666:	2213      	movs	r2, #19
 8003668:	2116      	movs	r1, #22
 800366a:	f104 0010 	add.w	r0, r4, #16
 800366e:	f000 fb35 	bl	8003cdc <core_set_error>
 8003672:	e77c      	b.n	800356e <ai_platform_network_init+0x9a>
 8003674:	2110      	movs	r1, #16
 8003676:	2211      	movs	r2, #17
 8003678:	1860      	adds	r0, r4, r1
 800367a:	f000 fb2f 	bl	8003cdc <core_set_error>
 800367e:	e776      	b.n	800356e <ai_platform_network_init+0x9a>
 8003680:	46be      	mov	lr, r7
 8003682:	e794      	b.n	80035ae <ai_platform_network_init+0xda>
 8003684:	2110      	movs	r1, #16
 8003686:	2213      	movs	r2, #19
 8003688:	1860      	adds	r0, r4, r1
 800368a:	f000 fb27 	bl	8003cdc <core_set_error>
 800368e:	463e      	mov	r6, r7
 8003690:	e76d      	b.n	800356e <ai_platform_network_init+0x9a>
 8003692:	bf00      	nop
 8003694:	a1c00100 	.word	0xa1c00100
 8003698:	e0042000 	.word	0xe0042000
 800369c:	58024000 	.word	0x58024000
 80036a0:	f407a5c2 	.word	0xf407a5c2
 80036a4:	b5e8b5cd 	.word	0xb5e8b5cd
 80036a8:	40023000 	.word	0x40023000
 80036ac:	a1facade 	.word	0xa1facade

080036b0 <ai_platform_network_post_init>:
 80036b0:	b538      	push	{r3, r4, r5, lr}
 80036b2:	b1f0      	cbz	r0, 80036f2 <ai_platform_network_post_init+0x42>
 80036b4:	4b3c      	ldr	r3, [pc, #240]	; (80037a8 <ai_platform_network_post_init+0xf8>)
 80036b6:	6802      	ldr	r2, [r0, #0]
 80036b8:	429a      	cmp	r2, r3
 80036ba:	4604      	mov	r4, r0
 80036bc:	d119      	bne.n	80036f2 <ai_platform_network_post_init+0x42>
 80036be:	f7ff fb4b 	bl	8002d58 <_ai_platform_acquire_crc>
 80036c2:	4b3a      	ldr	r3, [pc, #232]	; (80037ac <ai_platform_network_post_init+0xfc>)
 80036c4:	681b      	ldr	r3, [r3, #0]
 80036c6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80036ca:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80036ce:	d03b      	beq.n	8003748 <ai_platform_network_post_init+0x98>
 80036d0:	4a37      	ldr	r2, [pc, #220]	; (80037b0 <ai_platform_network_post_init+0x100>)
 80036d2:	2301      	movs	r3, #1
 80036d4:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80036d8:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80036dc:	2b00      	cmp	r3, #0
 80036de:	d1fb      	bne.n	80036d8 <ai_platform_network_post_init+0x28>
 80036e0:	4b34      	ldr	r3, [pc, #208]	; (80037b4 <ai_platform_network_post_init+0x104>)
 80036e2:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 80036e6:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80036ea:	4b33      	ldr	r3, [pc, #204]	; (80037b8 <ai_platform_network_post_init+0x108>)
 80036ec:	429a      	cmp	r2, r3
 80036ee:	d037      	beq.n	8003760 <ai_platform_network_post_init+0xb0>
 80036f0:	e7fe      	b.n	80036f0 <ai_platform_network_post_init+0x40>
 80036f2:	f7ff fb31 	bl	8002d58 <_ai_platform_acquire_crc>
 80036f6:	4b2d      	ldr	r3, [pc, #180]	; (80037ac <ai_platform_network_post_init+0xfc>)
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80036fe:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003702:	d010      	beq.n	8003726 <ai_platform_network_post_init+0x76>
 8003704:	4a2a      	ldr	r2, [pc, #168]	; (80037b0 <ai_platform_network_post_init+0x100>)
 8003706:	2301      	movs	r3, #1
 8003708:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 800370c:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8003710:	2b00      	cmp	r3, #0
 8003712:	d1fb      	bne.n	800370c <ai_platform_network_post_init+0x5c>
 8003714:	4b27      	ldr	r3, [pc, #156]	; (80037b4 <ai_platform_network_post_init+0x104>)
 8003716:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 800371a:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 800371e:	4b26      	ldr	r3, [pc, #152]	; (80037b8 <ai_platform_network_post_init+0x108>)
 8003720:	429a      	cmp	r2, r3
 8003722:	d00d      	beq.n	8003740 <ai_platform_network_post_init+0x90>
 8003724:	e7fe      	b.n	8003724 <ai_platform_network_post_init+0x74>
 8003726:	4a25      	ldr	r2, [pc, #148]	; (80037bc <ai_platform_network_post_init+0x10c>)
 8003728:	2301      	movs	r3, #1
 800372a:	6093      	str	r3, [r2, #8]
 800372c:	6893      	ldr	r3, [r2, #8]
 800372e:	2b00      	cmp	r3, #0
 8003730:	d1fc      	bne.n	800372c <ai_platform_network_post_init+0x7c>
 8003732:	4b20      	ldr	r3, [pc, #128]	; (80037b4 <ai_platform_network_post_init+0x104>)
 8003734:	6013      	str	r3, [r2, #0]
 8003736:	6812      	ldr	r2, [r2, #0]
 8003738:	4b1f      	ldr	r3, [pc, #124]	; (80037b8 <ai_platform_network_post_init+0x108>)
 800373a:	429a      	cmp	r2, r3
 800373c:	d000      	beq.n	8003740 <ai_platform_network_post_init+0x90>
 800373e:	e7fe      	b.n	800373e <ai_platform_network_post_init+0x8e>
 8003740:	f7ff fb0c 	bl	8002d5c <_ai_platform_release_crc>
 8003744:	2000      	movs	r0, #0
 8003746:	bd38      	pop	{r3, r4, r5, pc}
 8003748:	4a1c      	ldr	r2, [pc, #112]	; (80037bc <ai_platform_network_post_init+0x10c>)
 800374a:	2301      	movs	r3, #1
 800374c:	6093      	str	r3, [r2, #8]
 800374e:	6893      	ldr	r3, [r2, #8]
 8003750:	2b00      	cmp	r3, #0
 8003752:	d1fc      	bne.n	800374e <ai_platform_network_post_init+0x9e>
 8003754:	4b17      	ldr	r3, [pc, #92]	; (80037b4 <ai_platform_network_post_init+0x104>)
 8003756:	6013      	str	r3, [r2, #0]
 8003758:	6812      	ldr	r2, [r2, #0]
 800375a:	4b17      	ldr	r3, [pc, #92]	; (80037b8 <ai_platform_network_post_init+0x108>)
 800375c:	429a      	cmp	r2, r3
 800375e:	d11a      	bne.n	8003796 <ai_platform_network_post_init+0xe6>
 8003760:	f7ff fafc 	bl	8002d5c <_ai_platform_release_crc>
 8003764:	68e3      	ldr	r3, [r4, #12]
 8003766:	f013 0502 	ands.w	r5, r3, #2
 800376a:	d015      	beq.n	8003798 <ai_platform_network_post_init+0xe8>
 800376c:	4620      	mov	r0, r4
 800376e:	f000 ff61 	bl	8004634 <ai_layers_post_init_all>
 8003772:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003774:	b16b      	cbz	r3, 8003792 <ai_platform_network_post_init+0xe2>
 8003776:	6b65      	ldr	r5, [r4, #52]	; 0x34
 8003778:	e007      	b.n	800378a <ai_platform_network_post_init+0xda>
 800377a:	e9d4 320f 	ldrd	r3, r2, [r4, #60]	; 0x3c
 800377e:	4798      	blx	r3
 8003780:	692b      	ldr	r3, [r5, #16]
 8003782:	42ab      	cmp	r3, r5
 8003784:	d005      	beq.n	8003792 <ai_platform_network_post_init+0xe2>
 8003786:	b123      	cbz	r3, 8003792 <ai_platform_network_post_init+0xe2>
 8003788:	461d      	mov	r5, r3
 800378a:	4629      	mov	r1, r5
 800378c:	2000      	movs	r0, #0
 800378e:	2d00      	cmp	r5, #0
 8003790:	d1f3      	bne.n	800377a <ai_platform_network_post_init+0xca>
 8003792:	2001      	movs	r0, #1
 8003794:	bd38      	pop	{r3, r4, r5, pc}
 8003796:	e7fe      	b.n	8003796 <ai_platform_network_post_init+0xe6>
 8003798:	2210      	movs	r2, #16
 800379a:	2111      	movs	r1, #17
 800379c:	18a0      	adds	r0, r4, r2
 800379e:	f000 fa9d 	bl	8003cdc <core_set_error>
 80037a2:	4628      	mov	r0, r5
 80037a4:	bd38      	pop	{r3, r4, r5, pc}
 80037a6:	bf00      	nop
 80037a8:	a1c00100 	.word	0xa1c00100
 80037ac:	e0042000 	.word	0xe0042000
 80037b0:	58024000 	.word	0x58024000
 80037b4:	f407a5c2 	.word	0xf407a5c2
 80037b8:	b5e8b5cd 	.word	0xb5e8b5cd
 80037bc:	40023000 	.word	0x40023000

080037c0 <ai_platform_network_process>:
 80037c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037c4:	460e      	mov	r6, r1
 80037c6:	b085      	sub	sp, #20
 80037c8:	4693      	mov	fp, r2
 80037ca:	4605      	mov	r5, r0
 80037cc:	b120      	cbz	r0, 80037d8 <ai_platform_network_process+0x18>
 80037ce:	4bb8      	ldr	r3, [pc, #736]	; (8003ab0 <ai_platform_network_process+0x2f0>)
 80037d0:	6802      	ldr	r2, [r0, #0]
 80037d2:	429a      	cmp	r2, r3
 80037d4:	bf18      	it	ne
 80037d6:	2500      	movne	r5, #0
 80037d8:	f7ff fabe 	bl	8002d58 <_ai_platform_acquire_crc>
 80037dc:	4bb5      	ldr	r3, [pc, #724]	; (8003ab4 <ai_platform_network_process+0x2f4>)
 80037de:	681b      	ldr	r3, [r3, #0]
 80037e0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80037e4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80037e8:	d010      	beq.n	800380c <ai_platform_network_process+0x4c>
 80037ea:	4ab3      	ldr	r2, [pc, #716]	; (8003ab8 <ai_platform_network_process+0x2f8>)
 80037ec:	2301      	movs	r3, #1
 80037ee:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80037f2:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80037f6:	2b00      	cmp	r3, #0
 80037f8:	d1fb      	bne.n	80037f2 <ai_platform_network_process+0x32>
 80037fa:	4bb0      	ldr	r3, [pc, #704]	; (8003abc <ai_platform_network_process+0x2fc>)
 80037fc:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8003800:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8003804:	4bae      	ldr	r3, [pc, #696]	; (8003ac0 <ai_platform_network_process+0x300>)
 8003806:	429a      	cmp	r2, r3
 8003808:	d00d      	beq.n	8003826 <ai_platform_network_process+0x66>
 800380a:	e7fe      	b.n	800380a <ai_platform_network_process+0x4a>
 800380c:	4aad      	ldr	r2, [pc, #692]	; (8003ac4 <ai_platform_network_process+0x304>)
 800380e:	2301      	movs	r3, #1
 8003810:	6093      	str	r3, [r2, #8]
 8003812:	6893      	ldr	r3, [r2, #8]
 8003814:	2b00      	cmp	r3, #0
 8003816:	d1fc      	bne.n	8003812 <ai_platform_network_process+0x52>
 8003818:	4ba8      	ldr	r3, [pc, #672]	; (8003abc <ai_platform_network_process+0x2fc>)
 800381a:	6013      	str	r3, [r2, #0]
 800381c:	6812      	ldr	r2, [r2, #0]
 800381e:	4ba8      	ldr	r3, [pc, #672]	; (8003ac0 <ai_platform_network_process+0x300>)
 8003820:	429a      	cmp	r2, r3
 8003822:	f040 812c 	bne.w	8003a7e <ai_platform_network_process+0x2be>
 8003826:	f7ff fa99 	bl	8002d5c <_ai_platform_release_crc>
 800382a:	2d00      	cmp	r5, #0
 800382c:	f000 8154 	beq.w	8003ad8 <ai_platform_network_process+0x318>
 8003830:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
 8003832:	2b00      	cmp	r3, #0
 8003834:	f000 8124 	beq.w	8003a80 <ai_platform_network_process+0x2c0>
 8003838:	68eb      	ldr	r3, [r5, #12]
 800383a:	f8d5 a030 	ldr.w	sl, [r5, #48]	; 0x30
 800383e:	f003 0303 	and.w	r3, r3, #3
 8003842:	2700      	movs	r7, #0
 8003844:	2b03      	cmp	r3, #3
 8003846:	616f      	str	r7, [r5, #20]
 8003848:	f040 813e 	bne.w	8003ac8 <ai_platform_network_process+0x308>
 800384c:	2e00      	cmp	r6, #0
 800384e:	f000 811d 	beq.w	8003a8c <ai_platform_network_process+0x2cc>
 8003852:	f1ba 0f00 	cmp.w	sl, #0
 8003856:	f000 8119 	beq.w	8003a8c <ai_platform_network_process+0x2cc>
 800385a:	f8ba 3000 	ldrh.w	r3, [sl]
 800385e:	2b00      	cmp	r3, #0
 8003860:	f000 8114 	beq.w	8003a8c <ai_platform_network_process+0x2cc>
 8003864:	69b3      	ldr	r3, [r6, #24]
 8003866:	f8cd b00c 	str.w	fp, [sp, #12]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	e9cd 3501 	strd	r3, r5, [sp, #4]
 8003870:	f8da 3004 	ldr.w	r3, [sl, #4]
 8003874:	2b00      	cmp	r3, #0
 8003876:	d072      	beq.n	800395e <ai_platform_network_process+0x19e>
 8003878:	f853 4027 	ldr.w	r4, [r3, r7, lsl #2]
 800387c:	2c00      	cmp	r4, #0
 800387e:	d06e      	beq.n	800395e <ai_platform_network_process+0x19e>
 8003880:	f8da 3008 	ldr.w	r3, [sl, #8]
 8003884:	f8d3 9000 	ldr.w	r9, [r3]
 8003888:	eb19 1807 	adds.w	r8, r9, r7, lsl #4
 800388c:	ea4f 1b07 	mov.w	fp, r7, lsl #4
 8003890:	f000 81e0 	beq.w	8003c54 <ai_platform_network_process+0x494>
 8003894:	69a3      	ldr	r3, [r4, #24]
 8003896:	2101      	movs	r1, #1
 8003898:	4630      	mov	r0, r6
 800389a:	685d      	ldr	r5, [r3, #4]
 800389c:	f7ff fa0e 	bl	8002cbc <ai_buffer_get_size>
 80038a0:	4285      	cmp	r5, r0
 80038a2:	f0c0 811b 	bcc.w	8003adc <ai_platform_network_process+0x31c>
 80038a6:	68e0      	ldr	r0, [r4, #12]
 80038a8:	69b1      	ldr	r1, [r6, #24]
 80038aa:	68c2      	ldr	r2, [r0, #12]
 80038ac:	68cb      	ldr	r3, [r1, #12]
 80038ae:	429a      	cmp	r2, r3
 80038b0:	f040 8114 	bne.w	8003adc <ai_platform_network_process+0x31c>
 80038b4:	6882      	ldr	r2, [r0, #8]
 80038b6:	688b      	ldr	r3, [r1, #8]
 80038b8:	429a      	cmp	r2, r3
 80038ba:	f040 810f 	bne.w	8003adc <ai_platform_network_process+0x31c>
 80038be:	6842      	ldr	r2, [r0, #4]
 80038c0:	684b      	ldr	r3, [r1, #4]
 80038c2:	429a      	cmp	r2, r3
 80038c4:	f040 810a 	bne.w	8003adc <ai_platform_network_process+0x31c>
 80038c8:	69a3      	ldr	r3, [r4, #24]
 80038ca:	e9d3 0100 	ldrd	r0, r1, [r3]
 80038ce:	f001 f8e5 	bl	8004a9c <ai_array_get_data_byte_size>
 80038d2:	4605      	mov	r5, r0
 80038d4:	4620      	mov	r0, r4
 80038d6:	f001 f835 	bl	8004944 <get_tensor_byte_size>
 80038da:	4285      	cmp	r5, r0
 80038dc:	f0c0 80fe 	bcc.w	8003adc <ai_platform_network_process+0x31c>
 80038e0:	69a3      	ldr	r3, [r4, #24]
 80038e2:	6818      	ldr	r0, [r3, #0]
 80038e4:	f001 f846 	bl	8004974 <ai_array_to_buffer_fmt>
 80038e8:	6833      	ldr	r3, [r6, #0]
 80038ea:	4058      	eors	r0, r3
 80038ec:	f030 407e 	bics.w	r0, r0, #4261412864	; 0xfe000000
 80038f0:	f040 81bb 	bne.w	8003c6a <ai_platform_network_process+0x4aa>
 80038f4:	6873      	ldr	r3, [r6, #4]
 80038f6:	2b00      	cmp	r3, #0
 80038f8:	f000 81ae 	beq.w	8003c58 <ai_platform_network_process+0x498>
 80038fc:	69b3      	ldr	r3, [r6, #24]
 80038fe:	681b      	ldr	r3, [r3, #0]
 8003900:	2b00      	cmp	r3, #0
 8003902:	f000 819e 	beq.w	8003c42 <ai_platform_network_process+0x482>
 8003906:	9a01      	ldr	r2, [sp, #4]
 8003908:	429a      	cmp	r2, r3
 800390a:	bf38      	it	cc
 800390c:	461a      	movcc	r2, r3
 800390e:	4620      	mov	r0, r4
 8003910:	9201      	str	r2, [sp, #4]
 8003912:	f001 f817 	bl	8004944 <get_tensor_byte_size>
 8003916:	f8c8 0008 	str.w	r0, [r8, #8]
 800391a:	69b3      	ldr	r3, [r6, #24]
 800391c:	681b      	ldr	r3, [r3, #0]
 800391e:	fb00 f303 	mul.w	r3, r0, r3
 8003922:	f8c8 300c 	str.w	r3, [r8, #12]
 8003926:	6871      	ldr	r1, [r6, #4]
 8003928:	f8c8 1004 	str.w	r1, [r8, #4]
 800392c:	440b      	add	r3, r1
 800392e:	f849 300b 	str.w	r3, [r9, fp]
 8003932:	69a0      	ldr	r0, [r4, #24]
 8003934:	6803      	ldr	r3, [r0, #0]
 8003936:	009a      	lsls	r2, r3, #2
 8003938:	f107 0701 	add.w	r7, r7, #1
 800393c:	f106 061c 	add.w	r6, r6, #28
 8003940:	f100 80af 	bmi.w	8003aa2 <ai_platform_network_process+0x2e2>
 8003944:	e9d0 3202 	ldrd	r3, r2, [r0, #8]
 8003948:	1a9b      	subs	r3, r3, r2
 800394a:	4419      	add	r1, r3
 800394c:	6081      	str	r1, [r0, #8]
 800394e:	69a3      	ldr	r3, [r4, #24]
 8003950:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8003954:	60da      	str	r2, [r3, #12]
 8003956:	f8ba 3000 	ldrh.w	r3, [sl]
 800395a:	42bb      	cmp	r3, r7
 800395c:	d888      	bhi.n	8003870 <ai_platform_network_process+0xb0>
 800395e:	e9dd 5b02 	ldrd	r5, fp, [sp, #8]
 8003962:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
 8003964:	f1bb 0f00 	cmp.w	fp, #0
 8003968:	f000 8188 	beq.w	8003c7c <ai_platform_network_process+0x4bc>
 800396c:	2a01      	cmp	r2, #1
 800396e:	f240 8160 	bls.w	8003c32 <ai_platform_network_process+0x472>
 8003972:	f8d5 9030 	ldr.w	r9, [r5, #48]	; 0x30
 8003976:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 800397a:	2b00      	cmp	r3, #0
 800397c:	f000 8159 	beq.w	8003c32 <ai_platform_network_process+0x472>
 8003980:	465e      	mov	r6, fp
 8003982:	2700      	movs	r7, #0
 8003984:	462c      	mov	r4, r5
 8003986:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800398a:	2b00      	cmp	r3, #0
 800398c:	f000 80b4 	beq.w	8003af8 <ai_platform_network_process+0x338>
 8003990:	f853 5027 	ldr.w	r5, [r3, r7, lsl #2]
 8003994:	2d00      	cmp	r5, #0
 8003996:	f000 80af 	beq.w	8003af8 <ai_platform_network_process+0x338>
 800399a:	f8d9 3014 	ldr.w	r3, [r9, #20]
 800399e:	f8d3 8000 	ldr.w	r8, [r3]
 80039a2:	eb18 1a07 	adds.w	sl, r8, r7, lsl #4
 80039a6:	ea4f 1b07 	mov.w	fp, r7, lsl #4
 80039aa:	f000 8173 	beq.w	8003c94 <ai_platform_network_process+0x4d4>
 80039ae:	69ab      	ldr	r3, [r5, #24]
 80039b0:	2101      	movs	r1, #1
 80039b2:	685b      	ldr	r3, [r3, #4]
 80039b4:	9302      	str	r3, [sp, #8]
 80039b6:	4630      	mov	r0, r6
 80039b8:	f7ff f980 	bl	8002cbc <ai_buffer_get_size>
 80039bc:	9b02      	ldr	r3, [sp, #8]
 80039be:	4283      	cmp	r3, r0
 80039c0:	f0c0 8136 	bcc.w	8003c30 <ai_platform_network_process+0x470>
 80039c4:	68e8      	ldr	r0, [r5, #12]
 80039c6:	69b1      	ldr	r1, [r6, #24]
 80039c8:	68c2      	ldr	r2, [r0, #12]
 80039ca:	68cb      	ldr	r3, [r1, #12]
 80039cc:	429a      	cmp	r2, r3
 80039ce:	f040 812f 	bne.w	8003c30 <ai_platform_network_process+0x470>
 80039d2:	6882      	ldr	r2, [r0, #8]
 80039d4:	688b      	ldr	r3, [r1, #8]
 80039d6:	429a      	cmp	r2, r3
 80039d8:	f040 812a 	bne.w	8003c30 <ai_platform_network_process+0x470>
 80039dc:	6842      	ldr	r2, [r0, #4]
 80039de:	684b      	ldr	r3, [r1, #4]
 80039e0:	429a      	cmp	r2, r3
 80039e2:	f040 8125 	bne.w	8003c30 <ai_platform_network_process+0x470>
 80039e6:	69ab      	ldr	r3, [r5, #24]
 80039e8:	e9d3 0100 	ldrd	r0, r1, [r3]
 80039ec:	f001 f856 	bl	8004a9c <ai_array_get_data_byte_size>
 80039f0:	9002      	str	r0, [sp, #8]
 80039f2:	4628      	mov	r0, r5
 80039f4:	f000 ffa6 	bl	8004944 <get_tensor_byte_size>
 80039f8:	9b02      	ldr	r3, [sp, #8]
 80039fa:	4283      	cmp	r3, r0
 80039fc:	f0c0 8118 	bcc.w	8003c30 <ai_platform_network_process+0x470>
 8003a00:	69ab      	ldr	r3, [r5, #24]
 8003a02:	6818      	ldr	r0, [r3, #0]
 8003a04:	f000 ffb6 	bl	8004974 <ai_array_to_buffer_fmt>
 8003a08:	6833      	ldr	r3, [r6, #0]
 8003a0a:	4058      	eors	r0, r3
 8003a0c:	f030 407e 	bics.w	r0, r0, #4261412864	; 0xfe000000
 8003a10:	f040 8138 	bne.w	8003c84 <ai_platform_network_process+0x4c4>
 8003a14:	6873      	ldr	r3, [r6, #4]
 8003a16:	2b00      	cmp	r3, #0
 8003a18:	f000 814f 	beq.w	8003cba <ai_platform_network_process+0x4fa>
 8003a1c:	69b3      	ldr	r3, [r6, #24]
 8003a1e:	681b      	ldr	r3, [r3, #0]
 8003a20:	2b00      	cmp	r3, #0
 8003a22:	f000 8141 	beq.w	8003ca8 <ai_platform_network_process+0x4e8>
 8003a26:	9a01      	ldr	r2, [sp, #4]
 8003a28:	429a      	cmp	r2, r3
 8003a2a:	bf38      	it	cc
 8003a2c:	461a      	movcc	r2, r3
 8003a2e:	4628      	mov	r0, r5
 8003a30:	9201      	str	r2, [sp, #4]
 8003a32:	f000 ff87 	bl	8004944 <get_tensor_byte_size>
 8003a36:	f8ca 0008 	str.w	r0, [sl, #8]
 8003a3a:	69b3      	ldr	r3, [r6, #24]
 8003a3c:	681b      	ldr	r3, [r3, #0]
 8003a3e:	fb00 f303 	mul.w	r3, r0, r3
 8003a42:	f8ca 300c 	str.w	r3, [sl, #12]
 8003a46:	6871      	ldr	r1, [r6, #4]
 8003a48:	f8ca 1004 	str.w	r1, [sl, #4]
 8003a4c:	440b      	add	r3, r1
 8003a4e:	f848 300b 	str.w	r3, [r8, fp]
 8003a52:	69a8      	ldr	r0, [r5, #24]
 8003a54:	6803      	ldr	r3, [r0, #0]
 8003a56:	009b      	lsls	r3, r3, #2
 8003a58:	f107 0701 	add.w	r7, r7, #1
 8003a5c:	f106 061c 	add.w	r6, r6, #28
 8003a60:	d445      	bmi.n	8003aee <ai_platform_network_process+0x32e>
 8003a62:	e9d0 3202 	ldrd	r3, r2, [r0, #8]
 8003a66:	1a9b      	subs	r3, r3, r2
 8003a68:	4419      	add	r1, r3
 8003a6a:	6081      	str	r1, [r0, #8]
 8003a6c:	69ab      	ldr	r3, [r5, #24]
 8003a6e:	f8da 2004 	ldr.w	r2, [sl, #4]
 8003a72:	60da      	str	r2, [r3, #12]
 8003a74:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8003a78:	429f      	cmp	r7, r3
 8003a7a:	d384      	bcc.n	8003986 <ai_platform_network_process+0x1c6>
 8003a7c:	e03c      	b.n	8003af8 <ai_platform_network_process+0x338>
 8003a7e:	e7fe      	b.n	8003a7e <ai_platform_network_process+0x2be>
 8003a80:	68ea      	ldr	r2, [r5, #12]
 8003a82:	616b      	str	r3, [r5, #20]
 8003a84:	f002 0203 	and.w	r2, r2, #3
 8003a88:	2a03      	cmp	r2, #3
 8003a8a:	d11d      	bne.n	8003ac8 <ai_platform_network_process+0x308>
 8003a8c:	2217      	movs	r2, #23
 8003a8e:	2112      	movs	r1, #18
 8003a90:	f105 0010 	add.w	r0, r5, #16
 8003a94:	f000 f922 	bl	8003cdc <core_set_error>
 8003a98:	2400      	movs	r4, #0
 8003a9a:	4620      	mov	r0, r4
 8003a9c:	b005      	add	sp, #20
 8003a9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003aa2:	f8ba 3000 	ldrh.w	r3, [sl]
 8003aa6:	429f      	cmp	r7, r3
 8003aa8:	f4ff aee2 	bcc.w	8003870 <ai_platform_network_process+0xb0>
 8003aac:	e757      	b.n	800395e <ai_platform_network_process+0x19e>
 8003aae:	bf00      	nop
 8003ab0:	a1c00100 	.word	0xa1c00100
 8003ab4:	e0042000 	.word	0xe0042000
 8003ab8:	58024000 	.word	0x58024000
 8003abc:	f407a5c2 	.word	0xf407a5c2
 8003ac0:	b5e8b5cd 	.word	0xb5e8b5cd
 8003ac4:	40023000 	.word	0x40023000
 8003ac8:	2230      	movs	r2, #48	; 0x30
 8003aca:	2111      	movs	r1, #17
 8003acc:	f105 0010 	add.w	r0, r5, #16
 8003ad0:	f000 f904 	bl	8003cdc <core_set_error>
 8003ad4:	2400      	movs	r4, #0
 8003ad6:	e7e0      	b.n	8003a9a <ai_platform_network_process+0x2da>
 8003ad8:	462c      	mov	r4, r5
 8003ada:	e7de      	b.n	8003a9a <ai_platform_network_process+0x2da>
 8003adc:	9d02      	ldr	r5, [sp, #8]
 8003ade:	2218      	movs	r2, #24
 8003ae0:	2112      	movs	r1, #18
 8003ae2:	f105 0010 	add.w	r0, r5, #16
 8003ae6:	f000 f8f9 	bl	8003cdc <core_set_error>
 8003aea:	2400      	movs	r4, #0
 8003aec:	e7d5      	b.n	8003a9a <ai_platform_network_process+0x2da>
 8003aee:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8003af2:	429f      	cmp	r7, r3
 8003af4:	f4ff af47 	bcc.w	8003986 <ai_platform_network_process+0x1c6>
 8003af8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8003afc:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8003afe:	82a3      	strh	r3, [r4, #20]
 8003b00:	4625      	mov	r5, r4
 8003b02:	2a00      	cmp	r2, #0
 8003b04:	f040 808e 	bne.w	8003c24 <ai_platform_network_process+0x464>
 8003b08:	4616      	mov	r6, r2
 8003b0a:	4617      	mov	r7, r2
 8003b0c:	8aec      	ldrh	r4, [r5, #22]
 8003b0e:	429c      	cmp	r4, r3
 8003b10:	bf38      	it	cc
 8003b12:	46ab      	movcc	fp, r5
 8003b14:	d2c1      	bcs.n	8003a9a <ai_platform_network_process+0x2da>
 8003b16:	2e00      	cmp	r6, #0
 8003b18:	d030      	beq.n	8003b7c <ai_platform_network_process+0x3bc>
 8003b1a:	f04f 0800 	mov.w	r8, #0
 8003b1e:	e014      	b.n	8003b4a <ai_platform_network_process+0x38a>
 8003b20:	6882      	ldr	r2, [r0, #8]
 8003b22:	68c5      	ldr	r5, [r0, #12]
 8003b24:	6863      	ldr	r3, [r4, #4]
 8003b26:	1b52      	subs	r2, r2, r5
 8003b28:	4413      	add	r3, r2
 8003b2a:	6083      	str	r3, [r0, #8]
 8003b2c:	698b      	ldr	r3, [r1, #24]
 8003b2e:	6862      	ldr	r2, [r4, #4]
 8003b30:	60da      	str	r2, [r3, #12]
 8003b32:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 8003b36:	f859 200a 	ldr.w	r2, [r9, sl]
 8003b3a:	440b      	add	r3, r1
 8003b3c:	4293      	cmp	r3, r2
 8003b3e:	bf24      	itt	cs
 8003b40:	68e3      	ldrcs	r3, [r4, #12]
 8003b42:	1ad3      	subcs	r3, r2, r3
 8003b44:	6063      	str	r3, [r4, #4]
 8003b46:	f108 0801 	add.w	r8, r8, #1
 8003b4a:	8833      	ldrh	r3, [r6, #0]
 8003b4c:	4543      	cmp	r3, r8
 8003b4e:	ea4f 1a08 	mov.w	sl, r8, lsl #4
 8003b52:	d913      	bls.n	8003b7c <ai_platform_network_process+0x3bc>
 8003b54:	6873      	ldr	r3, [r6, #4]
 8003b56:	b18b      	cbz	r3, 8003b7c <ai_platform_network_process+0x3bc>
 8003b58:	f853 1028 	ldr.w	r1, [r3, r8, lsl #2]
 8003b5c:	b171      	cbz	r1, 8003b7c <ai_platform_network_process+0x3bc>
 8003b5e:	6988      	ldr	r0, [r1, #24]
 8003b60:	68b2      	ldr	r2, [r6, #8]
 8003b62:	6803      	ldr	r3, [r0, #0]
 8003b64:	f8d2 9000 	ldr.w	r9, [r2]
 8003b68:	009d      	lsls	r5, r3, #2
 8003b6a:	eb09 1408 	add.w	r4, r9, r8, lsl #4
 8003b6e:	d5d7      	bpl.n	8003b20 <ai_platform_network_process+0x360>
 8003b70:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8003b74:	6880      	ldr	r0, [r0, #8]
 8003b76:	f001 fb3d 	bl	80051f4 <memcpy>
 8003b7a:	e7da      	b.n	8003b32 <ai_platform_network_process+0x372>
 8003b7c:	4658      	mov	r0, fp
 8003b7e:	f000 fd6d 	bl	800465c <ai_layers_forward_all>
 8003b82:	2f00      	cmp	r7, #0
 8003b84:	d03f      	beq.n	8003c06 <ai_platform_network_process+0x446>
 8003b86:	2400      	movs	r4, #0
 8003b88:	e016      	b.n	8003bb8 <ai_platform_network_process+0x3f8>
 8003b8a:	e9d8 3201 	ldrd	r3, r2, [r8, #4]
 8003b8e:	f859 100a 	ldr.w	r1, [r9, sl]
 8003b92:	4413      	add	r3, r2
 8003b94:	428b      	cmp	r3, r1
 8003b96:	bf24      	itt	cs
 8003b98:	f8d8 300c 	ldrcs.w	r3, [r8, #12]
 8003b9c:	1acb      	subcs	r3, r1, r3
 8003b9e:	f8c8 3004 	str.w	r3, [r8, #4]
 8003ba2:	6981      	ldr	r1, [r0, #24]
 8003ba4:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8003ba8:	1b52      	subs	r2, r2, r5
 8003baa:	4413      	add	r3, r2
 8003bac:	608b      	str	r3, [r1, #8]
 8003bae:	6983      	ldr	r3, [r0, #24]
 8003bb0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8003bb4:	60da      	str	r2, [r3, #12]
 8003bb6:	3401      	adds	r4, #1
 8003bb8:	883b      	ldrh	r3, [r7, #0]
 8003bba:	42a3      	cmp	r3, r4
 8003bbc:	d923      	bls.n	8003c06 <ai_platform_network_process+0x446>
 8003bbe:	687b      	ldr	r3, [r7, #4]
 8003bc0:	b30b      	cbz	r3, 8003c06 <ai_platform_network_process+0x446>
 8003bc2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8003bc6:	b1f0      	cbz	r0, 8003c06 <ai_platform_network_process+0x446>
 8003bc8:	68ba      	ldr	r2, [r7, #8]
 8003bca:	6983      	ldr	r3, [r0, #24]
 8003bcc:	f8d2 9000 	ldr.w	r9, [r2]
 8003bd0:	681a      	ldr	r2, [r3, #0]
 8003bd2:	0092      	lsls	r2, r2, #2
 8003bd4:	ea4f 1a04 	mov.w	sl, r4, lsl #4
 8003bd8:	eb09 1804 	add.w	r8, r9, r4, lsl #4
 8003bdc:	d5d5      	bpl.n	8003b8a <ai_platform_network_process+0x3ca>
 8003bde:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8003be2:	6899      	ldr	r1, [r3, #8]
 8003be4:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8003be8:	f001 fb04 	bl	80051f4 <memcpy>
 8003bec:	e9d8 3101 	ldrd	r3, r1, [r8, #4]
 8003bf0:	f859 200a 	ldr.w	r2, [r9, sl]
 8003bf4:	440b      	add	r3, r1
 8003bf6:	4293      	cmp	r3, r2
 8003bf8:	bf24      	itt	cs
 8003bfa:	f8d8 300c 	ldrcs.w	r3, [r8, #12]
 8003bfe:	1ad3      	subcs	r3, r2, r3
 8003c00:	f8c8 3004 	str.w	r3, [r8, #4]
 8003c04:	e7d7      	b.n	8003bb6 <ai_platform_network_process+0x3f6>
 8003c06:	f8bb 4016 	ldrh.w	r4, [fp, #22]
 8003c0a:	f8bb 3014 	ldrh.w	r3, [fp, #20]
 8003c0e:	3401      	adds	r4, #1
 8003c10:	b2a4      	uxth	r4, r4
 8003c12:	42a3      	cmp	r3, r4
 8003c14:	f8ab 4016 	strh.w	r4, [fp, #22]
 8003c18:	f63f af7d 	bhi.w	8003b16 <ai_platform_network_process+0x356>
 8003c1c:	4620      	mov	r0, r4
 8003c1e:	b005      	add	sp, #20
 8003c20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c24:	2a01      	cmp	r2, #1
 8003c26:	6b2e      	ldr	r6, [r5, #48]	; 0x30
 8003c28:	d03c      	beq.n	8003ca4 <ai_platform_network_process+0x4e4>
 8003c2a:	f106 070c 	add.w	r7, r6, #12
 8003c2e:	e76d      	b.n	8003b0c <ai_platform_network_process+0x34c>
 8003c30:	4625      	mov	r5, r4
 8003c32:	2218      	movs	r2, #24
 8003c34:	2113      	movs	r1, #19
 8003c36:	f105 0010 	add.w	r0, r5, #16
 8003c3a:	f000 f84f 	bl	8003cdc <core_set_error>
 8003c3e:	2400      	movs	r4, #0
 8003c40:	e72b      	b.n	8003a9a <ai_platform_network_process+0x2da>
 8003c42:	9d02      	ldr	r5, [sp, #8]
 8003c44:	4604      	mov	r4, r0
 8003c46:	2221      	movs	r2, #33	; 0x21
 8003c48:	2112      	movs	r1, #18
 8003c4a:	f105 0010 	add.w	r0, r5, #16
 8003c4e:	f000 f845 	bl	8003cdc <core_set_error>
 8003c52:	e722      	b.n	8003a9a <ai_platform_network_process+0x2da>
 8003c54:	9d02      	ldr	r5, [sp, #8]
 8003c56:	e719      	b.n	8003a8c <ai_platform_network_process+0x2cc>
 8003c58:	9d02      	ldr	r5, [sp, #8]
 8003c5a:	4604      	mov	r4, r0
 8003c5c:	2217      	movs	r2, #23
 8003c5e:	2112      	movs	r1, #18
 8003c60:	f105 0010 	add.w	r0, r5, #16
 8003c64:	f000 f83a 	bl	8003cdc <core_set_error>
 8003c68:	e717      	b.n	8003a9a <ai_platform_network_process+0x2da>
 8003c6a:	9d02      	ldr	r5, [sp, #8]
 8003c6c:	2219      	movs	r2, #25
 8003c6e:	2112      	movs	r1, #18
 8003c70:	f105 0010 	add.w	r0, r5, #16
 8003c74:	f000 f832 	bl	8003cdc <core_set_error>
 8003c78:	2400      	movs	r4, #0
 8003c7a:	e70e      	b.n	8003a9a <ai_platform_network_process+0x2da>
 8003c7c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8003c80:	82ab      	strh	r3, [r5, #20]
 8003c82:	e73e      	b.n	8003b02 <ai_platform_network_process+0x342>
 8003c84:	f104 0010 	add.w	r0, r4, #16
 8003c88:	2219      	movs	r2, #25
 8003c8a:	2113      	movs	r1, #19
 8003c8c:	f000 f826 	bl	8003cdc <core_set_error>
 8003c90:	2400      	movs	r4, #0
 8003c92:	e702      	b.n	8003a9a <ai_platform_network_process+0x2da>
 8003c94:	f104 0010 	add.w	r0, r4, #16
 8003c98:	2217      	movs	r2, #23
 8003c9a:	2113      	movs	r1, #19
 8003c9c:	f000 f81e 	bl	8003cdc <core_set_error>
 8003ca0:	4654      	mov	r4, sl
 8003ca2:	e6fa      	b.n	8003a9a <ai_platform_network_process+0x2da>
 8003ca4:	2700      	movs	r7, #0
 8003ca6:	e731      	b.n	8003b0c <ai_platform_network_process+0x34c>
 8003ca8:	4625      	mov	r5, r4
 8003caa:	2221      	movs	r2, #33	; 0x21
 8003cac:	4604      	mov	r4, r0
 8003cae:	2113      	movs	r1, #19
 8003cb0:	f105 0010 	add.w	r0, r5, #16
 8003cb4:	f000 f812 	bl	8003cdc <core_set_error>
 8003cb8:	e6ef      	b.n	8003a9a <ai_platform_network_process+0x2da>
 8003cba:	4625      	mov	r5, r4
 8003cbc:	2217      	movs	r2, #23
 8003cbe:	4604      	mov	r4, r0
 8003cc0:	2113      	movs	r1, #19
 8003cc2:	f105 0010 	add.w	r0, r5, #16
 8003cc6:	f000 f809 	bl	8003cdc <core_set_error>
 8003cca:	e6e6      	b.n	8003a9a <ai_platform_network_process+0x2da>

08003ccc <core_init>:
 8003ccc:	2001      	movs	r0, #1
 8003cce:	4770      	bx	lr

08003cd0 <core_get_error>:
 8003cd0:	4603      	mov	r3, r0
 8003cd2:	2200      	movs	r2, #0
 8003cd4:	6800      	ldr	r0, [r0, #0]
 8003cd6:	601a      	str	r2, [r3, #0]
 8003cd8:	4770      	bx	lr
 8003cda:	bf00      	nop

08003cdc <core_set_error>:
 8003cdc:	4603      	mov	r3, r0
 8003cde:	7800      	ldrb	r0, [r0, #0]
 8003ce0:	b108      	cbz	r0, 8003ce6 <core_set_error+0xa>
 8003ce2:	2000      	movs	r0, #0
 8003ce4:	4770      	bx	lr
 8003ce6:	7019      	strb	r1, [r3, #0]
 8003ce8:	6819      	ldr	r1, [r3, #0]
 8003cea:	f362 211f 	bfi	r1, r2, #8, #24
 8003cee:	2001      	movs	r0, #1
 8003cf0:	6019      	str	r1, [r3, #0]
 8003cf2:	4770      	bx	lr

08003cf4 <forward_dense>:
 8003cf4:	6983      	ldr	r3, [r0, #24]
 8003cf6:	881a      	ldrh	r2, [r3, #0]
 8003cf8:	2a00      	cmp	r2, #0
 8003cfa:	f000 8181 	beq.w	8004000 <forward_dense+0x30c>
 8003cfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d02:	ed2d 8b02 	vpush	{d8}
 8003d06:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8003d0a:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8003d0e:	b095      	sub	sp, #84	; 0x54
 8003d10:	b105      	cbz	r5, 8003d14 <forward_dense+0x20>
 8003d12:	682d      	ldr	r5, [r5, #0]
 8003d14:	2a01      	cmp	r2, #1
 8003d16:	f000 828f 	beq.w	8004238 <forward_dense+0x544>
 8003d1a:	f8dc 6010 	ldr.w	r6, [ip, #16]
 8003d1e:	b106      	cbz	r6, 8003d22 <forward_dense+0x2e>
 8003d20:	6836      	ldr	r6, [r6, #0]
 8003d22:	2a02      	cmp	r2, #2
 8003d24:	f000 816e 	beq.w	8004004 <forward_dense+0x310>
 8003d28:	f8dc 301c 	ldr.w	r3, [ip, #28]
 8003d2c:	930b      	str	r3, [sp, #44]	; 0x2c
 8003d2e:	2b00      	cmp	r3, #0
 8003d30:	f000 8274 	beq.w	800421c <forward_dense+0x528>
 8003d34:	4619      	mov	r1, r3
 8003d36:	f8bc 3018 	ldrh.w	r3, [ip, #24]
 8003d3a:	6809      	ldr	r1, [r1, #0]
 8003d3c:	910d      	str	r1, [sp, #52]	; 0x34
 8003d3e:	2b01      	cmp	r3, #1
 8003d40:	f240 826e 	bls.w	8004220 <forward_dense+0x52c>
 8003d44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003d46:	685b      	ldr	r3, [r3, #4]
 8003d48:	930b      	str	r3, [sp, #44]	; 0x2c
 8003d4a:	460b      	mov	r3, r1
 8003d4c:	68e8      	ldr	r0, [r5, #12]
 8003d4e:	68f7      	ldr	r7, [r6, #12]
 8003d50:	6840      	ldr	r0, [r0, #4]
 8003d52:	6999      	ldr	r1, [r3, #24]
 8003d54:	9013      	str	r0, [sp, #76]	; 0x4c
 8003d56:	6878      	ldr	r0, [r7, #4]
 8003d58:	680b      	ldr	r3, [r1, #0]
 8003d5a:	9012      	str	r0, [sp, #72]	; 0x48
 8003d5c:	e9d7 4702 	ldrd	r4, r7, [r7, #8]
 8003d60:	f3c3 1ec6 	ubfx	lr, r3, #7, #7
 8003d64:	fb00 f404 	mul.w	r4, r0, r4
 8003d68:	f3c3 5041 	ubfx	r0, r3, #21, #2
 8003d6c:	fa4e f000 	asr.w	r0, lr, r0
 8003d70:	2a03      	cmp	r2, #3
 8003d72:	9010      	str	r0, [sp, #64]	; 0x40
 8003d74:	f000 825d 	beq.w	8004232 <forward_dense+0x53e>
 8003d78:	f8dc 2028 	ldr.w	r2, [ip, #40]	; 0x28
 8003d7c:	f3c3 4343 	ubfx	r3, r3, #17, #4
 8003d80:	2a00      	cmp	r2, #0
 8003d82:	f000 8246 	beq.w	8004212 <forward_dense+0x51e>
 8003d86:	6812      	ldr	r2, [r2, #0]
 8003d88:	2a00      	cmp	r2, #0
 8003d8a:	f000 8242 	beq.w	8004212 <forward_dense+0x51e>
 8003d8e:	2b04      	cmp	r3, #4
 8003d90:	f8d2 9018 	ldr.w	r9, [r2, #24]
 8003d94:	f000 822c 	beq.w	80041f0 <forward_dense+0x4fc>
 8003d98:	2b08      	cmp	r3, #8
 8003d9a:	f000 8229 	beq.w	80041f0 <forward_dense+0x4fc>
 8003d9e:	f04f 0b00 	mov.w	fp, #0
 8003da2:	69b2      	ldr	r2, [r6, #24]
 8003da4:	69ab      	ldr	r3, [r5, #24]
 8003da6:	6891      	ldr	r1, [r2, #8]
 8003da8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003daa:	689b      	ldr	r3, [r3, #8]
 8003dac:	6952      	ldr	r2, [r2, #20]
 8003dae:	9106      	str	r1, [sp, #24]
 8003db0:	fb07 f404 	mul.w	r4, r7, r4
 8003db4:	f8d2 9004 	ldr.w	r9, [r2, #4]
 8003db8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003dba:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8003dbe:	4281      	cmp	r1, r0
 8003dc0:	ea4f 0482 	mov.w	r4, r2, lsl #2
 8003dc4:	900e      	str	r0, [sp, #56]	; 0x38
 8003dc6:	940c      	str	r4, [sp, #48]	; 0x30
 8003dc8:	eb01 0882 	add.w	r8, r1, r2, lsl #2
 8003dcc:	f080 8113 	bcs.w	8003ff6 <forward_dense+0x302>
 8003dd0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8003dd2:	ed9f 8a93 	vldr	s16, [pc, #588]	; 8004020 <forward_dense+0x32c>
 8003dd6:	f021 0201 	bic.w	r2, r1, #1
 8003dda:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8003dde:	9204      	str	r2, [sp, #16]
 8003de0:	f001 0201 	and.w	r2, r1, #1
 8003de4:	08c8      	lsrs	r0, r1, #3
 8003de6:	9208      	str	r2, [sp, #32]
 8003de8:	008a      	lsls	r2, r1, #2
 8003dea:	f001 0a07 	and.w	sl, r1, #7
 8003dee:	920f      	str	r2, [sp, #60]	; 0x3c
 8003df0:	eb03 1240 	add.w	r2, r3, r0, lsl #5
 8003df4:	3320      	adds	r3, #32
 8003df6:	465c      	mov	r4, fp
 8003df8:	9007      	str	r0, [sp, #28]
 8003dfa:	46cb      	mov	fp, r9
 8003dfc:	9205      	str	r2, [sp, #20]
 8003dfe:	9302      	str	r3, [sp, #8]
 8003e00:	46c1      	mov	r9, r8
 8003e02:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 8003e06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003e08:	699b      	ldr	r3, [r3, #24]
 8003e0a:	689a      	ldr	r2, [r3, #8]
 8003e0c:	9b02      	ldr	r3, [sp, #8]
 8003e0e:	3b20      	subs	r3, #32
 8003e10:	930a      	str	r3, [sp, #40]	; 0x28
 8003e12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003e14:	b10b      	cbz	r3, 8003e1a <forward_dense+0x126>
 8003e16:	699b      	ldr	r3, [r3, #24]
 8003e18:	689b      	ldr	r3, [r3, #8]
 8003e1a:	2c00      	cmp	r4, #0
 8003e1c:	f000 81da 	beq.w	80041d4 <forward_dense+0x4e0>
 8003e20:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003e22:	2904      	cmp	r1, #4
 8003e24:	9906      	ldr	r1, [sp, #24]
 8003e26:	f000 80fd 	beq.w	8004024 <forward_dense+0x330>
 8003e2a:	4549      	cmp	r1, r9
 8003e2c:	f080 80d2 	bcs.w	8003fd4 <forward_dense+0x2e0>
 8003e30:	460f      	mov	r7, r1
 8003e32:	9907      	ldr	r1, [sp, #28]
 8003e34:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8003e38:	f8dd a014 	ldr.w	sl, [sp, #20]
 8003e3c:	1c4e      	adds	r6, r1, #1
 8003e3e:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
 8003e42:	4694      	mov	ip, r2
 8003e44:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8003e46:	468e      	mov	lr, r1
 8003e48:	2b00      	cmp	r3, #0
 8003e4a:	f000 80de 	beq.w	800400a <forward_dense+0x316>
 8003e4e:	ecf3 2a01 	vldmia	r3!, {s5}
 8003e52:	ed9f 7a73 	vldr	s14, [pc, #460]	; 8004020 <forward_dense+0x32c>
 8003e56:	f1be 0f00 	cmp.w	lr, #0
 8003e5a:	f000 80de 	beq.w	800401a <forward_dense+0x326>
 8003e5e:	f10c 0108 	add.w	r1, ip, #8
 8003e62:	4640      	mov	r0, r8
 8003e64:	f811 5c07 	ldrb.w	r5, [r1, #-7]
 8003e68:	ed10 3a07 	vldr	s6, [r0, #-28]	; 0xffffffe4
 8003e6c:	ed50 3a08 	vldr	s7, [r0, #-32]	; 0xffffffe0
 8003e70:	ed10 4a06 	vldr	s8, [r0, #-24]	; 0xffffffe8
 8003e74:	ed50 4a05 	vldr	s9, [r0, #-20]	; 0xffffffec
 8003e78:	ed10 5a04 	vldr	s10, [r0, #-16]
 8003e7c:	ed50 5a03 	vldr	s11, [r0, #-12]
 8003e80:	ed10 6a02 	vldr	s12, [r0, #-8]
 8003e84:	ed50 6a01 	vldr	s13, [r0, #-4]
 8003e88:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003e8c:	edd5 7a00 	vldr	s15, [r5]
 8003e90:	f811 5c08 	ldrb.w	r5, [r1, #-8]
 8003e94:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003e98:	ee67 7a83 	vmul.f32	s15, s15, s6
 8003e9c:	ed95 3a00 	vldr	s6, [r5]
 8003ea0:	f811 5c06 	ldrb.w	r5, [r1, #-6]
 8003ea4:	eee3 7a23 	vfma.f32	s15, s6, s7
 8003ea8:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003eac:	3108      	adds	r1, #8
 8003eae:	edd5 3a00 	vldr	s7, [r5]
 8003eb2:	f811 5c0d 	ldrb.w	r5, [r1, #-13]
 8003eb6:	eee3 7a84 	vfma.f32	s15, s7, s8
 8003eba:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003ebe:	3020      	adds	r0, #32
 8003ec0:	ed95 4a00 	vldr	s8, [r5]
 8003ec4:	f811 5c0c 	ldrb.w	r5, [r1, #-12]
 8003ec8:	eee4 7a24 	vfma.f32	s15, s8, s9
 8003ecc:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003ed0:	edd5 4a00 	vldr	s9, [r5]
 8003ed4:	f811 5c0b 	ldrb.w	r5, [r1, #-11]
 8003ed8:	eee4 7a85 	vfma.f32	s15, s9, s10
 8003edc:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003ee0:	ed95 5a00 	vldr	s10, [r5]
 8003ee4:	f811 5c0a 	ldrb.w	r5, [r1, #-10]
 8003ee8:	eee5 7a25 	vfma.f32	s15, s10, s11
 8003eec:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003ef0:	edd5 5a00 	vldr	s11, [r5]
 8003ef4:	f811 5c09 	ldrb.w	r5, [r1, #-9]
 8003ef8:	eee5 7a86 	vfma.f32	s15, s11, s12
 8003efc:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003f00:	428e      	cmp	r6, r1
 8003f02:	ed95 6a00 	vldr	s12, [r5]
 8003f06:	eee6 7a26 	vfma.f32	s15, s12, s13
 8003f0a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8003f0e:	d1a9      	bne.n	8003e64 <forward_dense+0x170>
 8003f10:	f1a6 0108 	sub.w	r1, r6, #8
 8003f14:	4650      	mov	r0, sl
 8003f16:	2a00      	cmp	r2, #0
 8003f18:	d04a      	beq.n	8003fb0 <forward_dense+0x2bc>
 8003f1a:	780d      	ldrb	r5, [r1, #0]
 8003f1c:	edd0 6a00 	vldr	s13, [r0]
 8003f20:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003f24:	edd5 7a00 	vldr	s15, [r5]
 8003f28:	2a01      	cmp	r2, #1
 8003f2a:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003f2e:	d03f      	beq.n	8003fb0 <forward_dense+0x2bc>
 8003f30:	784d      	ldrb	r5, [r1, #1]
 8003f32:	edd0 6a01 	vldr	s13, [r0, #4]
 8003f36:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003f3a:	edd5 7a00 	vldr	s15, [r5]
 8003f3e:	2a02      	cmp	r2, #2
 8003f40:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003f44:	d034      	beq.n	8003fb0 <forward_dense+0x2bc>
 8003f46:	788d      	ldrb	r5, [r1, #2]
 8003f48:	edd0 6a02 	vldr	s13, [r0, #8]
 8003f4c:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003f50:	edd5 7a00 	vldr	s15, [r5]
 8003f54:	2a03      	cmp	r2, #3
 8003f56:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003f5a:	d029      	beq.n	8003fb0 <forward_dense+0x2bc>
 8003f5c:	78cd      	ldrb	r5, [r1, #3]
 8003f5e:	edd0 6a03 	vldr	s13, [r0, #12]
 8003f62:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003f66:	edd5 7a00 	vldr	s15, [r5]
 8003f6a:	2a04      	cmp	r2, #4
 8003f6c:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003f70:	d01e      	beq.n	8003fb0 <forward_dense+0x2bc>
 8003f72:	790d      	ldrb	r5, [r1, #4]
 8003f74:	edd0 6a04 	vldr	s13, [r0, #16]
 8003f78:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003f7c:	edd5 7a00 	vldr	s15, [r5]
 8003f80:	2a05      	cmp	r2, #5
 8003f82:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003f86:	d013      	beq.n	8003fb0 <forward_dense+0x2bc>
 8003f88:	794d      	ldrb	r5, [r1, #5]
 8003f8a:	edd0 6a05 	vldr	s13, [r0, #20]
 8003f8e:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003f92:	edd5 7a00 	vldr	s15, [r5]
 8003f96:	2a06      	cmp	r2, #6
 8003f98:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003f9c:	d008      	beq.n	8003fb0 <forward_dense+0x2bc>
 8003f9e:	7989      	ldrb	r1, [r1, #6]
 8003fa0:	edd0 7a06 	vldr	s15, [r0, #24]
 8003fa4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8003fa8:	edd1 6a00 	vldr	s13, [r1]
 8003fac:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003fb0:	44dc      	add	ip, fp
 8003fb2:	445e      	add	r6, fp
 8003fb4:	ee32 7a87 	vadd.f32	s14, s5, s14
 8003fb8:	eca7 7a01 	vstmia	r7!, {s14}
 8003fbc:	454f      	cmp	r7, r9
 8003fbe:	f4ff af43 	bcc.w	8003e48 <forward_dense+0x154>
 8003fc2:	9a06      	ldr	r2, [sp, #24]
 8003fc4:	eba9 0302 	sub.w	r3, r9, r2
 8003fc8:	3b01      	subs	r3, #1
 8003fca:	f023 0303 	bic.w	r3, r3, #3
 8003fce:	3304      	adds	r3, #4
 8003fd0:	18d3      	adds	r3, r2, r3
 8003fd2:	9306      	str	r3, [sp, #24]
 8003fd4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003fd6:	9a05      	ldr	r2, [sp, #20]
 8003fd8:	4499      	add	r9, r3
 8003fda:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003fdc:	441a      	add	r2, r3
 8003fde:	9205      	str	r2, [sp, #20]
 8003fe0:	9a02      	ldr	r2, [sp, #8]
 8003fe2:	441a      	add	r2, r3
 8003fe4:	9202      	str	r2, [sp, #8]
 8003fe6:	9a04      	ldr	r2, [sp, #16]
 8003fe8:	441a      	add	r2, r3
 8003fea:	9204      	str	r2, [sp, #16]
 8003fec:	9b06      	ldr	r3, [sp, #24]
 8003fee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003ff0:	4293      	cmp	r3, r2
 8003ff2:	f4ff af08 	bcc.w	8003e06 <forward_dense+0x112>
 8003ff6:	b015      	add	sp, #84	; 0x54
 8003ff8:	ecbd 8b02 	vpop	{d8}
 8003ffc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004000:	6853      	ldr	r3, [r2, #4]
 8004002:	deff      	udf	#255	; 0xff
 8004004:	2300      	movs	r3, #0
 8004006:	685b      	ldr	r3, [r3, #4]
 8004008:	deff      	udf	#255	; 0xff
 800400a:	ed9f 7a05 	vldr	s14, [pc, #20]	; 8004020 <forward_dense+0x32c>
 800400e:	eef0 2a48 	vmov.f32	s5, s16
 8004012:	f1be 0f00 	cmp.w	lr, #0
 8004016:	f47f af22 	bne.w	8003e5e <forward_dense+0x16a>
 800401a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800401c:	4661      	mov	r1, ip
 800401e:	e77a      	b.n	8003f16 <forward_dense+0x222>
 8004020:	00000000 	.word	0x00000000
 8004024:	4549      	cmp	r1, r9
 8004026:	d2d5      	bcs.n	8003fd4 <forward_dense+0x2e0>
 8004028:	9807      	ldr	r0, [sp, #28]
 800402a:	9103      	str	r1, [sp, #12]
 800402c:	9904      	ldr	r1, [sp, #16]
 800402e:	f100 0c01 	add.w	ip, r0, #1
 8004032:	3901      	subs	r1, #1
 8004034:	eb02 0c8c 	add.w	ip, r2, ip, lsl #2
 8004038:	9109      	str	r1, [sp, #36]	; 0x24
 800403a:	2b00      	cmp	r3, #0
 800403c:	f000 80b2 	beq.w	80041a4 <forward_dense+0x4b0>
 8004040:	9907      	ldr	r1, [sp, #28]
 8004042:	ecf3 2a01 	vldmia	r3!, {s5}
 8004046:	ed1f 7a0a 	vldr	s14, [pc, #-40]	; 8004020 <forward_dense+0x32c>
 800404a:	2900      	cmp	r1, #0
 800404c:	f000 80b2 	beq.w	80041b4 <forward_dense+0x4c0>
 8004050:	9902      	ldr	r1, [sp, #8]
 8004052:	1d10      	adds	r0, r2, #4
 8004054:	f810 6c04 	ldrb.w	r6, [r0, #-4]
 8004058:	ed11 2a07 	vldr	s4, [r1, #-28]	; 0xffffffe4
 800405c:	f810 5c03 	ldrb.w	r5, [r0, #-3]
 8004060:	ed51 3a08 	vldr	s7, [r1, #-32]	; 0xffffffe0
 8004064:	ed11 4a06 	vldr	s8, [r1, #-24]	; 0xffffffe8
 8004068:	ed51 4a05 	vldr	s9, [r1, #-20]	; 0xffffffec
 800406c:	ed11 5a04 	vldr	s10, [r1, #-16]
 8004070:	ed51 5a03 	vldr	s11, [r1, #-12]
 8004074:	ed11 6a02 	vldr	s12, [r1, #-8]
 8004078:	ed51 6a01 	vldr	s13, [r1, #-4]
 800407c:	f006 070f 	and.w	r7, r6, #15
 8004080:	eb04 0787 	add.w	r7, r4, r7, lsl #2
 8004084:	edd7 7a00 	vldr	s15, [r7]
 8004088:	0936      	lsrs	r6, r6, #4
 800408a:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 800408e:	ed96 3a00 	vldr	s6, [r6]
 8004092:	ee67 7a82 	vmul.f32	s15, s15, s4
 8004096:	092e      	lsrs	r6, r5, #4
 8004098:	eee3 7a23 	vfma.f32	s15, s6, s7
 800409c:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 80040a0:	f005 050f 	and.w	r5, r5, #15
 80040a4:	edd6 3a00 	vldr	s7, [r6]
 80040a8:	f810 6c02 	ldrb.w	r6, [r0, #-2]
 80040ac:	eee3 7a84 	vfma.f32	s15, s7, s8
 80040b0:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 80040b4:	0937      	lsrs	r7, r6, #4
 80040b6:	ed95 4a00 	vldr	s8, [r5]
 80040ba:	f810 5c01 	ldrb.w	r5, [r0, #-1]
 80040be:	eee4 7a24 	vfma.f32	s15, s8, s9
 80040c2:	eb04 0787 	add.w	r7, r4, r7, lsl #2
 80040c6:	f006 060f 	and.w	r6, r6, #15
 80040ca:	edd7 4a00 	vldr	s9, [r7]
 80040ce:	eee4 7a85 	vfma.f32	s15, s9, s10
 80040d2:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 80040d6:	3004      	adds	r0, #4
 80040d8:	ed96 5a00 	vldr	s10, [r6]
 80040dc:	092e      	lsrs	r6, r5, #4
 80040de:	eee5 7a25 	vfma.f32	s15, s10, s11
 80040e2:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 80040e6:	f005 050f 	and.w	r5, r5, #15
 80040ea:	edd6 5a00 	vldr	s11, [r6]
 80040ee:	eee5 7a86 	vfma.f32	s15, s11, s12
 80040f2:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 80040f6:	4584      	cmp	ip, r0
 80040f8:	ed95 6a00 	vldr	s12, [r5]
 80040fc:	eee6 7a26 	vfma.f32	s15, s12, s13
 8004100:	f101 0120 	add.w	r1, r1, #32
 8004104:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004108:	d1a4      	bne.n	8004054 <forward_dense+0x360>
 800410a:	f8dd e014 	ldr.w	lr, [sp, #20]
 800410e:	f1ac 0804 	sub.w	r8, ip, #4
 8004112:	9904      	ldr	r1, [sp, #16]
 8004114:	458e      	cmp	lr, r1
 8004116:	d22a      	bcs.n	800416e <forward_dense+0x47a>
 8004118:	9909      	ldr	r1, [sp, #36]	; 0x24
 800411a:	eba1 070e 	sub.w	r7, r1, lr
 800411e:	ea4f 0ad7 	mov.w	sl, r7, lsr #3
 8004122:	f10e 0008 	add.w	r0, lr, #8
 8004126:	f108 36ff 	add.w	r6, r8, #4294967295	; 0xffffffff
 800412a:	eb08 07d7 	add.w	r7, r8, r7, lsr #3
 800412e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8004132:	ed50 5a01 	vldr	s11, [r0, #-4]
 8004136:	ed50 6a02 	vldr	s13, [r0, #-8]
 800413a:	f001 050f 	and.w	r5, r1, #15
 800413e:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8004142:	edd5 7a00 	vldr	s15, [r5]
 8004146:	0909      	lsrs	r1, r1, #4
 8004148:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800414c:	ed91 6a00 	vldr	s12, [r1]
 8004150:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8004154:	42b7      	cmp	r7, r6
 8004156:	eee6 7a26 	vfma.f32	s15, s12, s13
 800415a:	f100 0008 	add.w	r0, r0, #8
 800415e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004162:	d1e4      	bne.n	800412e <forward_dense+0x43a>
 8004164:	f10a 0a01 	add.w	sl, sl, #1
 8004168:	44d0      	add	r8, sl
 800416a:	eb0e 0eca 	add.w	lr, lr, sl, lsl #3
 800416e:	9908      	ldr	r1, [sp, #32]
 8004170:	b321      	cbz	r1, 80041bc <forward_dense+0x4c8>
 8004172:	f898 1000 	ldrb.w	r1, [r8]
 8004176:	edde 7a00 	vldr	s15, [lr]
 800417a:	0909      	lsrs	r1, r1, #4
 800417c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8004180:	edd1 6a00 	vldr	s13, [r1]
 8004184:	9903      	ldr	r1, [sp, #12]
 8004186:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800418a:	445a      	add	r2, fp
 800418c:	44dc      	add	ip, fp
 800418e:	ee72 2a87 	vadd.f32	s5, s5, s14
 8004192:	ece1 2a01 	vstmia	r1!, {s5}
 8004196:	4589      	cmp	r9, r1
 8004198:	9103      	str	r1, [sp, #12]
 800419a:	f67f af12 	bls.w	8003fc2 <forward_dense+0x2ce>
 800419e:	2b00      	cmp	r3, #0
 80041a0:	f47f af4e 	bne.w	8004040 <forward_dense+0x34c>
 80041a4:	9907      	ldr	r1, [sp, #28]
 80041a6:	ed1f 7a62 	vldr	s14, [pc, #-392]	; 8004020 <forward_dense+0x32c>
 80041aa:	eef0 2a48 	vmov.f32	s5, s16
 80041ae:	2900      	cmp	r1, #0
 80041b0:	f47f af4e 	bne.w	8004050 <forward_dense+0x35c>
 80041b4:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
 80041b8:	4690      	mov	r8, r2
 80041ba:	e7aa      	b.n	8004112 <forward_dense+0x41e>
 80041bc:	9903      	ldr	r1, [sp, #12]
 80041be:	ee32 7a87 	vadd.f32	s14, s5, s14
 80041c2:	445a      	add	r2, fp
 80041c4:	eca1 7a01 	vstmia	r1!, {s14}
 80041c8:	4549      	cmp	r1, r9
 80041ca:	9103      	str	r1, [sp, #12]
 80041cc:	44dc      	add	ip, fp
 80041ce:	f4ff af34 	bcc.w	800403a <forward_dense+0x346>
 80041d2:	e6f6      	b.n	8003fc2 <forward_dense+0x2ce>
 80041d4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80041d6:	9d06      	ldr	r5, [sp, #24]
 80041d8:	9101      	str	r1, [sp, #4]
 80041da:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80041dc:	9100      	str	r1, [sp, #0]
 80041de:	4628      	mov	r0, r5
 80041e0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80041e2:	f000 fa85 	bl	80046f0 <lite_dense_if32of32wf32>
 80041e6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80041e8:	462b      	mov	r3, r5
 80041ea:	4413      	add	r3, r2
 80041ec:	9306      	str	r3, [sp, #24]
 80041ee:	e6f1      	b.n	8003fd4 <forward_dense+0x2e0>
 80041f0:	f8d1 800c 	ldr.w	r8, [r1, #12]
 80041f4:	f1b9 0f00 	cmp.w	r9, #0
 80041f8:	d016      	beq.n	8004228 <forward_dense+0x534>
 80041fa:	e9d9 0100 	ldrd	r0, r1, [r9]
 80041fe:	f000 fc25 	bl	8004a4c <ai_array_get_byte_size>
 8004202:	f8d9 b00c 	ldr.w	fp, [r9, #12]
 8004206:	4602      	mov	r2, r0
 8004208:	4641      	mov	r1, r8
 800420a:	4658      	mov	r0, fp
 800420c:	f000 fff2 	bl	80051f4 <memcpy>
 8004210:	e5c7      	b.n	8003da2 <forward_dense+0xae>
 8004212:	2b04      	cmp	r3, #4
 8004214:	d00a      	beq.n	800422c <forward_dense+0x538>
 8004216:	f04f 0900 	mov.w	r9, #0
 800421a:	e5bd      	b.n	8003d98 <forward_dense+0xa4>
 800421c:	930d      	str	r3, [sp, #52]	; 0x34
 800421e:	e595      	b.n	8003d4c <forward_dense+0x58>
 8004220:	2300      	movs	r3, #0
 8004222:	930b      	str	r3, [sp, #44]	; 0x2c
 8004224:	460b      	mov	r3, r1
 8004226:	e591      	b.n	8003d4c <forward_dense+0x58>
 8004228:	46c3      	mov	fp, r8
 800422a:	e5ba      	b.n	8003da2 <forward_dense+0xae>
 800422c:	f8d1 b00c 	ldr.w	fp, [r1, #12]
 8004230:	e5b7      	b.n	8003da2 <forward_dense+0xae>
 8004232:	2300      	movs	r3, #0
 8004234:	685b      	ldr	r3, [r3, #4]
 8004236:	deff      	udf	#255	; 0xff
 8004238:	2300      	movs	r3, #0
 800423a:	685b      	ldr	r3, [r3, #4]
 800423c:	deff      	udf	#255	; 0xff
 800423e:	bf00      	nop

08004240 <forward_relu>:
 8004240:	6982      	ldr	r2, [r0, #24]
 8004242:	8813      	ldrh	r3, [r2, #0]
 8004244:	2b00      	cmp	r3, #0
 8004246:	d05b      	beq.n	8004300 <forward_relu+0xc0>
 8004248:	6851      	ldr	r1, [r2, #4]
 800424a:	684a      	ldr	r2, [r1, #4]
 800424c:	b102      	cbz	r2, 8004250 <forward_relu+0x10>
 800424e:	6812      	ldr	r2, [r2, #0]
 8004250:	2b01      	cmp	r3, #1
 8004252:	f000 8123 	beq.w	800449c <forward_relu+0x25c>
 8004256:	b470      	push	{r4, r5, r6}
 8004258:	6909      	ldr	r1, [r1, #16]
 800425a:	b101      	cbz	r1, 800425e <forward_relu+0x1e>
 800425c:	6809      	ldr	r1, [r1, #0]
 800425e:	69c6      	ldr	r6, [r0, #28]
 8004260:	2e00      	cmp	r6, #0
 8004262:	f000 8097 	beq.w	8004394 <forward_relu+0x154>
 8004266:	6873      	ldr	r3, [r6, #4]
 8004268:	6988      	ldr	r0, [r1, #24]
 800426a:	6991      	ldr	r1, [r2, #24]
 800426c:	2b01      	cmp	r3, #1
 800426e:	f000 80c1 	beq.w	80043f4 <forward_relu+0x1b4>
 8004272:	6893      	ldr	r3, [r2, #8]
 8004274:	6880      	ldr	r0, [r0, #8]
 8004276:	688c      	ldr	r4, [r1, #8]
 8004278:	0a1b      	lsrs	r3, r3, #8
 800427a:	f000 80f2 	beq.w	8004462 <forward_relu+0x222>
 800427e:	68d5      	ldr	r5, [r2, #12]
 8004280:	2201      	movs	r2, #1
 8004282:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8004286:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800428a:	42ab      	cmp	r3, r5
 800428c:	fb01 f202 	mul.w	r2, r1, r2
 8004290:	d1f9      	bne.n	8004286 <forward_relu+0x46>
 8004292:	68b3      	ldr	r3, [r6, #8]
 8004294:	ed93 7a02 	vldr	s14, [r3, #8]
 8004298:	edd3 6a00 	vldr	s13, [r3]
 800429c:	ed93 6a01 	vldr	s12, [r3, #4]
 80042a0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80042a4:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 80042a8:	3a01      	subs	r2, #1
 80042aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042ae:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80042b2:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 80042b6:	d425      	bmi.n	8004304 <forward_relu+0xc4>
 80042b8:	429c      	cmp	r4, r3
 80042ba:	d81f      	bhi.n	80042fc <forward_relu+0xbc>
 80042bc:	1d1a      	adds	r2, r3, #4
 80042be:	1d01      	adds	r1, r0, #4
 80042c0:	e00d      	b.n	80042de <forward_relu+0x9e>
 80042c2:	eef4 6ae7 	vcmpe.f32	s13, s15
 80042c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042ca:	db03      	blt.n	80042d4 <forward_relu+0x94>
 80042cc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80042d0:	ee67 7a86 	vmul.f32	s15, s15, s12
 80042d4:	3b08      	subs	r3, #8
 80042d6:	429c      	cmp	r4, r3
 80042d8:	ed61 7a01 	vstmdb	r1!, {s15}
 80042dc:	d80e      	bhi.n	80042fc <forward_relu+0xbc>
 80042de:	4613      	mov	r3, r2
 80042e0:	ed72 7a01 	vldmdb	r2!, {s15}
 80042e4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80042e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042ec:	d9e9      	bls.n	80042c2 <forward_relu+0x82>
 80042ee:	3b08      	subs	r3, #8
 80042f0:	eef0 7a47 	vmov.f32	s15, s14
 80042f4:	429c      	cmp	r4, r3
 80042f6:	ed61 7a01 	vstmdb	r1!, {s15}
 80042fa:	d9f0      	bls.n	80042de <forward_relu+0x9e>
 80042fc:	bc70      	pop	{r4, r5, r6}
 80042fe:	4770      	bx	lr
 8004300:	685b      	ldr	r3, [r3, #4]
 8004302:	deff      	udf	#255	; 0xff
 8004304:	eeb5 6a40 	vcmp.f32	s12, #0.0
 8004308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800430c:	d11f      	bne.n	800434e <forward_relu+0x10e>
 800430e:	429c      	cmp	r4, r3
 8004310:	d8f4      	bhi.n	80042fc <forward_relu+0xbc>
 8004312:	1b1c      	subs	r4, r3, r4
 8004314:	f024 0403 	bic.w	r4, r4, #3
 8004318:	1d1a      	adds	r2, r3, #4
 800431a:	2500      	movs	r5, #0
 800431c:	1b1b      	subs	r3, r3, r4
 800431e:	1d01      	adds	r1, r0, #4
 8004320:	ed72 7a01 	vldmdb	r2!, {s15}
 8004324:	eef4 7ae6 	vcmpe.f32	s15, s13
 8004328:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800432c:	dc0a      	bgt.n	8004344 <forward_relu+0x104>
 800432e:	429a      	cmp	r2, r3
 8004330:	f841 5d04 	str.w	r5, [r1, #-4]!
 8004334:	d0e2      	beq.n	80042fc <forward_relu+0xbc>
 8004336:	ed72 7a01 	vldmdb	r2!, {s15}
 800433a:	eef4 7ae6 	vcmpe.f32	s15, s13
 800433e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004342:	ddf4      	ble.n	800432e <forward_relu+0xee>
 8004344:	429a      	cmp	r2, r3
 8004346:	ed61 7a01 	vstmdb	r1!, {s15}
 800434a:	d1e9      	bne.n	8004320 <forward_relu+0xe0>
 800434c:	e7d6      	b.n	80042fc <forward_relu+0xbc>
 800434e:	429c      	cmp	r4, r3
 8004350:	d8d4      	bhi.n	80042fc <forward_relu+0xbc>
 8004352:	1b1c      	subs	r4, r3, r4
 8004354:	f024 0403 	bic.w	r4, r4, #3
 8004358:	1d1a      	adds	r2, r3, #4
 800435a:	1d01      	adds	r1, r0, #4
 800435c:	1b1b      	subs	r3, r3, r4
 800435e:	ed72 7a01 	vldmdb	r2!, {s15}
 8004362:	eef4 6ae7 	vcmpe.f32	s13, s15
 8004366:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800436a:	db0e      	blt.n	800438a <forward_relu+0x14a>
 800436c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004370:	4293      	cmp	r3, r2
 8004372:	ee67 7a86 	vmul.f32	s15, s15, s12
 8004376:	ed61 7a01 	vstmdb	r1!, {s15}
 800437a:	d0bf      	beq.n	80042fc <forward_relu+0xbc>
 800437c:	ed72 7a01 	vldmdb	r2!, {s15}
 8004380:	eef4 6ae7 	vcmpe.f32	s13, s15
 8004384:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004388:	daf0      	bge.n	800436c <forward_relu+0x12c>
 800438a:	4293      	cmp	r3, r2
 800438c:	ed61 7a01 	vstmdb	r1!, {s15}
 8004390:	d1e5      	bne.n	800435e <forward_relu+0x11e>
 8004392:	e7b3      	b.n	80042fc <forward_relu+0xbc>
 8004394:	6893      	ldr	r3, [r2, #8]
 8004396:	6989      	ldr	r1, [r1, #24]
 8004398:	6990      	ldr	r0, [r2, #24]
 800439a:	6889      	ldr	r1, [r1, #8]
 800439c:	6884      	ldr	r4, [r0, #8]
 800439e:	0a1b      	lsrs	r3, r3, #8
 80043a0:	d075      	beq.n	800448e <forward_relu+0x24e>
 80043a2:	68d5      	ldr	r5, [r2, #12]
 80043a4:	2201      	movs	r2, #1
 80043a6:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80043aa:	f853 0d04 	ldr.w	r0, [r3, #-4]!
 80043ae:	429d      	cmp	r5, r3
 80043b0:	fb00 f202 	mul.w	r2, r0, r2
 80043b4:	d1f9      	bne.n	80043aa <forward_relu+0x16a>
 80043b6:	f102 4380 	add.w	r3, r2, #1073741824	; 0x40000000
 80043ba:	3b01      	subs	r3, #1
 80043bc:	eb04 0283 	add.w	r2, r4, r3, lsl #2
 80043c0:	4294      	cmp	r4, r2
 80043c2:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80043c6:	d899      	bhi.n	80042fc <forward_relu+0xbc>
 80043c8:	ed9f 7a36 	vldr	s14, [pc, #216]	; 80044a4 <forward_relu+0x264>
 80043cc:	3204      	adds	r2, #4
 80043ce:	3104      	adds	r1, #4
 80043d0:	4613      	mov	r3, r2
 80043d2:	ed72 7a01 	vldmdb	r2!, {s15}
 80043d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043de:	f1a3 0308 	sub.w	r3, r3, #8
 80043e2:	bfb8      	it	lt
 80043e4:	eef0 7a47 	vmovlt.f32	s15, s14
 80043e8:	429c      	cmp	r4, r3
 80043ea:	ed61 7a01 	vstmdb	r1!, {s15}
 80043ee:	d9ef      	bls.n	80043d0 <forward_relu+0x190>
 80043f0:	bc70      	pop	{r4, r5, r6}
 80043f2:	4770      	bx	lr
 80043f4:	688c      	ldr	r4, [r1, #8]
 80043f6:	6891      	ldr	r1, [r2, #8]
 80043f8:	6880      	ldr	r0, [r0, #8]
 80043fa:	0a09      	lsrs	r1, r1, #8
 80043fc:	d049      	beq.n	8004492 <forward_relu+0x252>
 80043fe:	68d5      	ldr	r5, [r2, #12]
 8004400:	eb05 0281 	add.w	r2, r5, r1, lsl #2
 8004404:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8004408:	42aa      	cmp	r2, r5
 800440a:	fb01 f303 	mul.w	r3, r1, r3
 800440e:	d1f9      	bne.n	8004404 <forward_relu+0x1c4>
 8004410:	f103 4280 	add.w	r2, r3, #1073741824	; 0x40000000
 8004414:	3a01      	subs	r2, #1
 8004416:	68b1      	ldr	r1, [r6, #8]
 8004418:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800441c:	429c      	cmp	r4, r3
 800441e:	ed91 7a00 	vldr	s14, [r1]
 8004422:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8004426:	f63f af69 	bhi.w	80042fc <forward_relu+0xbc>
 800442a:	2500      	movs	r5, #0
 800442c:	3304      	adds	r3, #4
 800442e:	1d02      	adds	r2, r0, #4
 8004430:	ed53 7a01 	vldr	s15, [r3, #-4]
 8004434:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8004438:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800443c:	f1a3 0104 	sub.w	r1, r3, #4
 8004440:	f1a3 0308 	sub.w	r3, r3, #8
 8004444:	d406      	bmi.n	8004454 <forward_relu+0x214>
 8004446:	429c      	cmp	r4, r3
 8004448:	f842 5d04 	str.w	r5, [r2, #-4]!
 800444c:	f63f af56 	bhi.w	80042fc <forward_relu+0xbc>
 8004450:	460b      	mov	r3, r1
 8004452:	e7ed      	b.n	8004430 <forward_relu+0x1f0>
 8004454:	429c      	cmp	r4, r3
 8004456:	ed62 7a01 	vstmdb	r2!, {s15}
 800445a:	f63f af4f 	bhi.w	80042fc <forward_relu+0xbc>
 800445e:	460b      	mov	r3, r1
 8004460:	e7e6      	b.n	8004430 <forward_relu+0x1f0>
 8004462:	68b3      	ldr	r3, [r6, #8]
 8004464:	ed93 7a02 	vldr	s14, [r3, #8]
 8004468:	edd3 6a00 	vldr	s13, [r3]
 800446c:	ed93 6a01 	vldr	s12, [r3, #4]
 8004470:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8004474:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004478:	d401      	bmi.n	800447e <forward_relu+0x23e>
 800447a:	4623      	mov	r3, r4
 800447c:	e71e      	b.n	80042bc <forward_relu+0x7c>
 800447e:	eeb5 6a40 	vcmp.f32	s12, #0.0
 8004482:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004486:	4623      	mov	r3, r4
 8004488:	f47f af63 	bne.w	8004352 <forward_relu+0x112>
 800448c:	e741      	b.n	8004312 <forward_relu+0xd2>
 800448e:	4622      	mov	r2, r4
 8004490:	e79a      	b.n	80043c8 <forward_relu+0x188>
 8004492:	68b2      	ldr	r2, [r6, #8]
 8004494:	4623      	mov	r3, r4
 8004496:	ed92 7a00 	vldr	s14, [r2]
 800449a:	e7c6      	b.n	800442a <forward_relu+0x1ea>
 800449c:	2300      	movs	r3, #0
 800449e:	685b      	ldr	r3, [r3, #4]
 80044a0:	deff      	udf	#255	; 0xff
 80044a2:	bf00      	nop
 80044a4:	00000000 	.word	0x00000000

080044a8 <forward_sm>:
 80044a8:	6982      	ldr	r2, [r0, #24]
 80044aa:	8813      	ldrh	r3, [r2, #0]
 80044ac:	2b00      	cmp	r3, #0
 80044ae:	d07c      	beq.n	80045aa <forward_sm+0x102>
 80044b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044b4:	ed2d 8b04 	vpush	{d8-d9}
 80044b8:	6852      	ldr	r2, [r2, #4]
 80044ba:	6854      	ldr	r4, [r2, #4]
 80044bc:	b085      	sub	sp, #20
 80044be:	b104      	cbz	r4, 80044c2 <forward_sm+0x1a>
 80044c0:	6824      	ldr	r4, [r4, #0]
 80044c2:	2b01      	cmp	r3, #1
 80044c4:	d076      	beq.n	80045b4 <forward_sm+0x10c>
 80044c6:	6913      	ldr	r3, [r2, #16]
 80044c8:	2b00      	cmp	r3, #0
 80044ca:	d076      	beq.n	80045ba <forward_sm+0x112>
 80044cc:	681e      	ldr	r6, [r3, #0]
 80044ce:	68a3      	ldr	r3, [r4, #8]
 80044d0:	68e0      	ldr	r0, [r4, #12]
 80044d2:	68f2      	ldr	r2, [r6, #12]
 80044d4:	6845      	ldr	r5, [r0, #4]
 80044d6:	6857      	ldr	r7, [r2, #4]
 80044d8:	0a1b      	lsrs	r3, r3, #8
 80044da:	d068      	beq.n	80045ae <forward_sm+0x106>
 80044dc:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80044e0:	2201      	movs	r2, #1
 80044e2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80044e6:	4298      	cmp	r0, r3
 80044e8:	fb01 f202 	mul.w	r2, r1, r2
 80044ec:	d1f9      	bne.n	80044e2 <forward_sm+0x3a>
 80044ee:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80044f2:	69a2      	ldr	r2, [r4, #24]
 80044f4:	69b3      	ldr	r3, [r6, #24]
 80044f6:	6892      	ldr	r2, [r2, #8]
 80044f8:	f8d3 8008 	ldr.w	r8, [r3, #8]
 80044fc:	eb02 0309 	add.w	r3, r2, r9
 8004500:	429a      	cmp	r2, r3
 8004502:	9301      	str	r3, [sp, #4]
 8004504:	d24c      	bcs.n	80045a0 <forward_sm+0xf8>
 8004506:	00bb      	lsls	r3, r7, #2
 8004508:	9303      	str	r3, [sp, #12]
 800450a:	eb02 0785 	add.w	r7, r2, r5, lsl #2
 800450e:	00ab      	lsls	r3, r5, #2
 8004510:	2d01      	cmp	r5, #1
 8004512:	ed92 8a00 	vldr	s16, [r2]
 8004516:	9302      	str	r3, [sp, #8]
 8004518:	eeb7 9a00 	vmov.f32	s18, #112	; 0x3f800000  1.0
 800451c:	463e      	mov	r6, r7
 800451e:	d93c      	bls.n	800459a <forward_sm+0xf2>
 8004520:	1d13      	adds	r3, r2, #4
 8004522:	ecf3 7a01 	vldmia	r3!, {s15}
 8004526:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800452a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800452e:	bfb8      	it	lt
 8004530:	eeb0 8a67 	vmovlt.f32	s16, s15
 8004534:	429e      	cmp	r6, r3
 8004536:	d1f4      	bne.n	8004522 <forward_sm+0x7a>
 8004538:	eddf 8a21 	vldr	s17, [pc, #132]	; 80045c0 <forward_sm+0x118>
 800453c:	4692      	mov	sl, r2
 800453e:	46c3      	mov	fp, r8
 8004540:	46c1      	mov	r9, r8
 8004542:	2400      	movs	r4, #0
 8004544:	ecba 0a01 	vldmia	sl!, {s0}
 8004548:	ee30 0a48 	vsub.f32	s0, s0, s16
 800454c:	f000 fab8 	bl	8004ac0 <expf>
 8004550:	3401      	adds	r4, #1
 8004552:	42a5      	cmp	r5, r4
 8004554:	ee78 8a80 	vadd.f32	s17, s17, s0
 8004558:	eca9 0a01 	vstmia	r9!, {s0}
 800455c:	d8f2      	bhi.n	8004544 <forward_sm+0x9c>
 800455e:	eef5 8a40 	vcmp.f32	s17, #0.0
 8004562:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004566:	d00b      	beq.n	8004580 <forward_sm+0xd8>
 8004568:	ee89 7a28 	vdiv.f32	s14, s18, s17
 800456c:	2300      	movs	r3, #0
 800456e:	3301      	adds	r3, #1
 8004570:	429d      	cmp	r5, r3
 8004572:	eddb 7a00 	vldr	s15, [fp]
 8004576:	ee67 7a27 	vmul.f32	s15, s14, s15
 800457a:	eceb 7a01 	vstmia	fp!, {s15}
 800457e:	d8f6      	bhi.n	800456e <forward_sm+0xc6>
 8004580:	9b03      	ldr	r3, [sp, #12]
 8004582:	9901      	ldr	r1, [sp, #4]
 8004584:	4498      	add	r8, r3
 8004586:	9b02      	ldr	r3, [sp, #8]
 8004588:	42b9      	cmp	r1, r7
 800458a:	463a      	mov	r2, r7
 800458c:	441e      	add	r6, r3
 800458e:	d907      	bls.n	80045a0 <forward_sm+0xf8>
 8004590:	2d01      	cmp	r5, #1
 8004592:	ed92 8a00 	vldr	s16, [r2]
 8004596:	441f      	add	r7, r3
 8004598:	d8c2      	bhi.n	8004520 <forward_sm+0x78>
 800459a:	2d00      	cmp	r5, #0
 800459c:	d0f0      	beq.n	8004580 <forward_sm+0xd8>
 800459e:	e7cb      	b.n	8004538 <forward_sm+0x90>
 80045a0:	b005      	add	sp, #20
 80045a2:	ecbd 8b04 	vpop	{d8-d9}
 80045a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80045aa:	685b      	ldr	r3, [r3, #4]
 80045ac:	deff      	udf	#255	; 0xff
 80045ae:	f04f 0904 	mov.w	r9, #4
 80045b2:	e79e      	b.n	80044f2 <forward_sm+0x4a>
 80045b4:	2300      	movs	r3, #0
 80045b6:	685b      	ldr	r3, [r3, #4]
 80045b8:	deff      	udf	#255	; 0xff
 80045ba:	68db      	ldr	r3, [r3, #12]
 80045bc:	deff      	udf	#255	; 0xff
 80045be:	bf00      	nop
 80045c0:	00000000 	.word	0x00000000

080045c4 <ai_check_custom_types>:
 80045c4:	b082      	sub	sp, #8
 80045c6:	4b13      	ldr	r3, [pc, #76]	; (8004614 <ai_check_custom_types+0x50>)
 80045c8:	9301      	str	r3, [sp, #4]
 80045ca:	b118      	cbz	r0, 80045d4 <ai_check_custom_types+0x10>
 80045cc:	7803      	ldrb	r3, [r0, #0]
 80045ce:	2b03      	cmp	r3, #3
 80045d0:	d002      	beq.n	80045d8 <ai_check_custom_types+0x14>
 80045d2:	2000      	movs	r0, #0
 80045d4:	b002      	add	sp, #8
 80045d6:	4770      	bx	lr
 80045d8:	f89d 2004 	ldrb.w	r2, [sp, #4]
 80045dc:	4293      	cmp	r3, r2
 80045de:	d004      	beq.n	80045ea <ai_check_custom_types+0x26>
 80045e0:	2001      	movs	r0, #1
 80045e2:	f080 0001 	eor.w	r0, r0, #1
 80045e6:	b002      	add	sp, #8
 80045e8:	4770      	bx	lr
 80045ea:	7842      	ldrb	r2, [r0, #1]
 80045ec:	f89d 3005 	ldrb.w	r3, [sp, #5]
 80045f0:	429a      	cmp	r2, r3
 80045f2:	f100 0001 	add.w	r0, r0, #1
 80045f6:	d1f3      	bne.n	80045e0 <ai_check_custom_types+0x1c>
 80045f8:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 80045fc:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8004600:	429a      	cmp	r2, r3
 8004602:	d1ed      	bne.n	80045e0 <ai_check_custom_types+0x1c>
 8004604:	7842      	ldrb	r2, [r0, #1]
 8004606:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800460a:	429a      	cmp	r2, r3
 800460c:	d1e8      	bne.n	80045e0 <ai_check_custom_types+0x1c>
 800460e:	2000      	movs	r0, #0
 8004610:	e7e7      	b.n	80045e2 <ai_check_custom_types+0x1e>
 8004612:	bf00      	nop
 8004614:	84048403 	.word	0x84048403

08004618 <ai_layers_init_all>:
 8004618:	4601      	mov	r1, r0
 800461a:	2000      	movs	r0, #0
 800461c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 800461e:	b143      	cbz	r3, 8004632 <ai_layers_init_all+0x1a>
 8004620:	691a      	ldr	r2, [r3, #16]
 8004622:	60d9      	str	r1, [r3, #12]
 8004624:	429a      	cmp	r2, r3
 8004626:	f100 0001 	add.w	r0, r0, #1
 800462a:	d002      	beq.n	8004632 <ai_layers_init_all+0x1a>
 800462c:	b10a      	cbz	r2, 8004632 <ai_layers_init_all+0x1a>
 800462e:	4613      	mov	r3, r2
 8004630:	e7f5      	b.n	800461e <ai_layers_init_all+0x6>
 8004632:	4770      	bx	lr

08004634 <ai_layers_post_init_all>:
 8004634:	b538      	push	{r3, r4, r5, lr}
 8004636:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8004638:	2500      	movs	r5, #0
 800463a:	b16c      	cbz	r4, 8004658 <ai_layers_post_init_all+0x24>
 800463c:	6863      	ldr	r3, [r4, #4]
 800463e:	07db      	lsls	r3, r3, #31
 8004640:	d504      	bpl.n	800464c <ai_layers_post_init_all+0x18>
 8004642:	6a23      	ldr	r3, [r4, #32]
 8004644:	4620      	mov	r0, r4
 8004646:	b10b      	cbz	r3, 800464c <ai_layers_post_init_all+0x18>
 8004648:	4798      	blx	r3
 800464a:	3501      	adds	r5, #1
 800464c:	6923      	ldr	r3, [r4, #16]
 800464e:	42a3      	cmp	r3, r4
 8004650:	d002      	beq.n	8004658 <ai_layers_post_init_all+0x24>
 8004652:	b10b      	cbz	r3, 8004658 <ai_layers_post_init_all+0x24>
 8004654:	461c      	mov	r4, r3
 8004656:	e7f0      	b.n	800463a <ai_layers_post_init_all+0x6>
 8004658:	4628      	mov	r0, r5
 800465a:	bd38      	pop	{r3, r4, r5, pc}

0800465c <ai_layers_forward_all>:
 800465c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004660:	f8d0 803c 	ldr.w	r8, [r0, #60]	; 0x3c
 8004664:	4604      	mov	r4, r0
 8004666:	f1b8 0f00 	cmp.w	r8, #0
 800466a:	d02b      	beq.n	80046c4 <ai_layers_forward_all+0x68>
 800466c:	6b41      	ldr	r1, [r0, #52]	; 0x34
 800466e:	6381      	str	r1, [r0, #56]	; 0x38
 8004670:	b321      	cbz	r1, 80046bc <ai_layers_forward_all+0x60>
 8004672:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8004674:	2001      	movs	r0, #1
 8004676:	47c0      	blx	r8
 8004678:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800467a:	b1fe      	cbz	r6, 80046bc <ai_layers_forward_all+0x60>
 800467c:	2700      	movs	r7, #0
 800467e:	4631      	mov	r1, r6
 8004680:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004682:	2002      	movs	r0, #2
 8004684:	47c0      	blx	r8
 8004686:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8004688:	4628      	mov	r0, r5
 800468a:	696b      	ldr	r3, [r5, #20]
 800468c:	4798      	blx	r3
 800468e:	692e      	ldr	r6, [r5, #16]
 8004690:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004692:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8004694:	42b5      	cmp	r5, r6
 8004696:	f04f 0003 	mov.w	r0, #3
 800469a:	d007      	beq.n	80046ac <ai_layers_forward_all+0x50>
 800469c:	47c0      	blx	r8
 800469e:	3701      	adds	r7, #1
 80046a0:	63a6      	str	r6, [r4, #56]	; 0x38
 80046a2:	2e00      	cmp	r6, #0
 80046a4:	d1eb      	bne.n	800467e <ai_layers_forward_all+0x22>
 80046a6:	4638      	mov	r0, r7
 80046a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80046ac:	2003      	movs	r0, #3
 80046ae:	47c0      	blx	r8
 80046b0:	2300      	movs	r3, #0
 80046b2:	3701      	adds	r7, #1
 80046b4:	63a3      	str	r3, [r4, #56]	; 0x38
 80046b6:	4638      	mov	r0, r7
 80046b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80046bc:	2700      	movs	r7, #0
 80046be:	4638      	mov	r0, r7
 80046c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80046c4:	6b45      	ldr	r5, [r0, #52]	; 0x34
 80046c6:	6385      	str	r5, [r0, #56]	; 0x38
 80046c8:	2d00      	cmp	r5, #0
 80046ca:	d0f7      	beq.n	80046bc <ai_layers_forward_all+0x60>
 80046cc:	4647      	mov	r7, r8
 80046ce:	696b      	ldr	r3, [r5, #20]
 80046d0:	4628      	mov	r0, r5
 80046d2:	4798      	blx	r3
 80046d4:	462b      	mov	r3, r5
 80046d6:	692d      	ldr	r5, [r5, #16]
 80046d8:	429d      	cmp	r5, r3
 80046da:	d004      	beq.n	80046e6 <ai_layers_forward_all+0x8a>
 80046dc:	63a5      	str	r5, [r4, #56]	; 0x38
 80046de:	3701      	adds	r7, #1
 80046e0:	2d00      	cmp	r5, #0
 80046e2:	d1f4      	bne.n	80046ce <ai_layers_forward_all+0x72>
 80046e4:	e7df      	b.n	80046a6 <ai_layers_forward_all+0x4a>
 80046e6:	2300      	movs	r3, #0
 80046e8:	63a3      	str	r3, [r4, #56]	; 0x38
 80046ea:	3701      	adds	r7, #1
 80046ec:	e7db      	b.n	80046a6 <ai_layers_forward_all+0x4a>
 80046ee:	bf00      	nop

080046f0 <lite_dense_if32of32wf32>:
 80046f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80046f4:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
 80046f8:	eb00 0784 	add.w	r7, r0, r4, lsl #2
 80046fc:	4287      	cmp	r7, r0
 80046fe:	f240 8106 	bls.w	800490e <lite_dense_if32of32wf32+0x21e>
 8004702:	f1a6 0810 	sub.w	r8, r6, #16
 8004706:	ea4f 1818 	mov.w	r8, r8, lsr #4
 800470a:	f108 0801 	add.w	r8, r8, #1
 800470e:	ea4f 1b88 	mov.w	fp, r8, lsl #6
 8004712:	ea4f 0986 	mov.w	r9, r6, lsl #2
 8004716:	eb01 1888 	add.w	r8, r1, r8, lsl #6
 800471a:	4605      	mov	r5, r0
 800471c:	f006 0a0f 	and.w	sl, r6, #15
 8004720:	2e0f      	cmp	r6, #15
 8004722:	ed9f 7a84 	vldr	s14, [pc, #528]	; 8004934 <lite_dense_if32of32wf32+0x244>
 8004726:	f240 8101 	bls.w	800492c <lite_dense_if32of32wf32+0x23c>
 800472a:	f101 0c40 	add.w	ip, r1, #64	; 0x40
 800472e:	f102 0440 	add.w	r4, r2, #64	; 0x40
 8004732:	46b6      	mov	lr, r6
 8004734:	ed54 5a0f 	vldr	s11, [r4, #-60]	; 0xffffffc4
 8004738:	ed5c 7a0f 	vldr	s15, [ip, #-60]	; 0xffffffc4
 800473c:	ed1c 6a10 	vldr	s12, [ip, #-64]	; 0xffffffc0
 8004740:	ed54 6a10 	vldr	s13, [r4, #-64]	; 0xffffffc0
 8004744:	ed5c 4a0d 	vldr	s9, [ip, #-52]	; 0xffffffcc
 8004748:	ed1c 5a0c 	vldr	s10, [ip, #-48]	; 0xffffffd0
 800474c:	ed1c 3a0a 	vldr	s6, [ip, #-40]	; 0xffffffd8
 8004750:	ed54 3a0a 	vldr	s7, [r4, #-40]	; 0xffffffd8
 8004754:	ed1c 4a09 	vldr	s8, [ip, #-36]	; 0xffffffdc
 8004758:	ed1c 1a06 	vldr	s2, [ip, #-24]	; 0xffffffe8
 800475c:	ed54 1a06 	vldr	s3, [r4, #-24]	; 0xffffffe8
 8004760:	ed1c 2a05 	vldr	s4, [ip, #-20]	; 0xffffffec
 8004764:	ed54 2a05 	vldr	s5, [r4, #-20]	; 0xffffffec
 8004768:	ee67 7aa5 	vmul.f32	s15, s15, s11
 800476c:	ed5c 5a0e 	vldr	s11, [ip, #-56]	; 0xffffffc8
 8004770:	eee6 7a26 	vfma.f32	s15, s12, s13
 8004774:	f1ae 0e10 	sub.w	lr, lr, #16
 8004778:	f1be 0f0f 	cmp.w	lr, #15
 800477c:	ed14 6a0e 	vldr	s12, [r4, #-56]	; 0xffffffc8
 8004780:	ed54 6a0d 	vldr	s13, [r4, #-52]	; 0xffffffcc
 8004784:	eee5 7a86 	vfma.f32	s15, s11, s12
 8004788:	f10c 0c40 	add.w	ip, ip, #64	; 0x40
 800478c:	f104 0440 	add.w	r4, r4, #64	; 0x40
 8004790:	ed54 5a1c 	vldr	s11, [r4, #-112]	; 0xffffff90
 8004794:	ed1c 6a1b 	vldr	s12, [ip, #-108]	; 0xffffff94
 8004798:	eee4 7aa6 	vfma.f32	s15, s9, s13
 800479c:	ed54 6a1b 	vldr	s13, [r4, #-108]	; 0xffffff94
 80047a0:	ed54 4a19 	vldr	s9, [r4, #-100]	; 0xffffff9c
 80047a4:	eee5 7a25 	vfma.f32	s15, s10, s11
 80047a8:	ed1c 5a18 	vldr	s10, [ip, #-96]	; 0xffffffa0
 80047ac:	ed54 5a18 	vldr	s11, [r4, #-96]	; 0xffffffa0
 80047b0:	eee6 7a26 	vfma.f32	s15, s12, s13
 80047b4:	ed1c 6a17 	vldr	s12, [ip, #-92]	; 0xffffffa4
 80047b8:	ed54 6a17 	vldr	s13, [r4, #-92]	; 0xffffffa4
 80047bc:	eee3 7a23 	vfma.f32	s15, s6, s7
 80047c0:	ed1c 3a14 	vldr	s6, [ip, #-80]	; 0xffffffb0
 80047c4:	ed54 3a14 	vldr	s7, [r4, #-80]	; 0xffffffb0
 80047c8:	eee4 7a24 	vfma.f32	s15, s8, s9
 80047cc:	ed1c 4a13 	vldr	s8, [ip, #-76]	; 0xffffffb4
 80047d0:	ed54 4a13 	vldr	s9, [r4, #-76]	; 0xffffffb4
 80047d4:	eee5 7a25 	vfma.f32	s15, s10, s11
 80047d8:	ed1c 5a12 	vldr	s10, [ip, #-72]	; 0xffffffb8
 80047dc:	ed54 5a12 	vldr	s11, [r4, #-72]	; 0xffffffb8
 80047e0:	eee6 7a26 	vfma.f32	s15, s12, s13
 80047e4:	ed1c 6a11 	vldr	s12, [ip, #-68]	; 0xffffffbc
 80047e8:	ed54 6a11 	vldr	s13, [r4, #-68]	; 0xffffffbc
 80047ec:	eee1 7a21 	vfma.f32	s15, s2, s3
 80047f0:	eee2 7a22 	vfma.f32	s15, s4, s5
 80047f4:	eee3 7a23 	vfma.f32	s15, s6, s7
 80047f8:	eee4 7a24 	vfma.f32	s15, s8, s9
 80047fc:	eee5 7a25 	vfma.f32	s15, s10, s11
 8004800:	eee6 7a26 	vfma.f32	s15, s12, s13
 8004804:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004808:	d894      	bhi.n	8004734 <lite_dense_if32of32wf32+0x44>
 800480a:	eb02 0e0b 	add.w	lr, r2, fp
 800480e:	4654      	mov	r4, sl
 8004810:	46c4      	mov	ip, r8
 8004812:	2c00      	cmp	r4, #0
 8004814:	d075      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 8004816:	eddc 6a00 	vldr	s13, [ip]
 800481a:	edde 7a00 	vldr	s15, [lr]
 800481e:	2c01      	cmp	r4, #1
 8004820:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8004824:	d06d      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 8004826:	eddc 6a01 	vldr	s13, [ip, #4]
 800482a:	edde 7a01 	vldr	s15, [lr, #4]
 800482e:	2c02      	cmp	r4, #2
 8004830:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8004834:	d065      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 8004836:	eddc 6a02 	vldr	s13, [ip, #8]
 800483a:	edde 7a02 	vldr	s15, [lr, #8]
 800483e:	2c03      	cmp	r4, #3
 8004840:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8004844:	d05d      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 8004846:	eddc 6a03 	vldr	s13, [ip, #12]
 800484a:	edde 7a03 	vldr	s15, [lr, #12]
 800484e:	2c04      	cmp	r4, #4
 8004850:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8004854:	d055      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 8004856:	eddc 6a04 	vldr	s13, [ip, #16]
 800485a:	edde 7a04 	vldr	s15, [lr, #16]
 800485e:	2c05      	cmp	r4, #5
 8004860:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8004864:	d04d      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 8004866:	eddc 6a05 	vldr	s13, [ip, #20]
 800486a:	edde 7a05 	vldr	s15, [lr, #20]
 800486e:	2c06      	cmp	r4, #6
 8004870:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8004874:	d045      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 8004876:	eddc 6a06 	vldr	s13, [ip, #24]
 800487a:	edde 7a06 	vldr	s15, [lr, #24]
 800487e:	2c07      	cmp	r4, #7
 8004880:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8004884:	d03d      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 8004886:	eddc 6a07 	vldr	s13, [ip, #28]
 800488a:	edde 7a07 	vldr	s15, [lr, #28]
 800488e:	2c08      	cmp	r4, #8
 8004890:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8004894:	d035      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 8004896:	eddc 6a08 	vldr	s13, [ip, #32]
 800489a:	edde 7a08 	vldr	s15, [lr, #32]
 800489e:	2c09      	cmp	r4, #9
 80048a0:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80048a4:	d02d      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 80048a6:	eddc 6a09 	vldr	s13, [ip, #36]	; 0x24
 80048aa:	edde 7a09 	vldr	s15, [lr, #36]	; 0x24
 80048ae:	2c0a      	cmp	r4, #10
 80048b0:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80048b4:	d025      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 80048b6:	eddc 6a0a 	vldr	s13, [ip, #40]	; 0x28
 80048ba:	edde 7a0a 	vldr	s15, [lr, #40]	; 0x28
 80048be:	2c0b      	cmp	r4, #11
 80048c0:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80048c4:	d01d      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 80048c6:	eddc 6a0b 	vldr	s13, [ip, #44]	; 0x2c
 80048ca:	edde 7a0b 	vldr	s15, [lr, #44]	; 0x2c
 80048ce:	2c0c      	cmp	r4, #12
 80048d0:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80048d4:	d015      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 80048d6:	eddc 6a0c 	vldr	s13, [ip, #48]	; 0x30
 80048da:	edde 7a0c 	vldr	s15, [lr, #48]	; 0x30
 80048de:	3c0d      	subs	r4, #13
 80048e0:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80048e4:	d00d      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 80048e6:	eddc 6a0d 	vldr	s13, [ip, #52]	; 0x34
 80048ea:	edde 7a0d 	vldr	s15, [lr, #52]	; 0x34
 80048ee:	2c01      	cmp	r4, #1
 80048f0:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80048f4:	d005      	beq.n	8004902 <lite_dense_if32of32wf32+0x212>
 80048f6:	edde 6a0e 	vldr	s13, [lr, #56]	; 0x38
 80048fa:	eddc 7a0e 	vldr	s15, [ip, #56]	; 0x38
 80048fe:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8004902:	444a      	add	r2, r9
 8004904:	eca5 7a01 	vstmia	r5!, {s14}
 8004908:	42af      	cmp	r7, r5
 800490a:	f63f af09 	bhi.w	8004720 <lite_dense_if32of32wf32+0x30>
 800490e:	b15b      	cbz	r3, 8004928 <lite_dense_if32of32wf32+0x238>
 8004910:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004912:	b14a      	cbz	r2, 8004928 <lite_dense_if32of32wf32+0x238>
 8004914:	edd0 7a00 	vldr	s15, [r0]
 8004918:	ecb3 7a01 	vldmia	r3!, {s14}
 800491c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004920:	ece0 7a01 	vstmia	r0!, {s15}
 8004924:	4287      	cmp	r7, r0
 8004926:	d1f5      	bne.n	8004914 <lite_dense_if32of32wf32+0x224>
 8004928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800492c:	4634      	mov	r4, r6
 800492e:	4696      	mov	lr, r2
 8004930:	468c      	mov	ip, r1
 8004932:	e76e      	b.n	8004812 <lite_dense_if32of32wf32+0x122>
 8004934:	00000000 	.word	0x00000000

08004938 <ai_version_get>:
 8004938:	0212      	lsls	r2, r2, #8
 800493a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800493e:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
 8004942:	4770      	bx	lr

08004944 <get_tensor_byte_size>:
 8004944:	b410      	push	{r4}
 8004946:	6983      	ldr	r3, [r0, #24]
 8004948:	68c4      	ldr	r4, [r0, #12]
 800494a:	6941      	ldr	r1, [r0, #20]
 800494c:	681b      	ldr	r3, [r3, #0]
 800494e:	68e0      	ldr	r0, [r4, #12]
 8004950:	4a07      	ldr	r2, [pc, #28]	; (8004970 <get_tensor_byte_size+0x2c>)
 8004952:	68c9      	ldr	r1, [r1, #12]
 8004954:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004958:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
 800495c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8004960:	fb01 f000 	mul.w	r0, r1, r0
 8004964:	4293      	cmp	r3, r2
 8004966:	bf04      	itt	eq
 8004968:	3007      	addeq	r0, #7
 800496a:	08c0      	lsreq	r0, r0, #3
 800496c:	4770      	bx	lr
 800496e:	bf00      	nop
 8004970:	000400c0 	.word	0x000400c0

08004974 <ai_array_to_buffer_fmt>:
 8004974:	f3c0 4343 	ubfx	r3, r0, #17, #4
 8004978:	2b02      	cmp	r3, #2
 800497a:	d050      	beq.n	8004a1e <ai_array_to_buffer_fmt+0xaa>
 800497c:	4b2a      	ldr	r3, [pc, #168]	; (8004a28 <ai_array_to_buffer_fmt+0xb4>)
 800497e:	f020 427e 	bic.w	r2, r0, #4261412864	; 0xfe000000
 8004982:	429a      	cmp	r2, r3
 8004984:	d00b      	beq.n	800499e <ai_array_to_buffer_fmt+0x2a>
 8004986:	dc1c      	bgt.n	80049c2 <ai_array_to_buffer_fmt+0x4e>
 8004988:	4b28      	ldr	r3, [pc, #160]	; (8004a2c <ai_array_to_buffer_fmt+0xb8>)
 800498a:	429a      	cmp	r2, r3
 800498c:	d007      	beq.n	800499e <ai_array_to_buffer_fmt+0x2a>
 800498e:	dd0b      	ble.n	80049a8 <ai_array_to_buffer_fmt+0x34>
 8004990:	4b27      	ldr	r3, [pc, #156]	; (8004a30 <ai_array_to_buffer_fmt+0xbc>)
 8004992:	429a      	cmp	r2, r3
 8004994:	d003      	beq.n	800499e <ai_array_to_buffer_fmt+0x2a>
 8004996:	f503 33fa 	add.w	r3, r3, #128000	; 0x1f400
 800499a:	429a      	cmp	r2, r3
 800499c:	d131      	bne.n	8004a02 <ai_array_to_buffer_fmt+0x8e>
 800499e:	4613      	mov	r3, r2
 80049a0:	f000 40d0 	and.w	r0, r0, #1744830464	; 0x68000000
 80049a4:	4318      	orrs	r0, r3
 80049a6:	4770      	bx	lr
 80049a8:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80049ac:	429a      	cmp	r2, r3
 80049ae:	d0f6      	beq.n	800499e <ai_array_to_buffer_fmt+0x2a>
 80049b0:	dd2c      	ble.n	8004a0c <ai_array_to_buffer_fmt+0x98>
 80049b2:	4b20      	ldr	r3, [pc, #128]	; (8004a34 <ai_array_to_buffer_fmt+0xc0>)
 80049b4:	f000 40d0 	and.w	r0, r0, #1744830464	; 0x68000000
 80049b8:	429a      	cmp	r2, r3
 80049ba:	bf18      	it	ne
 80049bc:	2340      	movne	r3, #64	; 0x40
 80049be:	4318      	orrs	r0, r3
 80049c0:	4770      	bx	lr
 80049c2:	4b1d      	ldr	r3, [pc, #116]	; (8004a38 <ai_array_to_buffer_fmt+0xc4>)
 80049c4:	429a      	cmp	r2, r3
 80049c6:	d0ea      	beq.n	800499e <ai_array_to_buffer_fmt+0x2a>
 80049c8:	dd0e      	ble.n	80049e8 <ai_array_to_buffer_fmt+0x74>
 80049ca:	4b1c      	ldr	r3, [pc, #112]	; (8004a3c <ai_array_to_buffer_fmt+0xc8>)
 80049cc:	429a      	cmp	r2, r3
 80049ce:	d0e6      	beq.n	800499e <ai_array_to_buffer_fmt+0x2a>
 80049d0:	f503 037e 	add.w	r3, r3, #16646144	; 0xfe0000
 80049d4:	429a      	cmp	r2, r3
 80049d6:	d0e2      	beq.n	800499e <ai_array_to_buffer_fmt+0x2a>
 80049d8:	4b19      	ldr	r3, [pc, #100]	; (8004a40 <ai_array_to_buffer_fmt+0xcc>)
 80049da:	f000 40d0 	and.w	r0, r0, #1744830464	; 0x68000000
 80049de:	429a      	cmp	r2, r3
 80049e0:	bf18      	it	ne
 80049e2:	2340      	movne	r3, #64	; 0x40
 80049e4:	4318      	orrs	r0, r3
 80049e6:	4770      	bx	lr
 80049e8:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80049ec:	429a      	cmp	r2, r3
 80049ee:	d0d6      	beq.n	800499e <ai_array_to_buffer_fmt+0x2a>
 80049f0:	3307      	adds	r3, #7
 80049f2:	429a      	cmp	r2, r3
 80049f4:	d0d3      	beq.n	800499e <ai_array_to_buffer_fmt+0x2a>
 80049f6:	f2a3 3387 	subw	r3, r3, #903	; 0x387
 80049fa:	429a      	cmp	r2, r3
 80049fc:	bf18      	it	ne
 80049fe:	2340      	movne	r3, #64	; 0x40
 8004a00:	e7ce      	b.n	80049a0 <ai_array_to_buffer_fmt+0x2c>
 8004a02:	4b10      	ldr	r3, [pc, #64]	; (8004a44 <ai_array_to_buffer_fmt+0xd0>)
 8004a04:	429a      	cmp	r2, r3
 8004a06:	bf18      	it	ne
 8004a08:	2340      	movne	r3, #64	; 0x40
 8004a0a:	e7c9      	b.n	80049a0 <ai_array_to_buffer_fmt+0x2c>
 8004a0c:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8004a10:	429a      	cmp	r2, r3
 8004a12:	d0c4      	beq.n	800499e <ai_array_to_buffer_fmt+0x2a>
 8004a14:	3380      	adds	r3, #128	; 0x80
 8004a16:	429a      	cmp	r2, r3
 8004a18:	bf18      	it	ne
 8004a1a:	2340      	movne	r3, #64	; 0x40
 8004a1c:	e7c0      	b.n	80049a0 <ai_array_to_buffer_fmt+0x2c>
 8004a1e:	4b0a      	ldr	r3, [pc, #40]	; (8004a48 <ai_array_to_buffer_fmt+0xd4>)
 8004a20:	4003      	ands	r3, r0
 8004a22:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004a26:	e7bb      	b.n	80049a0 <ai_array_to_buffer_fmt+0x2c>
 8004a28:	00840040 	.word	0x00840040
 8004a2c:	00040840 	.word	0x00040840
 8004a30:	00041040 	.word	0x00041040
 8004a34:	00040447 	.word	0x00040447
 8004a38:	00840840 	.word	0x00840840
 8004a3c:	00841040 	.word	0x00841040
 8004a40:	0084084f 	.word	0x0084084f
 8004a44:	0004084f 	.word	0x0004084f
 8004a48:	00803fff 	.word	0x00803fff

08004a4c <ai_array_get_byte_size>:
 8004a4c:	b319      	cbz	r1, 8004a96 <ai_array_get_byte_size+0x4a>
 8004a4e:	f3c0 13c6 	ubfx	r3, r0, #7, #7
 8004a52:	fb03 f101 	mul.w	r1, r3, r1
 8004a56:	3107      	adds	r1, #7
 8004a58:	f3c0 4243 	ubfx	r2, r0, #17, #4
 8004a5c:	f021 0307 	bic.w	r3, r1, #7
 8004a60:	2a04      	cmp	r2, #4
 8004a62:	f3c0 5141 	ubfx	r1, r0, #21, #2
 8004a66:	fa23 f101 	lsr.w	r1, r3, r1
 8004a6a:	ea4f 10e0 	mov.w	r0, r0, asr #7
 8004a6e:	d00b      	beq.n	8004a88 <ai_array_get_byte_size+0x3c>
 8004a70:	2a08      	cmp	r2, #8
 8004a72:	d002      	beq.n	8004a7a <ai_array_get_byte_size+0x2e>
 8004a74:	3107      	adds	r1, #7
 8004a76:	08c8      	lsrs	r0, r1, #3
 8004a78:	4770      	bx	lr
 8004a7a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8004a7e:	eb01 2100 	add.w	r1, r1, r0, lsl #8
 8004a82:	3107      	adds	r1, #7
 8004a84:	08c8      	lsrs	r0, r1, #3
 8004a86:	4770      	bx	lr
 8004a88:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8004a8c:	eb01 1100 	add.w	r1, r1, r0, lsl #4
 8004a90:	3107      	adds	r1, #7
 8004a92:	08c8      	lsrs	r0, r1, #3
 8004a94:	4770      	bx	lr
 8004a96:	4608      	mov	r0, r1
 8004a98:	4770      	bx	lr
 8004a9a:	bf00      	nop

08004a9c <ai_array_get_data_byte_size>:
 8004a9c:	b169      	cbz	r1, 8004aba <ai_array_get_data_byte_size+0x1e>
 8004a9e:	f3c0 12c6 	ubfx	r2, r0, #7, #7
 8004aa2:	fb02 f101 	mul.w	r1, r2, r1
 8004aa6:	1dcb      	adds	r3, r1, #7
 8004aa8:	f023 0307 	bic.w	r3, r3, #7
 8004aac:	f3c0 5041 	ubfx	r0, r0, #21, #2
 8004ab0:	fa23 f000 	lsr.w	r0, r3, r0
 8004ab4:	3007      	adds	r0, #7
 8004ab6:	08c0      	lsrs	r0, r0, #3
 8004ab8:	4770      	bx	lr
 8004aba:	4608      	mov	r0, r1
 8004abc:	4770      	bx	lr
 8004abe:	bf00      	nop

08004ac0 <expf>:
 8004ac0:	b508      	push	{r3, lr}
 8004ac2:	ed2d 8b02 	vpush	{d8}
 8004ac6:	eef0 8a40 	vmov.f32	s17, s0
 8004aca:	f000 f82f 	bl	8004b2c <__ieee754_expf>
 8004ace:	eeb0 8a40 	vmov.f32	s16, s0
 8004ad2:	eeb0 0a68 	vmov.f32	s0, s17
 8004ad6:	f000 f919 	bl	8004d0c <finitef>
 8004ada:	b160      	cbz	r0, 8004af6 <expf+0x36>
 8004adc:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8004b1c <expf+0x5c>
 8004ae0:	eef4 8ae7 	vcmpe.f32	s17, s15
 8004ae4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ae8:	dd0a      	ble.n	8004b00 <expf+0x40>
 8004aea:	f000 f91d 	bl	8004d28 <__errno>
 8004aee:	ed9f 8a0c 	vldr	s16, [pc, #48]	; 8004b20 <expf+0x60>
 8004af2:	2322      	movs	r3, #34	; 0x22
 8004af4:	6003      	str	r3, [r0, #0]
 8004af6:	eeb0 0a48 	vmov.f32	s0, s16
 8004afa:	ecbd 8b02 	vpop	{d8}
 8004afe:	bd08      	pop	{r3, pc}
 8004b00:	eddf 7a08 	vldr	s15, [pc, #32]	; 8004b24 <expf+0x64>
 8004b04:	eef4 8ae7 	vcmpe.f32	s17, s15
 8004b08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b0c:	d5f3      	bpl.n	8004af6 <expf+0x36>
 8004b0e:	f000 f90b 	bl	8004d28 <__errno>
 8004b12:	2322      	movs	r3, #34	; 0x22
 8004b14:	ed9f 8a04 	vldr	s16, [pc, #16]	; 8004b28 <expf+0x68>
 8004b18:	6003      	str	r3, [r0, #0]
 8004b1a:	e7ec      	b.n	8004af6 <expf+0x36>
 8004b1c:	42b17180 	.word	0x42b17180
 8004b20:	7f800000 	.word	0x7f800000
 8004b24:	c2cff1b5 	.word	0xc2cff1b5
 8004b28:	00000000 	.word	0x00000000

08004b2c <__ieee754_expf>:
 8004b2c:	ee10 2a10 	vmov	r2, s0
 8004b30:	f022 4100 	bic.w	r1, r2, #2147483648	; 0x80000000
 8004b34:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8004b38:	d902      	bls.n	8004b40 <__ieee754_expf+0x14>
 8004b3a:	ee30 0a00 	vadd.f32	s0, s0, s0
 8004b3e:	4770      	bx	lr
 8004b40:	ea4f 73d2 	mov.w	r3, r2, lsr #31
 8004b44:	d106      	bne.n	8004b54 <__ieee754_expf+0x28>
 8004b46:	eddf 7a4e 	vldr	s15, [pc, #312]	; 8004c80 <__ieee754_expf+0x154>
 8004b4a:	2b00      	cmp	r3, #0
 8004b4c:	bf18      	it	ne
 8004b4e:	eeb0 0a67 	vmovne.f32	s0, s15
 8004b52:	4770      	bx	lr
 8004b54:	484b      	ldr	r0, [pc, #300]	; (8004c84 <__ieee754_expf+0x158>)
 8004b56:	4282      	cmp	r2, r0
 8004b58:	dd02      	ble.n	8004b60 <__ieee754_expf+0x34>
 8004b5a:	2000      	movs	r0, #0
 8004b5c:	f000 b8d0 	b.w	8004d00 <__math_oflowf>
 8004b60:	2a00      	cmp	r2, #0
 8004b62:	da05      	bge.n	8004b70 <__ieee754_expf+0x44>
 8004b64:	4a48      	ldr	r2, [pc, #288]	; (8004c88 <__ieee754_expf+0x15c>)
 8004b66:	4291      	cmp	r1, r2
 8004b68:	d902      	bls.n	8004b70 <__ieee754_expf+0x44>
 8004b6a:	2000      	movs	r0, #0
 8004b6c:	f000 b8c2 	b.w	8004cf4 <__math_uflowf>
 8004b70:	4a46      	ldr	r2, [pc, #280]	; (8004c8c <__ieee754_expf+0x160>)
 8004b72:	4291      	cmp	r1, r2
 8004b74:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
 8004b78:	d952      	bls.n	8004c20 <__ieee754_expf+0xf4>
 8004b7a:	4a45      	ldr	r2, [pc, #276]	; (8004c90 <__ieee754_expf+0x164>)
 8004b7c:	4291      	cmp	r1, r2
 8004b7e:	ea4f 0283 	mov.w	r2, r3, lsl #2
 8004b82:	d834      	bhi.n	8004bee <__ieee754_expf+0xc2>
 8004b84:	4943      	ldr	r1, [pc, #268]	; (8004c94 <__ieee754_expf+0x168>)
 8004b86:	4411      	add	r1, r2
 8004b88:	ed91 7a00 	vldr	s14, [r1]
 8004b8c:	4942      	ldr	r1, [pc, #264]	; (8004c98 <__ieee754_expf+0x16c>)
 8004b8e:	440a      	add	r2, r1
 8004b90:	edd2 7a00 	vldr	s15, [r2]
 8004b94:	ee30 7a47 	vsub.f32	s14, s0, s14
 8004b98:	f1c3 0201 	rsb	r2, r3, #1
 8004b9c:	1ad2      	subs	r2, r2, r3
 8004b9e:	ee37 0a67 	vsub.f32	s0, s14, s15
 8004ba2:	ee20 6a00 	vmul.f32	s12, s0, s0
 8004ba6:	ed9f 5a3d 	vldr	s10, [pc, #244]	; 8004c9c <__ieee754_expf+0x170>
 8004baa:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8004ca0 <__ieee754_expf+0x174>
 8004bae:	eee6 6a05 	vfma.f32	s13, s12, s10
 8004bb2:	ed9f 5a3c 	vldr	s10, [pc, #240]	; 8004ca4 <__ieee754_expf+0x178>
 8004bb6:	eea6 5a86 	vfma.f32	s10, s13, s12
 8004bba:	eddf 6a3b 	vldr	s13, [pc, #236]	; 8004ca8 <__ieee754_expf+0x17c>
 8004bbe:	eee5 6a06 	vfma.f32	s13, s10, s12
 8004bc2:	ed9f 5a3a 	vldr	s10, [pc, #232]	; 8004cac <__ieee754_expf+0x180>
 8004bc6:	eea6 5a86 	vfma.f32	s10, s13, s12
 8004bca:	eef0 6a40 	vmov.f32	s13, s0
 8004bce:	eee5 6a46 	vfms.f32	s13, s10, s12
 8004bd2:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 8004bd6:	ee20 5a26 	vmul.f32	s10, s0, s13
 8004bda:	bb92      	cbnz	r2, 8004c42 <__ieee754_expf+0x116>
 8004bdc:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8004be0:	eec5 7a26 	vdiv.f32	s15, s10, s13
 8004be4:	ee37 0ac0 	vsub.f32	s0, s15, s0
 8004be8:	ee35 0ac0 	vsub.f32	s0, s11, s0
 8004bec:	4770      	bx	lr
 8004bee:	4b30      	ldr	r3, [pc, #192]	; (8004cb0 <__ieee754_expf+0x184>)
 8004bf0:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8004cb4 <__ieee754_expf+0x188>
 8004bf4:	eddf 6a30 	vldr	s13, [pc, #192]	; 8004cb8 <__ieee754_expf+0x18c>
 8004bf8:	4413      	add	r3, r2
 8004bfa:	edd3 7a00 	vldr	s15, [r3]
 8004bfe:	eee0 7a07 	vfma.f32	s15, s0, s14
 8004c02:	eeb0 7a40 	vmov.f32	s14, s0
 8004c06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c0a:	ee17 2a90 	vmov	r2, s15
 8004c0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c12:	eea7 7ae6 	vfms.f32	s14, s15, s13
 8004c16:	eddf 6a29 	vldr	s13, [pc, #164]	; 8004cbc <__ieee754_expf+0x190>
 8004c1a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8004c1e:	e7be      	b.n	8004b9e <__ieee754_expf+0x72>
 8004c20:	f1b1 5f50 	cmp.w	r1, #872415232	; 0x34000000
 8004c24:	d20b      	bcs.n	8004c3e <__ieee754_expf+0x112>
 8004c26:	eddf 6a26 	vldr	s13, [pc, #152]	; 8004cc0 <__ieee754_expf+0x194>
 8004c2a:	ee70 6a26 	vadd.f32	s13, s0, s13
 8004c2e:	eef4 6ae5 	vcmpe.f32	s13, s11
 8004c32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c36:	dd02      	ble.n	8004c3e <__ieee754_expf+0x112>
 8004c38:	ee30 0a25 	vadd.f32	s0, s0, s11
 8004c3c:	4770      	bx	lr
 8004c3e:	2200      	movs	r2, #0
 8004c40:	e7af      	b.n	8004ba2 <__ieee754_expf+0x76>
 8004c42:	ee76 6a66 	vsub.f32	s13, s12, s13
 8004c46:	f112 0f7d 	cmn.w	r2, #125	; 0x7d
 8004c4a:	ee85 0a26 	vdiv.f32	s0, s10, s13
 8004c4e:	bfb8      	it	lt
 8004c50:	3264      	addlt	r2, #100	; 0x64
 8004c52:	ee77 7ac0 	vsub.f32	s15, s15, s0
 8004c56:	ee37 0ac7 	vsub.f32	s0, s15, s14
 8004c5a:	ee75 7ac0 	vsub.f32	s15, s11, s0
 8004c5e:	ee17 3a90 	vmov	r3, s15
 8004c62:	bfab      	itete	ge
 8004c64:	eb03 53c2 	addge.w	r3, r3, r2, lsl #23
 8004c68:	eb03 53c2 	addlt.w	r3, r3, r2, lsl #23
 8004c6c:	ee00 3a10 	vmovge	s0, r3
 8004c70:	eddf 7a14 	vldrlt	s15, [pc, #80]	; 8004cc4 <__ieee754_expf+0x198>
 8004c74:	bfbc      	itt	lt
 8004c76:	ee00 3a10 	vmovlt	s0, r3
 8004c7a:	ee20 0a27 	vmullt.f32	s0, s0, s15
 8004c7e:	4770      	bx	lr
 8004c80:	00000000 	.word	0x00000000
 8004c84:	42b17217 	.word	0x42b17217
 8004c88:	42cff1b5 	.word	0x42cff1b5
 8004c8c:	3eb17218 	.word	0x3eb17218
 8004c90:	3f851591 	.word	0x3f851591
 8004c94:	0800e300 	.word	0x0800e300
 8004c98:	0800e308 	.word	0x0800e308
 8004c9c:	3331bb4c 	.word	0x3331bb4c
 8004ca0:	b5ddea0e 	.word	0xb5ddea0e
 8004ca4:	388ab355 	.word	0x388ab355
 8004ca8:	bb360b61 	.word	0xbb360b61
 8004cac:	3e2aaaab 	.word	0x3e2aaaab
 8004cb0:	0800e2f8 	.word	0x0800e2f8
 8004cb4:	3fb8aa3b 	.word	0x3fb8aa3b
 8004cb8:	3f317180 	.word	0x3f317180
 8004cbc:	3717f7d1 	.word	0x3717f7d1
 8004cc0:	7149f2ca 	.word	0x7149f2ca
 8004cc4:	0d800000 	.word	0x0d800000

08004cc8 <with_errnof>:
 8004cc8:	b513      	push	{r0, r1, r4, lr}
 8004cca:	4604      	mov	r4, r0
 8004ccc:	ed8d 0a01 	vstr	s0, [sp, #4]
 8004cd0:	f000 f82a 	bl	8004d28 <__errno>
 8004cd4:	ed9d 0a01 	vldr	s0, [sp, #4]
 8004cd8:	6004      	str	r4, [r0, #0]
 8004cda:	b002      	add	sp, #8
 8004cdc:	bd10      	pop	{r4, pc}

08004cde <xflowf>:
 8004cde:	b130      	cbz	r0, 8004cee <xflowf+0x10>
 8004ce0:	eef1 7a40 	vneg.f32	s15, s0
 8004ce4:	ee27 0a80 	vmul.f32	s0, s15, s0
 8004ce8:	2022      	movs	r0, #34	; 0x22
 8004cea:	f7ff bfed 	b.w	8004cc8 <with_errnof>
 8004cee:	eef0 7a40 	vmov.f32	s15, s0
 8004cf2:	e7f7      	b.n	8004ce4 <xflowf+0x6>

08004cf4 <__math_uflowf>:
 8004cf4:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8004cfc <__math_uflowf+0x8>
 8004cf8:	f7ff bff1 	b.w	8004cde <xflowf>
 8004cfc:	10000000 	.word	0x10000000

08004d00 <__math_oflowf>:
 8004d00:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8004d08 <__math_oflowf+0x8>
 8004d04:	f7ff bfeb 	b.w	8004cde <xflowf>
 8004d08:	70000000 	.word	0x70000000

08004d0c <finitef>:
 8004d0c:	b082      	sub	sp, #8
 8004d0e:	ed8d 0a01 	vstr	s0, [sp, #4]
 8004d12:	9801      	ldr	r0, [sp, #4]
 8004d14:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8004d18:	f1b0 4fff 	cmp.w	r0, #2139095040	; 0x7f800000
 8004d1c:	bfac      	ite	ge
 8004d1e:	2000      	movge	r0, #0
 8004d20:	2001      	movlt	r0, #1
 8004d22:	b002      	add	sp, #8
 8004d24:	4770      	bx	lr
	...

08004d28 <__errno>:
 8004d28:	4b01      	ldr	r3, [pc, #4]	; (8004d30 <__errno+0x8>)
 8004d2a:	6818      	ldr	r0, [r3, #0]
 8004d2c:	4770      	bx	lr
 8004d2e:	bf00      	nop
 8004d30:	20000738 	.word	0x20000738

08004d34 <__libc_init_array>:
 8004d34:	b570      	push	{r4, r5, r6, lr}
 8004d36:	4d0d      	ldr	r5, [pc, #52]	; (8004d6c <__libc_init_array+0x38>)
 8004d38:	4c0d      	ldr	r4, [pc, #52]	; (8004d70 <__libc_init_array+0x3c>)
 8004d3a:	1b64      	subs	r4, r4, r5
 8004d3c:	10a4      	asrs	r4, r4, #2
 8004d3e:	2600      	movs	r6, #0
 8004d40:	42a6      	cmp	r6, r4
 8004d42:	d109      	bne.n	8004d58 <__libc_init_array+0x24>
 8004d44:	4d0b      	ldr	r5, [pc, #44]	; (8004d74 <__libc_init_array+0x40>)
 8004d46:	4c0c      	ldr	r4, [pc, #48]	; (8004d78 <__libc_init_array+0x44>)
 8004d48:	f004 fdca 	bl	80098e0 <_init>
 8004d4c:	1b64      	subs	r4, r4, r5
 8004d4e:	10a4      	asrs	r4, r4, #2
 8004d50:	2600      	movs	r6, #0
 8004d52:	42a6      	cmp	r6, r4
 8004d54:	d105      	bne.n	8004d62 <__libc_init_array+0x2e>
 8004d56:	bd70      	pop	{r4, r5, r6, pc}
 8004d58:	f855 3b04 	ldr.w	r3, [r5], #4
 8004d5c:	4798      	blx	r3
 8004d5e:	3601      	adds	r6, #1
 8004d60:	e7ee      	b.n	8004d40 <__libc_init_array+0xc>
 8004d62:	f855 3b04 	ldr.w	r3, [r5], #4
 8004d66:	4798      	blx	r3
 8004d68:	3601      	adds	r6, #1
 8004d6a:	e7f2      	b.n	8004d52 <__libc_init_array+0x1e>
 8004d6c:	0800e6ac 	.word	0x0800e6ac
 8004d70:	0800e6ac 	.word	0x0800e6ac
 8004d74:	0800e6ac 	.word	0x0800e6ac
 8004d78:	0800e6b4 	.word	0x0800e6b4

08004d7c <_malloc_r>:
 8004d7c:	f101 030b 	add.w	r3, r1, #11
 8004d80:	2b16      	cmp	r3, #22
 8004d82:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d86:	4605      	mov	r5, r0
 8004d88:	d906      	bls.n	8004d98 <_malloc_r+0x1c>
 8004d8a:	f033 0707 	bics.w	r7, r3, #7
 8004d8e:	d504      	bpl.n	8004d9a <_malloc_r+0x1e>
 8004d90:	230c      	movs	r3, #12
 8004d92:	602b      	str	r3, [r5, #0]
 8004d94:	2400      	movs	r4, #0
 8004d96:	e1a5      	b.n	80050e4 <_malloc_r+0x368>
 8004d98:	2710      	movs	r7, #16
 8004d9a:	42b9      	cmp	r1, r7
 8004d9c:	d8f8      	bhi.n	8004d90 <_malloc_r+0x14>
 8004d9e:	4628      	mov	r0, r5
 8004da0:	f000 fa3e 	bl	8005220 <__malloc_lock>
 8004da4:	f5b7 7ffc 	cmp.w	r7, #504	; 0x1f8
 8004da8:	4eb0      	ldr	r6, [pc, #704]	; (800506c <_malloc_r+0x2f0>)
 8004daa:	d237      	bcs.n	8004e1c <_malloc_r+0xa0>
 8004dac:	f107 0208 	add.w	r2, r7, #8
 8004db0:	4432      	add	r2, r6
 8004db2:	f1a2 0108 	sub.w	r1, r2, #8
 8004db6:	6854      	ldr	r4, [r2, #4]
 8004db8:	428c      	cmp	r4, r1
 8004dba:	ea4f 03d7 	mov.w	r3, r7, lsr #3
 8004dbe:	d102      	bne.n	8004dc6 <_malloc_r+0x4a>
 8004dc0:	68d4      	ldr	r4, [r2, #12]
 8004dc2:	42a2      	cmp	r2, r4
 8004dc4:	d010      	beq.n	8004de8 <_malloc_r+0x6c>
 8004dc6:	6863      	ldr	r3, [r4, #4]
 8004dc8:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8004dcc:	f023 0303 	bic.w	r3, r3, #3
 8004dd0:	60ca      	str	r2, [r1, #12]
 8004dd2:	4423      	add	r3, r4
 8004dd4:	6091      	str	r1, [r2, #8]
 8004dd6:	685a      	ldr	r2, [r3, #4]
 8004dd8:	f042 0201 	orr.w	r2, r2, #1
 8004ddc:	605a      	str	r2, [r3, #4]
 8004dde:	4628      	mov	r0, r5
 8004de0:	f000 fa24 	bl	800522c <__malloc_unlock>
 8004de4:	3408      	adds	r4, #8
 8004de6:	e17d      	b.n	80050e4 <_malloc_r+0x368>
 8004de8:	3302      	adds	r3, #2
 8004dea:	6934      	ldr	r4, [r6, #16]
 8004dec:	49a0      	ldr	r1, [pc, #640]	; (8005070 <_malloc_r+0x2f4>)
 8004dee:	428c      	cmp	r4, r1
 8004df0:	d077      	beq.n	8004ee2 <_malloc_r+0x166>
 8004df2:	6862      	ldr	r2, [r4, #4]
 8004df4:	f022 0c03 	bic.w	ip, r2, #3
 8004df8:	ebac 0007 	sub.w	r0, ip, r7
 8004dfc:	280f      	cmp	r0, #15
 8004dfe:	dd48      	ble.n	8004e92 <_malloc_r+0x116>
 8004e00:	19e2      	adds	r2, r4, r7
 8004e02:	f040 0301 	orr.w	r3, r0, #1
 8004e06:	f047 0701 	orr.w	r7, r7, #1
 8004e0a:	6067      	str	r7, [r4, #4]
 8004e0c:	e9c6 2204 	strd	r2, r2, [r6, #16]
 8004e10:	e9c2 1102 	strd	r1, r1, [r2, #8]
 8004e14:	6053      	str	r3, [r2, #4]
 8004e16:	f844 000c 	str.w	r0, [r4, ip]
 8004e1a:	e7e0      	b.n	8004dde <_malloc_r+0x62>
 8004e1c:	0a7b      	lsrs	r3, r7, #9
 8004e1e:	d02a      	beq.n	8004e76 <_malloc_r+0xfa>
 8004e20:	2b04      	cmp	r3, #4
 8004e22:	d812      	bhi.n	8004e4a <_malloc_r+0xce>
 8004e24:	09bb      	lsrs	r3, r7, #6
 8004e26:	3338      	adds	r3, #56	; 0x38
 8004e28:	1c5a      	adds	r2, r3, #1
 8004e2a:	eb06 02c2 	add.w	r2, r6, r2, lsl #3
 8004e2e:	f1a2 0c08 	sub.w	ip, r2, #8
 8004e32:	6854      	ldr	r4, [r2, #4]
 8004e34:	4564      	cmp	r4, ip
 8004e36:	d006      	beq.n	8004e46 <_malloc_r+0xca>
 8004e38:	6862      	ldr	r2, [r4, #4]
 8004e3a:	f022 0203 	bic.w	r2, r2, #3
 8004e3e:	1bd0      	subs	r0, r2, r7
 8004e40:	280f      	cmp	r0, #15
 8004e42:	dd1c      	ble.n	8004e7e <_malloc_r+0x102>
 8004e44:	3b01      	subs	r3, #1
 8004e46:	3301      	adds	r3, #1
 8004e48:	e7cf      	b.n	8004dea <_malloc_r+0x6e>
 8004e4a:	2b14      	cmp	r3, #20
 8004e4c:	d801      	bhi.n	8004e52 <_malloc_r+0xd6>
 8004e4e:	335b      	adds	r3, #91	; 0x5b
 8004e50:	e7ea      	b.n	8004e28 <_malloc_r+0xac>
 8004e52:	2b54      	cmp	r3, #84	; 0x54
 8004e54:	d802      	bhi.n	8004e5c <_malloc_r+0xe0>
 8004e56:	0b3b      	lsrs	r3, r7, #12
 8004e58:	336e      	adds	r3, #110	; 0x6e
 8004e5a:	e7e5      	b.n	8004e28 <_malloc_r+0xac>
 8004e5c:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 8004e60:	d802      	bhi.n	8004e68 <_malloc_r+0xec>
 8004e62:	0bfb      	lsrs	r3, r7, #15
 8004e64:	3377      	adds	r3, #119	; 0x77
 8004e66:	e7df      	b.n	8004e28 <_malloc_r+0xac>
 8004e68:	f240 5254 	movw	r2, #1364	; 0x554
 8004e6c:	4293      	cmp	r3, r2
 8004e6e:	d804      	bhi.n	8004e7a <_malloc_r+0xfe>
 8004e70:	0cbb      	lsrs	r3, r7, #18
 8004e72:	337c      	adds	r3, #124	; 0x7c
 8004e74:	e7d8      	b.n	8004e28 <_malloc_r+0xac>
 8004e76:	233f      	movs	r3, #63	; 0x3f
 8004e78:	e7d6      	b.n	8004e28 <_malloc_r+0xac>
 8004e7a:	237e      	movs	r3, #126	; 0x7e
 8004e7c:	e7d4      	b.n	8004e28 <_malloc_r+0xac>
 8004e7e:	2800      	cmp	r0, #0
 8004e80:	68e1      	ldr	r1, [r4, #12]
 8004e82:	db04      	blt.n	8004e8e <_malloc_r+0x112>
 8004e84:	68a3      	ldr	r3, [r4, #8]
 8004e86:	60d9      	str	r1, [r3, #12]
 8004e88:	608b      	str	r3, [r1, #8]
 8004e8a:	18a3      	adds	r3, r4, r2
 8004e8c:	e7a3      	b.n	8004dd6 <_malloc_r+0x5a>
 8004e8e:	460c      	mov	r4, r1
 8004e90:	e7d0      	b.n	8004e34 <_malloc_r+0xb8>
 8004e92:	2800      	cmp	r0, #0
 8004e94:	e9c6 1104 	strd	r1, r1, [r6, #16]
 8004e98:	db07      	blt.n	8004eaa <_malloc_r+0x12e>
 8004e9a:	44a4      	add	ip, r4
 8004e9c:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8004ea0:	f043 0301 	orr.w	r3, r3, #1
 8004ea4:	f8cc 3004 	str.w	r3, [ip, #4]
 8004ea8:	e799      	b.n	8004dde <_malloc_r+0x62>
 8004eaa:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8004eae:	6870      	ldr	r0, [r6, #4]
 8004eb0:	f080 8096 	bcs.w	8004fe0 <_malloc_r+0x264>
 8004eb4:	ea4f 02dc 	mov.w	r2, ip, lsr #3
 8004eb8:	ea4f 1e5c 	mov.w	lr, ip, lsr #5
 8004ebc:	f04f 0c01 	mov.w	ip, #1
 8004ec0:	3201      	adds	r2, #1
 8004ec2:	fa0c fc0e 	lsl.w	ip, ip, lr
 8004ec6:	ea4c 0000 	orr.w	r0, ip, r0
 8004eca:	6070      	str	r0, [r6, #4]
 8004ecc:	f856 c032 	ldr.w	ip, [r6, r2, lsl #3]
 8004ed0:	eb06 00c2 	add.w	r0, r6, r2, lsl #3
 8004ed4:	3808      	subs	r0, #8
 8004ed6:	e9c4 c002 	strd	ip, r0, [r4, #8]
 8004eda:	f846 4032 	str.w	r4, [r6, r2, lsl #3]
 8004ede:	f8cc 400c 	str.w	r4, [ip, #12]
 8004ee2:	2001      	movs	r0, #1
 8004ee4:	109a      	asrs	r2, r3, #2
 8004ee6:	fa00 f202 	lsl.w	r2, r0, r2
 8004eea:	6870      	ldr	r0, [r6, #4]
 8004eec:	4290      	cmp	r0, r2
 8004eee:	d326      	bcc.n	8004f3e <_malloc_r+0x1c2>
 8004ef0:	4210      	tst	r0, r2
 8004ef2:	d106      	bne.n	8004f02 <_malloc_r+0x186>
 8004ef4:	f023 0303 	bic.w	r3, r3, #3
 8004ef8:	0052      	lsls	r2, r2, #1
 8004efa:	4210      	tst	r0, r2
 8004efc:	f103 0304 	add.w	r3, r3, #4
 8004f00:	d0fa      	beq.n	8004ef8 <_malloc_r+0x17c>
 8004f02:	eb06 08c3 	add.w	r8, r6, r3, lsl #3
 8004f06:	46c1      	mov	r9, r8
 8004f08:	469e      	mov	lr, r3
 8004f0a:	f8d9 400c 	ldr.w	r4, [r9, #12]
 8004f0e:	454c      	cmp	r4, r9
 8004f10:	f040 80ba 	bne.w	8005088 <_malloc_r+0x30c>
 8004f14:	f10e 0e01 	add.w	lr, lr, #1
 8004f18:	f01e 0f03 	tst.w	lr, #3
 8004f1c:	f109 0908 	add.w	r9, r9, #8
 8004f20:	d1f3      	bne.n	8004f0a <_malloc_r+0x18e>
 8004f22:	0798      	lsls	r0, r3, #30
 8004f24:	f040 80e4 	bne.w	80050f0 <_malloc_r+0x374>
 8004f28:	6873      	ldr	r3, [r6, #4]
 8004f2a:	ea23 0302 	bic.w	r3, r3, r2
 8004f2e:	6073      	str	r3, [r6, #4]
 8004f30:	6870      	ldr	r0, [r6, #4]
 8004f32:	0052      	lsls	r2, r2, #1
 8004f34:	4290      	cmp	r0, r2
 8004f36:	d302      	bcc.n	8004f3e <_malloc_r+0x1c2>
 8004f38:	2a00      	cmp	r2, #0
 8004f3a:	f040 80e6 	bne.w	800510a <_malloc_r+0x38e>
 8004f3e:	f8d6 a008 	ldr.w	sl, [r6, #8]
 8004f42:	f8da 3004 	ldr.w	r3, [sl, #4]
 8004f46:	f023 0903 	bic.w	r9, r3, #3
 8004f4a:	45b9      	cmp	r9, r7
 8004f4c:	d304      	bcc.n	8004f58 <_malloc_r+0x1dc>
 8004f4e:	eba9 0207 	sub.w	r2, r9, r7
 8004f52:	2a0f      	cmp	r2, #15
 8004f54:	f300 8142 	bgt.w	80051dc <_malloc_r+0x460>
 8004f58:	4b46      	ldr	r3, [pc, #280]	; (8005074 <_malloc_r+0x2f8>)
 8004f5a:	6819      	ldr	r1, [r3, #0]
 8004f5c:	3110      	adds	r1, #16
 8004f5e:	4439      	add	r1, r7
 8004f60:	2008      	movs	r0, #8
 8004f62:	9101      	str	r1, [sp, #4]
 8004f64:	f001 fd70 	bl	8006a48 <sysconf>
 8004f68:	4a43      	ldr	r2, [pc, #268]	; (8005078 <_malloc_r+0x2fc>)
 8004f6a:	9901      	ldr	r1, [sp, #4]
 8004f6c:	6813      	ldr	r3, [r2, #0]
 8004f6e:	3301      	adds	r3, #1
 8004f70:	bf1f      	itttt	ne
 8004f72:	f101 31ff 	addne.w	r1, r1, #4294967295	; 0xffffffff
 8004f76:	1809      	addne	r1, r1, r0
 8004f78:	4243      	negne	r3, r0
 8004f7a:	4019      	andne	r1, r3
 8004f7c:	4680      	mov	r8, r0
 8004f7e:	4628      	mov	r0, r5
 8004f80:	9101      	str	r1, [sp, #4]
 8004f82:	f000 fb4b 	bl	800561c <_sbrk_r>
 8004f86:	1c42      	adds	r2, r0, #1
 8004f88:	eb0a 0b09 	add.w	fp, sl, r9
 8004f8c:	4604      	mov	r4, r0
 8004f8e:	f000 80f8 	beq.w	8005182 <_malloc_r+0x406>
 8004f92:	4583      	cmp	fp, r0
 8004f94:	9901      	ldr	r1, [sp, #4]
 8004f96:	4a38      	ldr	r2, [pc, #224]	; (8005078 <_malloc_r+0x2fc>)
 8004f98:	d902      	bls.n	8004fa0 <_malloc_r+0x224>
 8004f9a:	45b2      	cmp	sl, r6
 8004f9c:	f040 80f1 	bne.w	8005182 <_malloc_r+0x406>
 8004fa0:	4b36      	ldr	r3, [pc, #216]	; (800507c <_malloc_r+0x300>)
 8004fa2:	6818      	ldr	r0, [r3, #0]
 8004fa4:	45a3      	cmp	fp, r4
 8004fa6:	eb00 0e01 	add.w	lr, r0, r1
 8004faa:	f8c3 e000 	str.w	lr, [r3]
 8004fae:	f108 3cff 	add.w	ip, r8, #4294967295	; 0xffffffff
 8004fb2:	f040 80ac 	bne.w	800510e <_malloc_r+0x392>
 8004fb6:	ea1b 0f0c 	tst.w	fp, ip
 8004fba:	f040 80a8 	bne.w	800510e <_malloc_r+0x392>
 8004fbe:	68b2      	ldr	r2, [r6, #8]
 8004fc0:	4449      	add	r1, r9
 8004fc2:	f041 0101 	orr.w	r1, r1, #1
 8004fc6:	6051      	str	r1, [r2, #4]
 8004fc8:	4a2d      	ldr	r2, [pc, #180]	; (8005080 <_malloc_r+0x304>)
 8004fca:	681b      	ldr	r3, [r3, #0]
 8004fcc:	6811      	ldr	r1, [r2, #0]
 8004fce:	428b      	cmp	r3, r1
 8004fd0:	bf88      	it	hi
 8004fd2:	6013      	strhi	r3, [r2, #0]
 8004fd4:	4a2b      	ldr	r2, [pc, #172]	; (8005084 <_malloc_r+0x308>)
 8004fd6:	6811      	ldr	r1, [r2, #0]
 8004fd8:	428b      	cmp	r3, r1
 8004fda:	bf88      	it	hi
 8004fdc:	6013      	strhi	r3, [r2, #0]
 8004fde:	e0d0      	b.n	8005182 <_malloc_r+0x406>
 8004fe0:	f5bc 6f20 	cmp.w	ip, #2560	; 0xa00
 8004fe4:	ea4f 225c 	mov.w	r2, ip, lsr #9
 8004fe8:	d218      	bcs.n	800501c <_malloc_r+0x2a0>
 8004fea:	ea4f 129c 	mov.w	r2, ip, lsr #6
 8004fee:	3238      	adds	r2, #56	; 0x38
 8004ff0:	f102 0e01 	add.w	lr, r2, #1
 8004ff4:	eb06 08c2 	add.w	r8, r6, r2, lsl #3
 8004ff8:	f856 e03e 	ldr.w	lr, [r6, lr, lsl #3]
 8004ffc:	45f0      	cmp	r8, lr
 8004ffe:	d12b      	bne.n	8005058 <_malloc_r+0x2dc>
 8005000:	1092      	asrs	r2, r2, #2
 8005002:	f04f 0c01 	mov.w	ip, #1
 8005006:	fa0c f202 	lsl.w	r2, ip, r2
 800500a:	4310      	orrs	r0, r2
 800500c:	6070      	str	r0, [r6, #4]
 800500e:	e9c4 e802 	strd	lr, r8, [r4, #8]
 8005012:	f8c8 4008 	str.w	r4, [r8, #8]
 8005016:	f8ce 400c 	str.w	r4, [lr, #12]
 800501a:	e762      	b.n	8004ee2 <_malloc_r+0x166>
 800501c:	2a14      	cmp	r2, #20
 800501e:	d801      	bhi.n	8005024 <_malloc_r+0x2a8>
 8005020:	325b      	adds	r2, #91	; 0x5b
 8005022:	e7e5      	b.n	8004ff0 <_malloc_r+0x274>
 8005024:	2a54      	cmp	r2, #84	; 0x54
 8005026:	d803      	bhi.n	8005030 <_malloc_r+0x2b4>
 8005028:	ea4f 321c 	mov.w	r2, ip, lsr #12
 800502c:	326e      	adds	r2, #110	; 0x6e
 800502e:	e7df      	b.n	8004ff0 <_malloc_r+0x274>
 8005030:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8005034:	d803      	bhi.n	800503e <_malloc_r+0x2c2>
 8005036:	ea4f 32dc 	mov.w	r2, ip, lsr #15
 800503a:	3277      	adds	r2, #119	; 0x77
 800503c:	e7d8      	b.n	8004ff0 <_malloc_r+0x274>
 800503e:	f240 5e54 	movw	lr, #1364	; 0x554
 8005042:	4572      	cmp	r2, lr
 8005044:	bf9a      	itte	ls
 8005046:	ea4f 429c 	movls.w	r2, ip, lsr #18
 800504a:	327c      	addls	r2, #124	; 0x7c
 800504c:	227e      	movhi	r2, #126	; 0x7e
 800504e:	e7cf      	b.n	8004ff0 <_malloc_r+0x274>
 8005050:	f8de e008 	ldr.w	lr, [lr, #8]
 8005054:	45f0      	cmp	r8, lr
 8005056:	d005      	beq.n	8005064 <_malloc_r+0x2e8>
 8005058:	f8de 2004 	ldr.w	r2, [lr, #4]
 800505c:	f022 0203 	bic.w	r2, r2, #3
 8005060:	4562      	cmp	r2, ip
 8005062:	d8f5      	bhi.n	8005050 <_malloc_r+0x2d4>
 8005064:	f8de 800c 	ldr.w	r8, [lr, #12]
 8005068:	e7d1      	b.n	800500e <_malloc_r+0x292>
 800506a:	bf00      	nop
 800506c:	20000b68 	.word	0x20000b68
 8005070:	20000b70 	.word	0x20000b70
 8005074:	20001544 	.word	0x20001544
 8005078:	20000f70 	.word	0x20000f70
 800507c:	20001514 	.word	0x20001514
 8005080:	2000153c 	.word	0x2000153c
 8005084:	20001540 	.word	0x20001540
 8005088:	6860      	ldr	r0, [r4, #4]
 800508a:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 800508e:	f020 0003 	bic.w	r0, r0, #3
 8005092:	eba0 0a07 	sub.w	sl, r0, r7
 8005096:	f1ba 0f0f 	cmp.w	sl, #15
 800509a:	dd12      	ble.n	80050c2 <_malloc_r+0x346>
 800509c:	68a3      	ldr	r3, [r4, #8]
 800509e:	19e2      	adds	r2, r4, r7
 80050a0:	f047 0701 	orr.w	r7, r7, #1
 80050a4:	6067      	str	r7, [r4, #4]
 80050a6:	f8c3 c00c 	str.w	ip, [r3, #12]
 80050aa:	f8cc 3008 	str.w	r3, [ip, #8]
 80050ae:	f04a 0301 	orr.w	r3, sl, #1
 80050b2:	e9c6 2204 	strd	r2, r2, [r6, #16]
 80050b6:	e9c2 1102 	strd	r1, r1, [r2, #8]
 80050ba:	6053      	str	r3, [r2, #4]
 80050bc:	f844 a000 	str.w	sl, [r4, r0]
 80050c0:	e68d      	b.n	8004dde <_malloc_r+0x62>
 80050c2:	f1ba 0f00 	cmp.w	sl, #0
 80050c6:	db11      	blt.n	80050ec <_malloc_r+0x370>
 80050c8:	4420      	add	r0, r4
 80050ca:	6843      	ldr	r3, [r0, #4]
 80050cc:	f043 0301 	orr.w	r3, r3, #1
 80050d0:	6043      	str	r3, [r0, #4]
 80050d2:	f854 3f08 	ldr.w	r3, [r4, #8]!
 80050d6:	4628      	mov	r0, r5
 80050d8:	f8c3 c00c 	str.w	ip, [r3, #12]
 80050dc:	f8cc 3008 	str.w	r3, [ip, #8]
 80050e0:	f000 f8a4 	bl	800522c <__malloc_unlock>
 80050e4:	4620      	mov	r0, r4
 80050e6:	b003      	add	sp, #12
 80050e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80050ec:	4664      	mov	r4, ip
 80050ee:	e70e      	b.n	8004f0e <_malloc_r+0x192>
 80050f0:	f858 0908 	ldr.w	r0, [r8], #-8
 80050f4:	4540      	cmp	r0, r8
 80050f6:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 80050fa:	f43f af12 	beq.w	8004f22 <_malloc_r+0x1a6>
 80050fe:	e717      	b.n	8004f30 <_malloc_r+0x1b4>
 8005100:	3304      	adds	r3, #4
 8005102:	0052      	lsls	r2, r2, #1
 8005104:	4210      	tst	r0, r2
 8005106:	d0fb      	beq.n	8005100 <_malloc_r+0x384>
 8005108:	e6fb      	b.n	8004f02 <_malloc_r+0x186>
 800510a:	4673      	mov	r3, lr
 800510c:	e7fa      	b.n	8005104 <_malloc_r+0x388>
 800510e:	6810      	ldr	r0, [r2, #0]
 8005110:	3001      	adds	r0, #1
 8005112:	bf1b      	ittet	ne
 8005114:	eba4 0b0b 	subne.w	fp, r4, fp
 8005118:	eb0b 020e 	addne.w	r2, fp, lr
 800511c:	6014      	streq	r4, [r2, #0]
 800511e:	601a      	strne	r2, [r3, #0]
 8005120:	f014 0b07 	ands.w	fp, r4, #7
 8005124:	bf1a      	itte	ne
 8005126:	f1cb 0008 	rsbne	r0, fp, #8
 800512a:	1824      	addne	r4, r4, r0
 800512c:	4658      	moveq	r0, fp
 800512e:	1862      	adds	r2, r4, r1
 8005130:	ea02 010c 	and.w	r1, r2, ip
 8005134:	4480      	add	r8, r0
 8005136:	eba8 0801 	sub.w	r8, r8, r1
 800513a:	ea08 080c 	and.w	r8, r8, ip
 800513e:	4641      	mov	r1, r8
 8005140:	4628      	mov	r0, r5
 8005142:	9201      	str	r2, [sp, #4]
 8005144:	f000 fa6a 	bl	800561c <_sbrk_r>
 8005148:	1c43      	adds	r3, r0, #1
 800514a:	9a01      	ldr	r2, [sp, #4]
 800514c:	4b28      	ldr	r3, [pc, #160]	; (80051f0 <_malloc_r+0x474>)
 800514e:	d107      	bne.n	8005160 <_malloc_r+0x3e4>
 8005150:	f1bb 0f00 	cmp.w	fp, #0
 8005154:	d023      	beq.n	800519e <_malloc_r+0x422>
 8005156:	f1ab 0008 	sub.w	r0, fp, #8
 800515a:	4410      	add	r0, r2
 800515c:	f04f 0800 	mov.w	r8, #0
 8005160:	681a      	ldr	r2, [r3, #0]
 8005162:	60b4      	str	r4, [r6, #8]
 8005164:	1b00      	subs	r0, r0, r4
 8005166:	4440      	add	r0, r8
 8005168:	4442      	add	r2, r8
 800516a:	f040 0001 	orr.w	r0, r0, #1
 800516e:	45b2      	cmp	sl, r6
 8005170:	601a      	str	r2, [r3, #0]
 8005172:	6060      	str	r0, [r4, #4]
 8005174:	f43f af28 	beq.w	8004fc8 <_malloc_r+0x24c>
 8005178:	f1b9 0f0f 	cmp.w	r9, #15
 800517c:	d812      	bhi.n	80051a4 <_malloc_r+0x428>
 800517e:	2301      	movs	r3, #1
 8005180:	6063      	str	r3, [r4, #4]
 8005182:	68b3      	ldr	r3, [r6, #8]
 8005184:	685b      	ldr	r3, [r3, #4]
 8005186:	f023 0303 	bic.w	r3, r3, #3
 800518a:	42bb      	cmp	r3, r7
 800518c:	eba3 0207 	sub.w	r2, r3, r7
 8005190:	d301      	bcc.n	8005196 <_malloc_r+0x41a>
 8005192:	2a0f      	cmp	r2, #15
 8005194:	dc22      	bgt.n	80051dc <_malloc_r+0x460>
 8005196:	4628      	mov	r0, r5
 8005198:	f000 f848 	bl	800522c <__malloc_unlock>
 800519c:	e5fa      	b.n	8004d94 <_malloc_r+0x18>
 800519e:	4610      	mov	r0, r2
 80051a0:	46d8      	mov	r8, fp
 80051a2:	e7dd      	b.n	8005160 <_malloc_r+0x3e4>
 80051a4:	f8da 2004 	ldr.w	r2, [sl, #4]
 80051a8:	f1a9 090c 	sub.w	r9, r9, #12
 80051ac:	f029 0907 	bic.w	r9, r9, #7
 80051b0:	f002 0201 	and.w	r2, r2, #1
 80051b4:	ea42 0209 	orr.w	r2, r2, r9
 80051b8:	f8ca 2004 	str.w	r2, [sl, #4]
 80051bc:	2105      	movs	r1, #5
 80051be:	eb0a 0209 	add.w	r2, sl, r9
 80051c2:	f1b9 0f0f 	cmp.w	r9, #15
 80051c6:	e9c2 1101 	strd	r1, r1, [r2, #4]
 80051ca:	f67f aefd 	bls.w	8004fc8 <_malloc_r+0x24c>
 80051ce:	f10a 0108 	add.w	r1, sl, #8
 80051d2:	4628      	mov	r0, r5
 80051d4:	f002 fb90 	bl	80078f8 <_free_r>
 80051d8:	4b05      	ldr	r3, [pc, #20]	; (80051f0 <_malloc_r+0x474>)
 80051da:	e6f5      	b.n	8004fc8 <_malloc_r+0x24c>
 80051dc:	68b4      	ldr	r4, [r6, #8]
 80051de:	f047 0301 	orr.w	r3, r7, #1
 80051e2:	4427      	add	r7, r4
 80051e4:	f042 0201 	orr.w	r2, r2, #1
 80051e8:	6063      	str	r3, [r4, #4]
 80051ea:	60b7      	str	r7, [r6, #8]
 80051ec:	607a      	str	r2, [r7, #4]
 80051ee:	e5f6      	b.n	8004dde <_malloc_r+0x62>
 80051f0:	20001514 	.word	0x20001514

080051f4 <memcpy>:
 80051f4:	440a      	add	r2, r1
 80051f6:	4291      	cmp	r1, r2
 80051f8:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80051fc:	d100      	bne.n	8005200 <memcpy+0xc>
 80051fe:	4770      	bx	lr
 8005200:	b510      	push	{r4, lr}
 8005202:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005206:	f803 4f01 	strb.w	r4, [r3, #1]!
 800520a:	4291      	cmp	r1, r2
 800520c:	d1f9      	bne.n	8005202 <memcpy+0xe>
 800520e:	bd10      	pop	{r4, pc}

08005210 <memset>:
 8005210:	4402      	add	r2, r0
 8005212:	4603      	mov	r3, r0
 8005214:	4293      	cmp	r3, r2
 8005216:	d100      	bne.n	800521a <memset+0xa>
 8005218:	4770      	bx	lr
 800521a:	f803 1b01 	strb.w	r1, [r3], #1
 800521e:	e7f9      	b.n	8005214 <memset+0x4>

08005220 <__malloc_lock>:
 8005220:	4801      	ldr	r0, [pc, #4]	; (8005228 <__malloc_lock+0x8>)
 8005222:	f002 bd99 	b.w	8007d58 <__retarget_lock_acquire_recursive>
 8005226:	bf00      	nop
 8005228:	20001549 	.word	0x20001549

0800522c <__malloc_unlock>:
 800522c:	4801      	ldr	r0, [pc, #4]	; (8005234 <__malloc_unlock+0x8>)
 800522e:	f002 bd94 	b.w	8007d5a <__retarget_lock_release_recursive>
 8005232:	bf00      	nop
 8005234:	20001549 	.word	0x20001549

08005238 <_puts_r>:
 8005238:	b530      	push	{r4, r5, lr}
 800523a:	4605      	mov	r5, r0
 800523c:	b089      	sub	sp, #36	; 0x24
 800523e:	4608      	mov	r0, r1
 8005240:	460c      	mov	r4, r1
 8005242:	f7fa ffc5 	bl	80001d0 <strlen>
 8005246:	4b1e      	ldr	r3, [pc, #120]	; (80052c0 <_puts_r+0x88>)
 8005248:	9306      	str	r3, [sp, #24]
 800524a:	2301      	movs	r3, #1
 800524c:	e9cd 4004 	strd	r4, r0, [sp, #16]
 8005250:	9307      	str	r3, [sp, #28]
 8005252:	4418      	add	r0, r3
 8005254:	ab04      	add	r3, sp, #16
 8005256:	9301      	str	r3, [sp, #4]
 8005258:	2302      	movs	r3, #2
 800525a:	9302      	str	r3, [sp, #8]
 800525c:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800525e:	68ac      	ldr	r4, [r5, #8]
 8005260:	9003      	str	r0, [sp, #12]
 8005262:	b913      	cbnz	r3, 800526a <_puts_r+0x32>
 8005264:	4628      	mov	r0, r5
 8005266:	f002 fab7 	bl	80077d8 <__sinit>
 800526a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800526c:	07db      	lsls	r3, r3, #31
 800526e:	d405      	bmi.n	800527c <_puts_r+0x44>
 8005270:	89a3      	ldrh	r3, [r4, #12]
 8005272:	0598      	lsls	r0, r3, #22
 8005274:	d402      	bmi.n	800527c <_puts_r+0x44>
 8005276:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005278:	f002 fd6e 	bl	8007d58 <__retarget_lock_acquire_recursive>
 800527c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005280:	0499      	lsls	r1, r3, #18
 8005282:	d406      	bmi.n	8005292 <_puts_r+0x5a>
 8005284:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8005288:	81a3      	strh	r3, [r4, #12]
 800528a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800528c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8005290:	6663      	str	r3, [r4, #100]	; 0x64
 8005292:	4628      	mov	r0, r5
 8005294:	aa01      	add	r2, sp, #4
 8005296:	4621      	mov	r1, r4
 8005298:	f002 fbee 	bl	8007a78 <__sfvwrite_r>
 800529c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800529e:	2800      	cmp	r0, #0
 80052a0:	bf14      	ite	ne
 80052a2:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
 80052a6:	250a      	moveq	r5, #10
 80052a8:	07da      	lsls	r2, r3, #31
 80052aa:	d405      	bmi.n	80052b8 <_puts_r+0x80>
 80052ac:	89a3      	ldrh	r3, [r4, #12]
 80052ae:	059b      	lsls	r3, r3, #22
 80052b0:	d402      	bmi.n	80052b8 <_puts_r+0x80>
 80052b2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80052b4:	f002 fd51 	bl	8007d5a <__retarget_lock_release_recursive>
 80052b8:	4628      	mov	r0, r5
 80052ba:	b009      	add	sp, #36	; 0x24
 80052bc:	bd30      	pop	{r4, r5, pc}
 80052be:	bf00      	nop
 80052c0:	0800e576 	.word	0x0800e576

080052c4 <puts>:
 80052c4:	4b02      	ldr	r3, [pc, #8]	; (80052d0 <puts+0xc>)
 80052c6:	4601      	mov	r1, r0
 80052c8:	6818      	ldr	r0, [r3, #0]
 80052ca:	f7ff bfb5 	b.w	8005238 <_puts_r>
 80052ce:	bf00      	nop
 80052d0:	20000738 	.word	0x20000738

080052d4 <_realloc_r>:
 80052d4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052d8:	4681      	mov	r9, r0
 80052da:	460c      	mov	r4, r1
 80052dc:	b929      	cbnz	r1, 80052ea <_realloc_r+0x16>
 80052de:	4611      	mov	r1, r2
 80052e0:	b003      	add	sp, #12
 80052e2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052e6:	f7ff bd49 	b.w	8004d7c <_malloc_r>
 80052ea:	9201      	str	r2, [sp, #4]
 80052ec:	f7ff ff98 	bl	8005220 <__malloc_lock>
 80052f0:	9a01      	ldr	r2, [sp, #4]
 80052f2:	f102 080b 	add.w	r8, r2, #11
 80052f6:	f1b8 0f16 	cmp.w	r8, #22
 80052fa:	d90b      	bls.n	8005314 <_realloc_r+0x40>
 80052fc:	f038 0807 	bics.w	r8, r8, #7
 8005300:	d50a      	bpl.n	8005318 <_realloc_r+0x44>
 8005302:	230c      	movs	r3, #12
 8005304:	f8c9 3000 	str.w	r3, [r9]
 8005308:	f04f 0b00 	mov.w	fp, #0
 800530c:	4658      	mov	r0, fp
 800530e:	b003      	add	sp, #12
 8005310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005314:	f04f 0810 	mov.w	r8, #16
 8005318:	4590      	cmp	r8, r2
 800531a:	d3f2      	bcc.n	8005302 <_realloc_r+0x2e>
 800531c:	f854 5c04 	ldr.w	r5, [r4, #-4]
 8005320:	f025 0603 	bic.w	r6, r5, #3
 8005324:	45b0      	cmp	r8, r6
 8005326:	f1a4 0a08 	sub.w	sl, r4, #8
 800532a:	f340 816e 	ble.w	800560a <_realloc_r+0x336>
 800532e:	499b      	ldr	r1, [pc, #620]	; (800559c <_realloc_r+0x2c8>)
 8005330:	f8d1 c008 	ldr.w	ip, [r1, #8]
 8005334:	eb0a 0306 	add.w	r3, sl, r6
 8005338:	459c      	cmp	ip, r3
 800533a:	6859      	ldr	r1, [r3, #4]
 800533c:	d005      	beq.n	800534a <_realloc_r+0x76>
 800533e:	f021 0001 	bic.w	r0, r1, #1
 8005342:	4418      	add	r0, r3
 8005344:	6840      	ldr	r0, [r0, #4]
 8005346:	07c7      	lsls	r7, r0, #31
 8005348:	d427      	bmi.n	800539a <_realloc_r+0xc6>
 800534a:	f021 0103 	bic.w	r1, r1, #3
 800534e:	459c      	cmp	ip, r3
 8005350:	eb06 0701 	add.w	r7, r6, r1
 8005354:	d119      	bne.n	800538a <_realloc_r+0xb6>
 8005356:	f108 0010 	add.w	r0, r8, #16
 800535a:	42b8      	cmp	r0, r7
 800535c:	dc1f      	bgt.n	800539e <_realloc_r+0xca>
 800535e:	eb0a 0308 	add.w	r3, sl, r8
 8005362:	4a8e      	ldr	r2, [pc, #568]	; (800559c <_realloc_r+0x2c8>)
 8005364:	eba7 0708 	sub.w	r7, r7, r8
 8005368:	f047 0701 	orr.w	r7, r7, #1
 800536c:	6093      	str	r3, [r2, #8]
 800536e:	605f      	str	r7, [r3, #4]
 8005370:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8005374:	f003 0301 	and.w	r3, r3, #1
 8005378:	ea43 0308 	orr.w	r3, r3, r8
 800537c:	f844 3c04 	str.w	r3, [r4, #-4]
 8005380:	4648      	mov	r0, r9
 8005382:	f7ff ff53 	bl	800522c <__malloc_unlock>
 8005386:	46a3      	mov	fp, r4
 8005388:	e7c0      	b.n	800530c <_realloc_r+0x38>
 800538a:	45b8      	cmp	r8, r7
 800538c:	dc07      	bgt.n	800539e <_realloc_r+0xca>
 800538e:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 8005392:	60da      	str	r2, [r3, #12]
 8005394:	6093      	str	r3, [r2, #8]
 8005396:	4655      	mov	r5, sl
 8005398:	e07f      	b.n	800549a <_realloc_r+0x1c6>
 800539a:	2100      	movs	r1, #0
 800539c:	460b      	mov	r3, r1
 800539e:	07e8      	lsls	r0, r5, #31
 80053a0:	f100 80e5 	bmi.w	800556e <_realloc_r+0x29a>
 80053a4:	f854 5c08 	ldr.w	r5, [r4, #-8]
 80053a8:	ebaa 0505 	sub.w	r5, sl, r5
 80053ac:	6868      	ldr	r0, [r5, #4]
 80053ae:	f020 0003 	bic.w	r0, r0, #3
 80053b2:	eb00 0b06 	add.w	fp, r0, r6
 80053b6:	2b00      	cmp	r3, #0
 80053b8:	f000 80a5 	beq.w	8005506 <_realloc_r+0x232>
 80053bc:	459c      	cmp	ip, r3
 80053be:	eb01 070b 	add.w	r7, r1, fp
 80053c2:	d14a      	bne.n	800545a <_realloc_r+0x186>
 80053c4:	f108 0310 	add.w	r3, r8, #16
 80053c8:	42bb      	cmp	r3, r7
 80053ca:	f300 809c 	bgt.w	8005506 <_realloc_r+0x232>
 80053ce:	46ab      	mov	fp, r5
 80053d0:	68eb      	ldr	r3, [r5, #12]
 80053d2:	f85b 2f08 	ldr.w	r2, [fp, #8]!
 80053d6:	60d3      	str	r3, [r2, #12]
 80053d8:	609a      	str	r2, [r3, #8]
 80053da:	1f32      	subs	r2, r6, #4
 80053dc:	2a24      	cmp	r2, #36	; 0x24
 80053de:	d837      	bhi.n	8005450 <_realloc_r+0x17c>
 80053e0:	2a13      	cmp	r2, #19
 80053e2:	d933      	bls.n	800544c <_realloc_r+0x178>
 80053e4:	6823      	ldr	r3, [r4, #0]
 80053e6:	60ab      	str	r3, [r5, #8]
 80053e8:	6863      	ldr	r3, [r4, #4]
 80053ea:	60eb      	str	r3, [r5, #12]
 80053ec:	2a1b      	cmp	r2, #27
 80053ee:	d81b      	bhi.n	8005428 <_realloc_r+0x154>
 80053f0:	3408      	adds	r4, #8
 80053f2:	f105 0310 	add.w	r3, r5, #16
 80053f6:	6822      	ldr	r2, [r4, #0]
 80053f8:	601a      	str	r2, [r3, #0]
 80053fa:	6862      	ldr	r2, [r4, #4]
 80053fc:	605a      	str	r2, [r3, #4]
 80053fe:	68a2      	ldr	r2, [r4, #8]
 8005400:	609a      	str	r2, [r3, #8]
 8005402:	eb05 0308 	add.w	r3, r5, r8
 8005406:	4a65      	ldr	r2, [pc, #404]	; (800559c <_realloc_r+0x2c8>)
 8005408:	eba7 0708 	sub.w	r7, r7, r8
 800540c:	f047 0701 	orr.w	r7, r7, #1
 8005410:	6093      	str	r3, [r2, #8]
 8005412:	605f      	str	r7, [r3, #4]
 8005414:	686b      	ldr	r3, [r5, #4]
 8005416:	f003 0301 	and.w	r3, r3, #1
 800541a:	ea43 0308 	orr.w	r3, r3, r8
 800541e:	606b      	str	r3, [r5, #4]
 8005420:	4648      	mov	r0, r9
 8005422:	f7ff ff03 	bl	800522c <__malloc_unlock>
 8005426:	e771      	b.n	800530c <_realloc_r+0x38>
 8005428:	68a3      	ldr	r3, [r4, #8]
 800542a:	612b      	str	r3, [r5, #16]
 800542c:	68e3      	ldr	r3, [r4, #12]
 800542e:	616b      	str	r3, [r5, #20]
 8005430:	2a24      	cmp	r2, #36	; 0x24
 8005432:	bf01      	itttt	eq
 8005434:	6923      	ldreq	r3, [r4, #16]
 8005436:	61ab      	streq	r3, [r5, #24]
 8005438:	6962      	ldreq	r2, [r4, #20]
 800543a:	61ea      	streq	r2, [r5, #28]
 800543c:	bf19      	ittee	ne
 800543e:	3410      	addne	r4, #16
 8005440:	f105 0318 	addne.w	r3, r5, #24
 8005444:	f105 0320 	addeq.w	r3, r5, #32
 8005448:	3418      	addeq	r4, #24
 800544a:	e7d4      	b.n	80053f6 <_realloc_r+0x122>
 800544c:	465b      	mov	r3, fp
 800544e:	e7d2      	b.n	80053f6 <_realloc_r+0x122>
 8005450:	4621      	mov	r1, r4
 8005452:	4658      	mov	r0, fp
 8005454:	f002 fc82 	bl	8007d5c <memmove>
 8005458:	e7d3      	b.n	8005402 <_realloc_r+0x12e>
 800545a:	45b8      	cmp	r8, r7
 800545c:	dc53      	bgt.n	8005506 <_realloc_r+0x232>
 800545e:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 8005462:	4628      	mov	r0, r5
 8005464:	60da      	str	r2, [r3, #12]
 8005466:	6093      	str	r3, [r2, #8]
 8005468:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800546c:	68eb      	ldr	r3, [r5, #12]
 800546e:	60d3      	str	r3, [r2, #12]
 8005470:	609a      	str	r2, [r3, #8]
 8005472:	1f32      	subs	r2, r6, #4
 8005474:	2a24      	cmp	r2, #36	; 0x24
 8005476:	d842      	bhi.n	80054fe <_realloc_r+0x22a>
 8005478:	2a13      	cmp	r2, #19
 800547a:	d908      	bls.n	800548e <_realloc_r+0x1ba>
 800547c:	6823      	ldr	r3, [r4, #0]
 800547e:	60ab      	str	r3, [r5, #8]
 8005480:	6863      	ldr	r3, [r4, #4]
 8005482:	60eb      	str	r3, [r5, #12]
 8005484:	2a1b      	cmp	r2, #27
 8005486:	d828      	bhi.n	80054da <_realloc_r+0x206>
 8005488:	3408      	adds	r4, #8
 800548a:	f105 0010 	add.w	r0, r5, #16
 800548e:	6823      	ldr	r3, [r4, #0]
 8005490:	6003      	str	r3, [r0, #0]
 8005492:	6863      	ldr	r3, [r4, #4]
 8005494:	6043      	str	r3, [r0, #4]
 8005496:	68a3      	ldr	r3, [r4, #8]
 8005498:	6083      	str	r3, [r0, #8]
 800549a:	686b      	ldr	r3, [r5, #4]
 800549c:	eba7 0008 	sub.w	r0, r7, r8
 80054a0:	280f      	cmp	r0, #15
 80054a2:	f003 0301 	and.w	r3, r3, #1
 80054a6:	eb05 0207 	add.w	r2, r5, r7
 80054aa:	f240 80b0 	bls.w	800560e <_realloc_r+0x33a>
 80054ae:	eb05 0108 	add.w	r1, r5, r8
 80054b2:	ea48 0303 	orr.w	r3, r8, r3
 80054b6:	f040 0001 	orr.w	r0, r0, #1
 80054ba:	606b      	str	r3, [r5, #4]
 80054bc:	6048      	str	r0, [r1, #4]
 80054be:	6853      	ldr	r3, [r2, #4]
 80054c0:	f043 0301 	orr.w	r3, r3, #1
 80054c4:	6053      	str	r3, [r2, #4]
 80054c6:	3108      	adds	r1, #8
 80054c8:	4648      	mov	r0, r9
 80054ca:	f002 fa15 	bl	80078f8 <_free_r>
 80054ce:	4648      	mov	r0, r9
 80054d0:	f7ff feac 	bl	800522c <__malloc_unlock>
 80054d4:	f105 0b08 	add.w	fp, r5, #8
 80054d8:	e718      	b.n	800530c <_realloc_r+0x38>
 80054da:	68a3      	ldr	r3, [r4, #8]
 80054dc:	612b      	str	r3, [r5, #16]
 80054de:	68e3      	ldr	r3, [r4, #12]
 80054e0:	616b      	str	r3, [r5, #20]
 80054e2:	2a24      	cmp	r2, #36	; 0x24
 80054e4:	bf01      	itttt	eq
 80054e6:	6923      	ldreq	r3, [r4, #16]
 80054e8:	61ab      	streq	r3, [r5, #24]
 80054ea:	6963      	ldreq	r3, [r4, #20]
 80054ec:	61eb      	streq	r3, [r5, #28]
 80054ee:	bf19      	ittee	ne
 80054f0:	3410      	addne	r4, #16
 80054f2:	f105 0018 	addne.w	r0, r5, #24
 80054f6:	f105 0020 	addeq.w	r0, r5, #32
 80054fa:	3418      	addeq	r4, #24
 80054fc:	e7c7      	b.n	800548e <_realloc_r+0x1ba>
 80054fe:	4621      	mov	r1, r4
 8005500:	f002 fc2c 	bl	8007d5c <memmove>
 8005504:	e7c9      	b.n	800549a <_realloc_r+0x1c6>
 8005506:	45d8      	cmp	r8, fp
 8005508:	dc31      	bgt.n	800556e <_realloc_r+0x29a>
 800550a:	4628      	mov	r0, r5
 800550c:	68eb      	ldr	r3, [r5, #12]
 800550e:	f850 2f08 	ldr.w	r2, [r0, #8]!
 8005512:	60d3      	str	r3, [r2, #12]
 8005514:	609a      	str	r2, [r3, #8]
 8005516:	1f32      	subs	r2, r6, #4
 8005518:	2a24      	cmp	r2, #36	; 0x24
 800551a:	d824      	bhi.n	8005566 <_realloc_r+0x292>
 800551c:	2a13      	cmp	r2, #19
 800551e:	d908      	bls.n	8005532 <_realloc_r+0x25e>
 8005520:	6823      	ldr	r3, [r4, #0]
 8005522:	60ab      	str	r3, [r5, #8]
 8005524:	6863      	ldr	r3, [r4, #4]
 8005526:	60eb      	str	r3, [r5, #12]
 8005528:	2a1b      	cmp	r2, #27
 800552a:	d80a      	bhi.n	8005542 <_realloc_r+0x26e>
 800552c:	3408      	adds	r4, #8
 800552e:	f105 0010 	add.w	r0, r5, #16
 8005532:	6823      	ldr	r3, [r4, #0]
 8005534:	6003      	str	r3, [r0, #0]
 8005536:	6863      	ldr	r3, [r4, #4]
 8005538:	6043      	str	r3, [r0, #4]
 800553a:	68a3      	ldr	r3, [r4, #8]
 800553c:	6083      	str	r3, [r0, #8]
 800553e:	465f      	mov	r7, fp
 8005540:	e7ab      	b.n	800549a <_realloc_r+0x1c6>
 8005542:	68a3      	ldr	r3, [r4, #8]
 8005544:	612b      	str	r3, [r5, #16]
 8005546:	68e3      	ldr	r3, [r4, #12]
 8005548:	616b      	str	r3, [r5, #20]
 800554a:	2a24      	cmp	r2, #36	; 0x24
 800554c:	bf01      	itttt	eq
 800554e:	6923      	ldreq	r3, [r4, #16]
 8005550:	61ab      	streq	r3, [r5, #24]
 8005552:	6963      	ldreq	r3, [r4, #20]
 8005554:	61eb      	streq	r3, [r5, #28]
 8005556:	bf19      	ittee	ne
 8005558:	3410      	addne	r4, #16
 800555a:	f105 0018 	addne.w	r0, r5, #24
 800555e:	f105 0020 	addeq.w	r0, r5, #32
 8005562:	3418      	addeq	r4, #24
 8005564:	e7e5      	b.n	8005532 <_realloc_r+0x25e>
 8005566:	4621      	mov	r1, r4
 8005568:	f002 fbf8 	bl	8007d5c <memmove>
 800556c:	e7e7      	b.n	800553e <_realloc_r+0x26a>
 800556e:	4611      	mov	r1, r2
 8005570:	4648      	mov	r0, r9
 8005572:	f7ff fc03 	bl	8004d7c <_malloc_r>
 8005576:	4683      	mov	fp, r0
 8005578:	2800      	cmp	r0, #0
 800557a:	f43f af51 	beq.w	8005420 <_realloc_r+0x14c>
 800557e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8005582:	f023 0301 	bic.w	r3, r3, #1
 8005586:	4453      	add	r3, sl
 8005588:	f1a0 0208 	sub.w	r2, r0, #8
 800558c:	4293      	cmp	r3, r2
 800558e:	d107      	bne.n	80055a0 <_realloc_r+0x2cc>
 8005590:	f850 7c04 	ldr.w	r7, [r0, #-4]
 8005594:	f027 0703 	bic.w	r7, r7, #3
 8005598:	4437      	add	r7, r6
 800559a:	e6fc      	b.n	8005396 <_realloc_r+0xc2>
 800559c:	20000b68 	.word	0x20000b68
 80055a0:	1f32      	subs	r2, r6, #4
 80055a2:	2a24      	cmp	r2, #36	; 0x24
 80055a4:	d82d      	bhi.n	8005602 <_realloc_r+0x32e>
 80055a6:	2a13      	cmp	r2, #19
 80055a8:	d928      	bls.n	80055fc <_realloc_r+0x328>
 80055aa:	6823      	ldr	r3, [r4, #0]
 80055ac:	6003      	str	r3, [r0, #0]
 80055ae:	6863      	ldr	r3, [r4, #4]
 80055b0:	6043      	str	r3, [r0, #4]
 80055b2:	2a1b      	cmp	r2, #27
 80055b4:	d80e      	bhi.n	80055d4 <_realloc_r+0x300>
 80055b6:	f104 0208 	add.w	r2, r4, #8
 80055ba:	f100 0308 	add.w	r3, r0, #8
 80055be:	6811      	ldr	r1, [r2, #0]
 80055c0:	6019      	str	r1, [r3, #0]
 80055c2:	6851      	ldr	r1, [r2, #4]
 80055c4:	6059      	str	r1, [r3, #4]
 80055c6:	6892      	ldr	r2, [r2, #8]
 80055c8:	609a      	str	r2, [r3, #8]
 80055ca:	4621      	mov	r1, r4
 80055cc:	4648      	mov	r0, r9
 80055ce:	f002 f993 	bl	80078f8 <_free_r>
 80055d2:	e725      	b.n	8005420 <_realloc_r+0x14c>
 80055d4:	68a3      	ldr	r3, [r4, #8]
 80055d6:	6083      	str	r3, [r0, #8]
 80055d8:	68e3      	ldr	r3, [r4, #12]
 80055da:	60c3      	str	r3, [r0, #12]
 80055dc:	2a24      	cmp	r2, #36	; 0x24
 80055de:	bf01      	itttt	eq
 80055e0:	6923      	ldreq	r3, [r4, #16]
 80055e2:	6103      	streq	r3, [r0, #16]
 80055e4:	6961      	ldreq	r1, [r4, #20]
 80055e6:	6141      	streq	r1, [r0, #20]
 80055e8:	bf19      	ittee	ne
 80055ea:	f104 0210 	addne.w	r2, r4, #16
 80055ee:	f100 0310 	addne.w	r3, r0, #16
 80055f2:	f104 0218 	addeq.w	r2, r4, #24
 80055f6:	f100 0318 	addeq.w	r3, r0, #24
 80055fa:	e7e0      	b.n	80055be <_realloc_r+0x2ea>
 80055fc:	4603      	mov	r3, r0
 80055fe:	4622      	mov	r2, r4
 8005600:	e7dd      	b.n	80055be <_realloc_r+0x2ea>
 8005602:	4621      	mov	r1, r4
 8005604:	f002 fbaa 	bl	8007d5c <memmove>
 8005608:	e7df      	b.n	80055ca <_realloc_r+0x2f6>
 800560a:	4637      	mov	r7, r6
 800560c:	e6c3      	b.n	8005396 <_realloc_r+0xc2>
 800560e:	431f      	orrs	r7, r3
 8005610:	606f      	str	r7, [r5, #4]
 8005612:	6853      	ldr	r3, [r2, #4]
 8005614:	f043 0301 	orr.w	r3, r3, #1
 8005618:	6053      	str	r3, [r2, #4]
 800561a:	e758      	b.n	80054ce <_realloc_r+0x1fa>

0800561c <_sbrk_r>:
 800561c:	b538      	push	{r3, r4, r5, lr}
 800561e:	4d06      	ldr	r5, [pc, #24]	; (8005638 <_sbrk_r+0x1c>)
 8005620:	2300      	movs	r3, #0
 8005622:	4604      	mov	r4, r0
 8005624:	4608      	mov	r0, r1
 8005626:	602b      	str	r3, [r5, #0]
 8005628:	f7fb feaa 	bl	8001380 <_sbrk>
 800562c:	1c43      	adds	r3, r0, #1
 800562e:	d102      	bne.n	8005636 <_sbrk_r+0x1a>
 8005630:	682b      	ldr	r3, [r5, #0]
 8005632:	b103      	cbz	r3, 8005636 <_sbrk_r+0x1a>
 8005634:	6023      	str	r3, [r4, #0]
 8005636:	bd38      	pop	{r3, r4, r5, pc}
 8005638:	2000154c 	.word	0x2000154c

0800563c <sprintf>:
 800563c:	b40e      	push	{r1, r2, r3}
 800563e:	b500      	push	{lr}
 8005640:	b09c      	sub	sp, #112	; 0x70
 8005642:	ab1d      	add	r3, sp, #116	; 0x74
 8005644:	9002      	str	r0, [sp, #8]
 8005646:	9006      	str	r0, [sp, #24]
 8005648:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800564c:	4809      	ldr	r0, [pc, #36]	; (8005674 <sprintf+0x38>)
 800564e:	9107      	str	r1, [sp, #28]
 8005650:	9104      	str	r1, [sp, #16]
 8005652:	4909      	ldr	r1, [pc, #36]	; (8005678 <sprintf+0x3c>)
 8005654:	f853 2b04 	ldr.w	r2, [r3], #4
 8005658:	9105      	str	r1, [sp, #20]
 800565a:	6800      	ldr	r0, [r0, #0]
 800565c:	9301      	str	r3, [sp, #4]
 800565e:	a902      	add	r1, sp, #8
 8005660:	f000 f80e 	bl	8005680 <_svfprintf_r>
 8005664:	9b02      	ldr	r3, [sp, #8]
 8005666:	2200      	movs	r2, #0
 8005668:	701a      	strb	r2, [r3, #0]
 800566a:	b01c      	add	sp, #112	; 0x70
 800566c:	f85d eb04 	ldr.w	lr, [sp], #4
 8005670:	b003      	add	sp, #12
 8005672:	4770      	bx	lr
 8005674:	20000738 	.word	0x20000738
 8005678:	ffff0208 	.word	0xffff0208
 800567c:	00000000 	.word	0x00000000

08005680 <_svfprintf_r>:
 8005680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005684:	ed2d 8b04 	vpush	{d8-d9}
 8005688:	b0cf      	sub	sp, #316	; 0x13c
 800568a:	4688      	mov	r8, r1
 800568c:	4691      	mov	r9, r2
 800568e:	461e      	mov	r6, r3
 8005690:	4682      	mov	sl, r0
 8005692:	f002 fb5b 	bl	8007d4c <_localeconv_r>
 8005696:	6803      	ldr	r3, [r0, #0]
 8005698:	9313      	str	r3, [sp, #76]	; 0x4c
 800569a:	4618      	mov	r0, r3
 800569c:	f7fa fd98 	bl	80001d0 <strlen>
 80056a0:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 80056a4:	900d      	str	r0, [sp, #52]	; 0x34
 80056a6:	0618      	lsls	r0, r3, #24
 80056a8:	d51a      	bpl.n	80056e0 <_svfprintf_r+0x60>
 80056aa:	f8d8 3010 	ldr.w	r3, [r8, #16]
 80056ae:	b9bb      	cbnz	r3, 80056e0 <_svfprintf_r+0x60>
 80056b0:	2140      	movs	r1, #64	; 0x40
 80056b2:	4650      	mov	r0, sl
 80056b4:	f7ff fb62 	bl	8004d7c <_malloc_r>
 80056b8:	f8c8 0000 	str.w	r0, [r8]
 80056bc:	f8c8 0010 	str.w	r0, [r8, #16]
 80056c0:	b958      	cbnz	r0, 80056da <_svfprintf_r+0x5a>
 80056c2:	230c      	movs	r3, #12
 80056c4:	f8ca 3000 	str.w	r3, [sl]
 80056c8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80056cc:	930c      	str	r3, [sp, #48]	; 0x30
 80056ce:	980c      	ldr	r0, [sp, #48]	; 0x30
 80056d0:	b04f      	add	sp, #316	; 0x13c
 80056d2:	ecbd 8b04 	vpop	{d8-d9}
 80056d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80056da:	2340      	movs	r3, #64	; 0x40
 80056dc:	f8c8 3014 	str.w	r3, [r8, #20]
 80056e0:	ed9f 7b93 	vldr	d7, [pc, #588]	; 8005930 <_svfprintf_r+0x2b0>
 80056e4:	2500      	movs	r5, #0
 80056e6:	e9cd 5523 	strd	r5, r5, [sp, #140]	; 0x8c
 80056ea:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 80056ee:	e9cd 5515 	strd	r5, r5, [sp, #84]	; 0x54
 80056f2:	ac25      	add	r4, sp, #148	; 0x94
 80056f4:	9422      	str	r4, [sp, #136]	; 0x88
 80056f6:	9505      	str	r5, [sp, #20]
 80056f8:	950a      	str	r5, [sp, #40]	; 0x28
 80056fa:	9512      	str	r5, [sp, #72]	; 0x48
 80056fc:	9514      	str	r5, [sp, #80]	; 0x50
 80056fe:	950c      	str	r5, [sp, #48]	; 0x30
 8005700:	464b      	mov	r3, r9
 8005702:	461d      	mov	r5, r3
 8005704:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005708:	b10a      	cbz	r2, 800570e <_svfprintf_r+0x8e>
 800570a:	2a25      	cmp	r2, #37	; 0x25
 800570c:	d1f9      	bne.n	8005702 <_svfprintf_r+0x82>
 800570e:	ebb5 0709 	subs.w	r7, r5, r9
 8005712:	d00d      	beq.n	8005730 <_svfprintf_r+0xb0>
 8005714:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8005716:	443b      	add	r3, r7
 8005718:	9324      	str	r3, [sp, #144]	; 0x90
 800571a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800571c:	3301      	adds	r3, #1
 800571e:	2b07      	cmp	r3, #7
 8005720:	e9c4 9700 	strd	r9, r7, [r4]
 8005724:	9323      	str	r3, [sp, #140]	; 0x8c
 8005726:	dc79      	bgt.n	800581c <_svfprintf_r+0x19c>
 8005728:	3408      	adds	r4, #8
 800572a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800572c:	443b      	add	r3, r7
 800572e:	930c      	str	r3, [sp, #48]	; 0x30
 8005730:	782b      	ldrb	r3, [r5, #0]
 8005732:	2b00      	cmp	r3, #0
 8005734:	f001 8148 	beq.w	80069c8 <_svfprintf_r+0x1348>
 8005738:	2300      	movs	r3, #0
 800573a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800573e:	9204      	str	r2, [sp, #16]
 8005740:	3501      	adds	r5, #1
 8005742:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 8005746:	9310      	str	r3, [sp, #64]	; 0x40
 8005748:	469b      	mov	fp, r3
 800574a:	270a      	movs	r7, #10
 800574c:	222b      	movs	r2, #43	; 0x2b
 800574e:	462b      	mov	r3, r5
 8005750:	f813 1b01 	ldrb.w	r1, [r3], #1
 8005754:	9106      	str	r1, [sp, #24]
 8005756:	930b      	str	r3, [sp, #44]	; 0x2c
 8005758:	9b06      	ldr	r3, [sp, #24]
 800575a:	3b20      	subs	r3, #32
 800575c:	2b5a      	cmp	r3, #90	; 0x5a
 800575e:	f200 85bf 	bhi.w	80062e0 <_svfprintf_r+0xc60>
 8005762:	e8df f013 	tbh	[pc, r3, lsl #1]
 8005766:	007e      	.short	0x007e
 8005768:	05bd05bd 	.word	0x05bd05bd
 800576c:	05bd0086 	.word	0x05bd0086
 8005770:	05bd05bd 	.word	0x05bd05bd
 8005774:	05bd0065 	.word	0x05bd0065
 8005778:	008905bd 	.word	0x008905bd
 800577c:	05bd0093 	.word	0x05bd0093
 8005780:	00960090 	.word	0x00960090
 8005784:	00b305bd 	.word	0x00b305bd
 8005788:	00b600b6 	.word	0x00b600b6
 800578c:	00b600b6 	.word	0x00b600b6
 8005790:	00b600b6 	.word	0x00b600b6
 8005794:	00b600b6 	.word	0x00b600b6
 8005798:	05bd00b6 	.word	0x05bd00b6
 800579c:	05bd05bd 	.word	0x05bd05bd
 80057a0:	05bd05bd 	.word	0x05bd05bd
 80057a4:	05bd05bd 	.word	0x05bd05bd
 80057a8:	05bd012c 	.word	0x05bd012c
 80057ac:	00fc00e9 	.word	0x00fc00e9
 80057b0:	012c012c 	.word	0x012c012c
 80057b4:	05bd012c 	.word	0x05bd012c
 80057b8:	05bd05bd 	.word	0x05bd05bd
 80057bc:	00c605bd 	.word	0x00c605bd
 80057c0:	05bd05bd 	.word	0x05bd05bd
 80057c4:	05bd0498 	.word	0x05bd0498
 80057c8:	05bd05bd 	.word	0x05bd05bd
 80057cc:	05bd04e2 	.word	0x05bd04e2
 80057d0:	05bd0503 	.word	0x05bd0503
 80057d4:	052505bd 	.word	0x052505bd
 80057d8:	05bd05bd 	.word	0x05bd05bd
 80057dc:	05bd05bd 	.word	0x05bd05bd
 80057e0:	05bd05bd 	.word	0x05bd05bd
 80057e4:	05bd05bd 	.word	0x05bd05bd
 80057e8:	05bd012c 	.word	0x05bd012c
 80057ec:	00fe00e9 	.word	0x00fe00e9
 80057f0:	012c012c 	.word	0x012c012c
 80057f4:	00c9012c 	.word	0x00c9012c
 80057f8:	00dd00fe 	.word	0x00dd00fe
 80057fc:	00d605bd 	.word	0x00d605bd
 8005800:	047305bd 	.word	0x047305bd
 8005804:	04d0049a 	.word	0x04d0049a
 8005808:	05bd00dd 	.word	0x05bd00dd
 800580c:	007c04e2 	.word	0x007c04e2
 8005810:	05bd0505 	.word	0x05bd0505
 8005814:	054405bd 	.word	0x054405bd
 8005818:	007c05bd 	.word	0x007c05bd
 800581c:	aa22      	add	r2, sp, #136	; 0x88
 800581e:	4641      	mov	r1, r8
 8005820:	4650      	mov	r0, sl
 8005822:	f002 fe79 	bl	8008518 <__ssprint_r>
 8005826:	2800      	cmp	r0, #0
 8005828:	f040 8137 	bne.w	8005a9a <_svfprintf_r+0x41a>
 800582c:	ac25      	add	r4, sp, #148	; 0x94
 800582e:	e77c      	b.n	800572a <_svfprintf_r+0xaa>
 8005830:	4650      	mov	r0, sl
 8005832:	f002 fa8b 	bl	8007d4c <_localeconv_r>
 8005836:	6843      	ldr	r3, [r0, #4]
 8005838:	9314      	str	r3, [sp, #80]	; 0x50
 800583a:	4618      	mov	r0, r3
 800583c:	f7fa fcc8 	bl	80001d0 <strlen>
 8005840:	9012      	str	r0, [sp, #72]	; 0x48
 8005842:	4650      	mov	r0, sl
 8005844:	f002 fa82 	bl	8007d4c <_localeconv_r>
 8005848:	6883      	ldr	r3, [r0, #8]
 800584a:	930a      	str	r3, [sp, #40]	; 0x28
 800584c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800584e:	222b      	movs	r2, #43	; 0x2b
 8005850:	b12b      	cbz	r3, 800585e <_svfprintf_r+0x1de>
 8005852:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005854:	b11b      	cbz	r3, 800585e <_svfprintf_r+0x1de>
 8005856:	781b      	ldrb	r3, [r3, #0]
 8005858:	b10b      	cbz	r3, 800585e <_svfprintf_r+0x1de>
 800585a:	f44b 6b80 	orr.w	fp, fp, #1024	; 0x400
 800585e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8005860:	e775      	b.n	800574e <_svfprintf_r+0xce>
 8005862:	f89d 306b 	ldrb.w	r3, [sp, #107]	; 0x6b
 8005866:	2b00      	cmp	r3, #0
 8005868:	d1f9      	bne.n	800585e <_svfprintf_r+0x1de>
 800586a:	2320      	movs	r3, #32
 800586c:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 8005870:	e7f5      	b.n	800585e <_svfprintf_r+0x1de>
 8005872:	f04b 0b01 	orr.w	fp, fp, #1
 8005876:	e7f2      	b.n	800585e <_svfprintf_r+0x1de>
 8005878:	f856 3b04 	ldr.w	r3, [r6], #4
 800587c:	9310      	str	r3, [sp, #64]	; 0x40
 800587e:	2b00      	cmp	r3, #0
 8005880:	daed      	bge.n	800585e <_svfprintf_r+0x1de>
 8005882:	425b      	negs	r3, r3
 8005884:	9310      	str	r3, [sp, #64]	; 0x40
 8005886:	f04b 0b04 	orr.w	fp, fp, #4
 800588a:	e7e8      	b.n	800585e <_svfprintf_r+0x1de>
 800588c:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b
 8005890:	e7e5      	b.n	800585e <_svfprintf_r+0x1de>
 8005892:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8005894:	f815 3b01 	ldrb.w	r3, [r5], #1
 8005898:	9306      	str	r3, [sp, #24]
 800589a:	2b2a      	cmp	r3, #42	; 0x2a
 800589c:	d113      	bne.n	80058c6 <_svfprintf_r+0x246>
 800589e:	f856 0b04 	ldr.w	r0, [r6], #4
 80058a2:	950b      	str	r5, [sp, #44]	; 0x2c
 80058a4:	ea40 73e0 	orr.w	r3, r0, r0, asr #31
 80058a8:	9304      	str	r3, [sp, #16]
 80058aa:	e7d8      	b.n	800585e <_svfprintf_r+0x1de>
 80058ac:	9904      	ldr	r1, [sp, #16]
 80058ae:	fb07 3301 	mla	r3, r7, r1, r3
 80058b2:	9304      	str	r3, [sp, #16]
 80058b4:	f815 3b01 	ldrb.w	r3, [r5], #1
 80058b8:	9306      	str	r3, [sp, #24]
 80058ba:	9b06      	ldr	r3, [sp, #24]
 80058bc:	3b30      	subs	r3, #48	; 0x30
 80058be:	2b09      	cmp	r3, #9
 80058c0:	d9f4      	bls.n	80058ac <_svfprintf_r+0x22c>
 80058c2:	950b      	str	r5, [sp, #44]	; 0x2c
 80058c4:	e748      	b.n	8005758 <_svfprintf_r+0xd8>
 80058c6:	2300      	movs	r3, #0
 80058c8:	9304      	str	r3, [sp, #16]
 80058ca:	e7f6      	b.n	80058ba <_svfprintf_r+0x23a>
 80058cc:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
 80058d0:	e7c5      	b.n	800585e <_svfprintf_r+0x1de>
 80058d2:	2300      	movs	r3, #0
 80058d4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80058d6:	9310      	str	r3, [sp, #64]	; 0x40
 80058d8:	9b06      	ldr	r3, [sp, #24]
 80058da:	9910      	ldr	r1, [sp, #64]	; 0x40
 80058dc:	3b30      	subs	r3, #48	; 0x30
 80058de:	fb07 3301 	mla	r3, r7, r1, r3
 80058e2:	9310      	str	r3, [sp, #64]	; 0x40
 80058e4:	f815 3b01 	ldrb.w	r3, [r5], #1
 80058e8:	9306      	str	r3, [sp, #24]
 80058ea:	3b30      	subs	r3, #48	; 0x30
 80058ec:	2b09      	cmp	r3, #9
 80058ee:	d9f3      	bls.n	80058d8 <_svfprintf_r+0x258>
 80058f0:	e7e7      	b.n	80058c2 <_svfprintf_r+0x242>
 80058f2:	f04b 0b08 	orr.w	fp, fp, #8
 80058f6:	e7b2      	b.n	800585e <_svfprintf_r+0x1de>
 80058f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80058fa:	781b      	ldrb	r3, [r3, #0]
 80058fc:	2b68      	cmp	r3, #104	; 0x68
 80058fe:	bf01      	itttt	eq
 8005900:	9b0b      	ldreq	r3, [sp, #44]	; 0x2c
 8005902:	3301      	addeq	r3, #1
 8005904:	930b      	streq	r3, [sp, #44]	; 0x2c
 8005906:	f44b 7b00 	orreq.w	fp, fp, #512	; 0x200
 800590a:	bf18      	it	ne
 800590c:	f04b 0b40 	orrne.w	fp, fp, #64	; 0x40
 8005910:	e7a5      	b.n	800585e <_svfprintf_r+0x1de>
 8005912:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005914:	781b      	ldrb	r3, [r3, #0]
 8005916:	2b6c      	cmp	r3, #108	; 0x6c
 8005918:	d105      	bne.n	8005926 <_svfprintf_r+0x2a6>
 800591a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800591c:	3301      	adds	r3, #1
 800591e:	930b      	str	r3, [sp, #44]	; 0x2c
 8005920:	f04b 0b20 	orr.w	fp, fp, #32
 8005924:	e79b      	b.n	800585e <_svfprintf_r+0x1de>
 8005926:	f04b 0b10 	orr.w	fp, fp, #16
 800592a:	e798      	b.n	800585e <_svfprintf_r+0x1de>
 800592c:	f3af 8000 	nop.w
	...
 8005938:	4632      	mov	r2, r6
 800593a:	2000      	movs	r0, #0
 800593c:	f852 3b04 	ldr.w	r3, [r2], #4
 8005940:	9207      	str	r2, [sp, #28]
 8005942:	f88d 30d4 	strb.w	r3, [sp, #212]	; 0xd4
 8005946:	f88d 006b 	strb.w	r0, [sp, #107]	; 0x6b
 800594a:	2301      	movs	r3, #1
 800594c:	e9cd 0008 	strd	r0, r0, [sp, #32]
 8005950:	9003      	str	r0, [sp, #12]
 8005952:	9304      	str	r3, [sp, #16]
 8005954:	4606      	mov	r6, r0
 8005956:	4605      	mov	r5, r0
 8005958:	f10d 09d4 	add.w	r9, sp, #212	; 0xd4
 800595c:	e1bc      	b.n	8005cd8 <_svfprintf_r+0x658>
 800595e:	f04b 0b10 	orr.w	fp, fp, #16
 8005962:	f01b 0f20 	tst.w	fp, #32
 8005966:	d012      	beq.n	800598e <_svfprintf_r+0x30e>
 8005968:	1df3      	adds	r3, r6, #7
 800596a:	f023 0307 	bic.w	r3, r3, #7
 800596e:	461a      	mov	r2, r3
 8005970:	685d      	ldr	r5, [r3, #4]
 8005972:	f852 6b08 	ldr.w	r6, [r2], #8
 8005976:	9207      	str	r2, [sp, #28]
 8005978:	2d00      	cmp	r5, #0
 800597a:	da06      	bge.n	800598a <_svfprintf_r+0x30a>
 800597c:	4276      	negs	r6, r6
 800597e:	f04f 032d 	mov.w	r3, #45	; 0x2d
 8005982:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 8005986:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 800598a:	2301      	movs	r3, #1
 800598c:	e396      	b.n	80060bc <_svfprintf_r+0xa3c>
 800598e:	4633      	mov	r3, r6
 8005990:	f01b 0f10 	tst.w	fp, #16
 8005994:	f853 5b04 	ldr.w	r5, [r3], #4
 8005998:	9307      	str	r3, [sp, #28]
 800599a:	d002      	beq.n	80059a2 <_svfprintf_r+0x322>
 800599c:	462e      	mov	r6, r5
 800599e:	17ed      	asrs	r5, r5, #31
 80059a0:	e7ea      	b.n	8005978 <_svfprintf_r+0x2f8>
 80059a2:	f01b 0f40 	tst.w	fp, #64	; 0x40
 80059a6:	d003      	beq.n	80059b0 <_svfprintf_r+0x330>
 80059a8:	b22e      	sxth	r6, r5
 80059aa:	f345 35c0 	sbfx	r5, r5, #15, #1
 80059ae:	e7e3      	b.n	8005978 <_svfprintf_r+0x2f8>
 80059b0:	f41b 7f00 	tst.w	fp, #512	; 0x200
 80059b4:	d0f2      	beq.n	800599c <_svfprintf_r+0x31c>
 80059b6:	b26e      	sxtb	r6, r5
 80059b8:	f345 15c0 	sbfx	r5, r5, #7, #1
 80059bc:	e7dc      	b.n	8005978 <_svfprintf_r+0x2f8>
 80059be:	3607      	adds	r6, #7
 80059c0:	f026 0307 	bic.w	r3, r6, #7
 80059c4:	ecb3 7b02 	vldmia	r3!, {d7}
 80059c8:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 80059cc:	9307      	str	r3, [sp, #28]
 80059ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80059d0:	ee09 3a10 	vmov	s18, r3
 80059d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80059d6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80059da:	ee09 3a90 	vmov	s19, r3
 80059de:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80059e2:	4b3a      	ldr	r3, [pc, #232]	; (8005acc <_svfprintf_r+0x44c>)
 80059e4:	ec51 0b19 	vmov	r0, r1, d9
 80059e8:	f7fb f8a0 	bl	8000b2c <__aeabi_dcmpun>
 80059ec:	bb10      	cbnz	r0, 8005a34 <_svfprintf_r+0x3b4>
 80059ee:	4b37      	ldr	r3, [pc, #220]	; (8005acc <_svfprintf_r+0x44c>)
 80059f0:	ec51 0b19 	vmov	r0, r1, d9
 80059f4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80059f8:	f7fb f87a 	bl	8000af0 <__aeabi_dcmple>
 80059fc:	b9d0      	cbnz	r0, 8005a34 <_svfprintf_r+0x3b4>
 80059fe:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8005a02:	2200      	movs	r2, #0
 8005a04:	2300      	movs	r3, #0
 8005a06:	f7fb f869 	bl	8000adc <__aeabi_dcmplt>
 8005a0a:	b110      	cbz	r0, 8005a12 <_svfprintf_r+0x392>
 8005a0c:	232d      	movs	r3, #45	; 0x2d
 8005a0e:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 8005a12:	4a2f      	ldr	r2, [pc, #188]	; (8005ad0 <_svfprintf_r+0x450>)
 8005a14:	482f      	ldr	r0, [pc, #188]	; (8005ad4 <_svfprintf_r+0x454>)
 8005a16:	9b06      	ldr	r3, [sp, #24]
 8005a18:	2100      	movs	r1, #0
 8005a1a:	2b47      	cmp	r3, #71	; 0x47
 8005a1c:	bfd4      	ite	le
 8005a1e:	4691      	movle	r9, r2
 8005a20:	4681      	movgt	r9, r0
 8005a22:	2303      	movs	r3, #3
 8005a24:	e9cd 1303 	strd	r1, r3, [sp, #12]
 8005a28:	f02b 0b80 	bic.w	fp, fp, #128	; 0x80
 8005a2c:	2600      	movs	r6, #0
 8005a2e:	4633      	mov	r3, r6
 8005a30:	f001 b800 	b.w	8006a34 <_svfprintf_r+0x13b4>
 8005a34:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8005a38:	4610      	mov	r0, r2
 8005a3a:	4619      	mov	r1, r3
 8005a3c:	f7fb f876 	bl	8000b2c <__aeabi_dcmpun>
 8005a40:	b140      	cbz	r0, 8005a54 <_svfprintf_r+0x3d4>
 8005a42:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005a44:	4a24      	ldr	r2, [pc, #144]	; (8005ad8 <_svfprintf_r+0x458>)
 8005a46:	4825      	ldr	r0, [pc, #148]	; (8005adc <_svfprintf_r+0x45c>)
 8005a48:	2b00      	cmp	r3, #0
 8005a4a:	bfbc      	itt	lt
 8005a4c:	232d      	movlt	r3, #45	; 0x2d
 8005a4e:	f88d 306b 	strblt.w	r3, [sp, #107]	; 0x6b
 8005a52:	e7e0      	b.n	8005a16 <_svfprintf_r+0x396>
 8005a54:	9b06      	ldr	r3, [sp, #24]
 8005a56:	f023 0320 	bic.w	r3, r3, #32
 8005a5a:	2b41      	cmp	r3, #65	; 0x41
 8005a5c:	9308      	str	r3, [sp, #32]
 8005a5e:	d125      	bne.n	8005aac <_svfprintf_r+0x42c>
 8005a60:	2330      	movs	r3, #48	; 0x30
 8005a62:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
 8005a66:	9b06      	ldr	r3, [sp, #24]
 8005a68:	2b61      	cmp	r3, #97	; 0x61
 8005a6a:	bf0c      	ite	eq
 8005a6c:	2378      	moveq	r3, #120	; 0x78
 8005a6e:	2358      	movne	r3, #88	; 0x58
 8005a70:	f88d 306d 	strb.w	r3, [sp, #109]	; 0x6d
 8005a74:	9b04      	ldr	r3, [sp, #16]
 8005a76:	2b63      	cmp	r3, #99	; 0x63
 8005a78:	f04b 0b02 	orr.w	fp, fp, #2
 8005a7c:	dd30      	ble.n	8005ae0 <_svfprintf_r+0x460>
 8005a7e:	1c59      	adds	r1, r3, #1
 8005a80:	4650      	mov	r0, sl
 8005a82:	f7ff f97b 	bl	8004d7c <_malloc_r>
 8005a86:	4681      	mov	r9, r0
 8005a88:	2800      	cmp	r0, #0
 8005a8a:	f040 81fd 	bne.w	8005e88 <_svfprintf_r+0x808>
 8005a8e:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8005a92:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005a96:	f8a8 300c 	strh.w	r3, [r8, #12]
 8005a9a:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8005a9e:	f013 0f40 	tst.w	r3, #64	; 0x40
 8005aa2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005aa4:	bf18      	it	ne
 8005aa6:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
 8005aaa:	e60f      	b.n	80056cc <_svfprintf_r+0x4c>
 8005aac:	9b04      	ldr	r3, [sp, #16]
 8005aae:	3301      	adds	r3, #1
 8005ab0:	f000 81ec 	beq.w	8005e8c <_svfprintf_r+0x80c>
 8005ab4:	9b08      	ldr	r3, [sp, #32]
 8005ab6:	2b47      	cmp	r3, #71	; 0x47
 8005ab8:	f040 81eb 	bne.w	8005e92 <_svfprintf_r+0x812>
 8005abc:	9b04      	ldr	r3, [sp, #16]
 8005abe:	2b00      	cmp	r3, #0
 8005ac0:	f040 81e7 	bne.w	8005e92 <_svfprintf_r+0x812>
 8005ac4:	9303      	str	r3, [sp, #12]
 8005ac6:	2301      	movs	r3, #1
 8005ac8:	9304      	str	r3, [sp, #16]
 8005aca:	e00c      	b.n	8005ae6 <_svfprintf_r+0x466>
 8005acc:	7fefffff 	.word	0x7fefffff
 8005ad0:	0800e314 	.word	0x0800e314
 8005ad4:	0800e318 	.word	0x0800e318
 8005ad8:	0800e31c 	.word	0x0800e31c
 8005adc:	0800e320 	.word	0x0800e320
 8005ae0:	9003      	str	r0, [sp, #12]
 8005ae2:	f10d 09d4 	add.w	r9, sp, #212	; 0xd4
 8005ae6:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
 8005aea:	9311      	str	r3, [sp, #68]	; 0x44
 8005aec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005aee:	2b00      	cmp	r3, #0
 8005af0:	f280 81d1 	bge.w	8005e96 <_svfprintf_r+0x816>
 8005af4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005af6:	ee08 3a10 	vmov	s16, r3
 8005afa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005afc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8005b00:	ee08 3a90 	vmov	s17, r3
 8005b04:	232d      	movs	r3, #45	; 0x2d
 8005b06:	9318      	str	r3, [sp, #96]	; 0x60
 8005b08:	9b08      	ldr	r3, [sp, #32]
 8005b0a:	2b41      	cmp	r3, #65	; 0x41
 8005b0c:	f040 81e1 	bne.w	8005ed2 <_svfprintf_r+0x852>
 8005b10:	eeb0 0a48 	vmov.f32	s0, s16
 8005b14:	eef0 0a68 	vmov.f32	s1, s17
 8005b18:	a81c      	add	r0, sp, #112	; 0x70
 8005b1a:	f002 fc6f 	bl	80083fc <frexp>
 8005b1e:	2200      	movs	r2, #0
 8005b20:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8005b24:	ec51 0b10 	vmov	r0, r1, d0
 8005b28:	f7fa fd66 	bl	80005f8 <__aeabi_dmul>
 8005b2c:	2200      	movs	r2, #0
 8005b2e:	2300      	movs	r3, #0
 8005b30:	4606      	mov	r6, r0
 8005b32:	460f      	mov	r7, r1
 8005b34:	f7fa ffc8 	bl	8000ac8 <__aeabi_dcmpeq>
 8005b38:	b108      	cbz	r0, 8005b3e <_svfprintf_r+0x4be>
 8005b3a:	2301      	movs	r3, #1
 8005b3c:	931c      	str	r3, [sp, #112]	; 0x70
 8005b3e:	4ba7      	ldr	r3, [pc, #668]	; (8005ddc <_svfprintf_r+0x75c>)
 8005b40:	4aa7      	ldr	r2, [pc, #668]	; (8005de0 <_svfprintf_r+0x760>)
 8005b42:	9906      	ldr	r1, [sp, #24]
 8005b44:	2961      	cmp	r1, #97	; 0x61
 8005b46:	bf18      	it	ne
 8005b48:	461a      	movne	r2, r3
 8005b4a:	9b04      	ldr	r3, [sp, #16]
 8005b4c:	9217      	str	r2, [sp, #92]	; 0x5c
 8005b4e:	3b01      	subs	r3, #1
 8005b50:	9305      	str	r3, [sp, #20]
 8005b52:	464d      	mov	r5, r9
 8005b54:	4ba3      	ldr	r3, [pc, #652]	; (8005de4 <_svfprintf_r+0x764>)
 8005b56:	2200      	movs	r2, #0
 8005b58:	4630      	mov	r0, r6
 8005b5a:	4639      	mov	r1, r7
 8005b5c:	f7fa fd4c 	bl	80005f8 <__aeabi_dmul>
 8005b60:	460f      	mov	r7, r1
 8005b62:	4606      	mov	r6, r0
 8005b64:	f7fa fff8 	bl	8000b58 <__aeabi_d2iz>
 8005b68:	9019      	str	r0, [sp, #100]	; 0x64
 8005b6a:	f7fa fcdb 	bl	8000524 <__aeabi_i2d>
 8005b6e:	4602      	mov	r2, r0
 8005b70:	460b      	mov	r3, r1
 8005b72:	4630      	mov	r0, r6
 8005b74:	4639      	mov	r1, r7
 8005b76:	f7fa fb87 	bl	8000288 <__aeabi_dsub>
 8005b7a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8005b7c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005b7e:	5c9b      	ldrb	r3, [r3, r2]
 8005b80:	f805 3b01 	strb.w	r3, [r5], #1
 8005b84:	9b05      	ldr	r3, [sp, #20]
 8005b86:	9309      	str	r3, [sp, #36]	; 0x24
 8005b88:	1c5a      	adds	r2, r3, #1
 8005b8a:	4606      	mov	r6, r0
 8005b8c:	460f      	mov	r7, r1
 8005b8e:	d007      	beq.n	8005ba0 <_svfprintf_r+0x520>
 8005b90:	3b01      	subs	r3, #1
 8005b92:	9305      	str	r3, [sp, #20]
 8005b94:	2200      	movs	r2, #0
 8005b96:	2300      	movs	r3, #0
 8005b98:	f7fa ff96 	bl	8000ac8 <__aeabi_dcmpeq>
 8005b9c:	2800      	cmp	r0, #0
 8005b9e:	d0d9      	beq.n	8005b54 <_svfprintf_r+0x4d4>
 8005ba0:	4b91      	ldr	r3, [pc, #580]	; (8005de8 <_svfprintf_r+0x768>)
 8005ba2:	2200      	movs	r2, #0
 8005ba4:	4630      	mov	r0, r6
 8005ba6:	4639      	mov	r1, r7
 8005ba8:	f7fa ffb6 	bl	8000b18 <__aeabi_dcmpgt>
 8005bac:	b960      	cbnz	r0, 8005bc8 <_svfprintf_r+0x548>
 8005bae:	4b8e      	ldr	r3, [pc, #568]	; (8005de8 <_svfprintf_r+0x768>)
 8005bb0:	2200      	movs	r2, #0
 8005bb2:	4630      	mov	r0, r6
 8005bb4:	4639      	mov	r1, r7
 8005bb6:	f7fa ff87 	bl	8000ac8 <__aeabi_dcmpeq>
 8005bba:	2800      	cmp	r0, #0
 8005bbc:	f000 8184 	beq.w	8005ec8 <_svfprintf_r+0x848>
 8005bc0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005bc2:	07db      	lsls	r3, r3, #31
 8005bc4:	f140 8180 	bpl.w	8005ec8 <_svfprintf_r+0x848>
 8005bc8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005bca:	9520      	str	r5, [sp, #128]	; 0x80
 8005bcc:	7bd9      	ldrb	r1, [r3, #15]
 8005bce:	2030      	movs	r0, #48	; 0x30
 8005bd0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8005bd2:	1e53      	subs	r3, r2, #1
 8005bd4:	9320      	str	r3, [sp, #128]	; 0x80
 8005bd6:	f812 3c01 	ldrb.w	r3, [r2, #-1]
 8005bda:	428b      	cmp	r3, r1
 8005bdc:	f000 8163 	beq.w	8005ea6 <_svfprintf_r+0x826>
 8005be0:	2b39      	cmp	r3, #57	; 0x39
 8005be2:	bf0b      	itete	eq
 8005be4:	9b17      	ldreq	r3, [sp, #92]	; 0x5c
 8005be6:	3301      	addne	r3, #1
 8005be8:	7a9b      	ldrbeq	r3, [r3, #10]
 8005bea:	b2db      	uxtbne	r3, r3
 8005bec:	f802 3c01 	strb.w	r3, [r2, #-1]
 8005bf0:	eba5 0309 	sub.w	r3, r5, r9
 8005bf4:	9305      	str	r3, [sp, #20]
 8005bf6:	9b08      	ldr	r3, [sp, #32]
 8005bf8:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8005bfa:	2b47      	cmp	r3, #71	; 0x47
 8005bfc:	f040 81b1 	bne.w	8005f62 <_svfprintf_r+0x8e2>
 8005c00:	1cef      	adds	r7, r5, #3
 8005c02:	db03      	blt.n	8005c0c <_svfprintf_r+0x58c>
 8005c04:	9b04      	ldr	r3, [sp, #16]
 8005c06:	42ab      	cmp	r3, r5
 8005c08:	f280 81d6 	bge.w	8005fb8 <_svfprintf_r+0x938>
 8005c0c:	9b06      	ldr	r3, [sp, #24]
 8005c0e:	3b02      	subs	r3, #2
 8005c10:	9306      	str	r3, [sp, #24]
 8005c12:	9906      	ldr	r1, [sp, #24]
 8005c14:	f89d 2018 	ldrb.w	r2, [sp, #24]
 8005c18:	f021 0120 	bic.w	r1, r1, #32
 8005c1c:	2941      	cmp	r1, #65	; 0x41
 8005c1e:	bf08      	it	eq
 8005c20:	320f      	addeq	r2, #15
 8005c22:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
 8005c26:	bf06      	itte	eq
 8005c28:	b2d2      	uxtbeq	r2, r2
 8005c2a:	2101      	moveq	r1, #1
 8005c2c:	2100      	movne	r1, #0
 8005c2e:	2b00      	cmp	r3, #0
 8005c30:	931c      	str	r3, [sp, #112]	; 0x70
 8005c32:	bfb8      	it	lt
 8005c34:	f1c5 0301 	rsblt	r3, r5, #1
 8005c38:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
 8005c3c:	bfb4      	ite	lt
 8005c3e:	222d      	movlt	r2, #45	; 0x2d
 8005c40:	222b      	movge	r2, #43	; 0x2b
 8005c42:	2b09      	cmp	r3, #9
 8005c44:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
 8005c48:	f340 81a4 	ble.w	8005f94 <_svfprintf_r+0x914>
 8005c4c:	f10d 0287 	add.w	r2, sp, #135	; 0x87
 8005c50:	260a      	movs	r6, #10
 8005c52:	4611      	mov	r1, r2
 8005c54:	fb93 f5f6 	sdiv	r5, r3, r6
 8005c58:	fb06 3015 	mls	r0, r6, r5, r3
 8005c5c:	3030      	adds	r0, #48	; 0x30
 8005c5e:	f801 0c01 	strb.w	r0, [r1, #-1]
 8005c62:	4618      	mov	r0, r3
 8005c64:	2863      	cmp	r0, #99	; 0x63
 8005c66:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8005c6a:	462b      	mov	r3, r5
 8005c6c:	dcf1      	bgt.n	8005c52 <_svfprintf_r+0x5d2>
 8005c6e:	3330      	adds	r3, #48	; 0x30
 8005c70:	1e88      	subs	r0, r1, #2
 8005c72:	f802 3c01 	strb.w	r3, [r2, #-1]
 8005c76:	f10d 0587 	add.w	r5, sp, #135	; 0x87
 8005c7a:	f10d 027a 	add.w	r2, sp, #122	; 0x7a
 8005c7e:	4603      	mov	r3, r0
 8005c80:	42ab      	cmp	r3, r5
 8005c82:	f0c0 8182 	bcc.w	8005f8a <_svfprintf_r+0x90a>
 8005c86:	f10d 0289 	add.w	r2, sp, #137	; 0x89
 8005c8a:	1a52      	subs	r2, r2, r1
 8005c8c:	42a8      	cmp	r0, r5
 8005c8e:	bf88      	it	hi
 8005c90:	2200      	movhi	r2, #0
 8005c92:	f10d 037a 	add.w	r3, sp, #122	; 0x7a
 8005c96:	441a      	add	r2, r3
 8005c98:	ab1e      	add	r3, sp, #120	; 0x78
 8005c9a:	1ad3      	subs	r3, r2, r3
 8005c9c:	9a05      	ldr	r2, [sp, #20]
 8005c9e:	9315      	str	r3, [sp, #84]	; 0x54
 8005ca0:	2a01      	cmp	r2, #1
 8005ca2:	4413      	add	r3, r2
 8005ca4:	9304      	str	r3, [sp, #16]
 8005ca6:	dc02      	bgt.n	8005cae <_svfprintf_r+0x62e>
 8005ca8:	f01b 0f01 	tst.w	fp, #1
 8005cac:	d003      	beq.n	8005cb6 <_svfprintf_r+0x636>
 8005cae:	9b04      	ldr	r3, [sp, #16]
 8005cb0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005cb2:	4413      	add	r3, r2
 8005cb4:	9304      	str	r3, [sp, #16]
 8005cb6:	f42b 6380 	bic.w	r3, fp, #1024	; 0x400
 8005cba:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005cbe:	9311      	str	r3, [sp, #68]	; 0x44
 8005cc0:	2300      	movs	r3, #0
 8005cc2:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8005cc6:	461d      	mov	r5, r3
 8005cc8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8005cca:	b113      	cbz	r3, 8005cd2 <_svfprintf_r+0x652>
 8005ccc:	232d      	movs	r3, #45	; 0x2d
 8005cce:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 8005cd2:	f8dd b044 	ldr.w	fp, [sp, #68]	; 0x44
 8005cd6:	2600      	movs	r6, #0
 8005cd8:	9b04      	ldr	r3, [sp, #16]
 8005cda:	42b3      	cmp	r3, r6
 8005cdc:	bfb8      	it	lt
 8005cde:	4633      	movlt	r3, r6
 8005ce0:	9311      	str	r3, [sp, #68]	; 0x44
 8005ce2:	f89d 306b 	ldrb.w	r3, [sp, #107]	; 0x6b
 8005ce6:	b113      	cbz	r3, 8005cee <_svfprintf_r+0x66e>
 8005ce8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005cea:	3301      	adds	r3, #1
 8005cec:	9311      	str	r3, [sp, #68]	; 0x44
 8005cee:	f01b 0302 	ands.w	r3, fp, #2
 8005cf2:	9317      	str	r3, [sp, #92]	; 0x5c
 8005cf4:	bf1e      	ittt	ne
 8005cf6:	9b11      	ldrne	r3, [sp, #68]	; 0x44
 8005cf8:	3302      	addne	r3, #2
 8005cfa:	9311      	strne	r3, [sp, #68]	; 0x44
 8005cfc:	f01b 0384 	ands.w	r3, fp, #132	; 0x84
 8005d00:	9318      	str	r3, [sp, #96]	; 0x60
 8005d02:	d11f      	bne.n	8005d44 <_svfprintf_r+0x6c4>
 8005d04:	e9dd 3210 	ldrd	r3, r2, [sp, #64]	; 0x40
 8005d08:	1a9f      	subs	r7, r3, r2
 8005d0a:	2f00      	cmp	r7, #0
 8005d0c:	dd1a      	ble.n	8005d44 <_svfprintf_r+0x6c4>
 8005d0e:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 8005d12:	4836      	ldr	r0, [pc, #216]	; (8005dec <_svfprintf_r+0x76c>)
 8005d14:	6020      	str	r0, [r4, #0]
 8005d16:	2f10      	cmp	r7, #16
 8005d18:	f103 0301 	add.w	r3, r3, #1
 8005d1c:	f104 0108 	add.w	r1, r4, #8
 8005d20:	f300 82ed 	bgt.w	80062fe <_svfprintf_r+0xc7e>
 8005d24:	6067      	str	r7, [r4, #4]
 8005d26:	2b07      	cmp	r3, #7
 8005d28:	4417      	add	r7, r2
 8005d2a:	e9cd 3723 	strd	r3, r7, [sp, #140]	; 0x8c
 8005d2e:	f340 82f9 	ble.w	8006324 <_svfprintf_r+0xca4>
 8005d32:	aa22      	add	r2, sp, #136	; 0x88
 8005d34:	4641      	mov	r1, r8
 8005d36:	4650      	mov	r0, sl
 8005d38:	f002 fbee 	bl	8008518 <__ssprint_r>
 8005d3c:	2800      	cmp	r0, #0
 8005d3e:	f040 8621 	bne.w	8006984 <_svfprintf_r+0x1304>
 8005d42:	ac25      	add	r4, sp, #148	; 0x94
 8005d44:	f89d 306b 	ldrb.w	r3, [sp, #107]	; 0x6b
 8005d48:	b173      	cbz	r3, 8005d68 <_svfprintf_r+0x6e8>
 8005d4a:	f10d 036b 	add.w	r3, sp, #107	; 0x6b
 8005d4e:	6023      	str	r3, [r4, #0]
 8005d50:	2301      	movs	r3, #1
 8005d52:	6063      	str	r3, [r4, #4]
 8005d54:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8005d56:	3301      	adds	r3, #1
 8005d58:	9324      	str	r3, [sp, #144]	; 0x90
 8005d5a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005d5c:	3301      	adds	r3, #1
 8005d5e:	2b07      	cmp	r3, #7
 8005d60:	9323      	str	r3, [sp, #140]	; 0x8c
 8005d62:	f300 82e1 	bgt.w	8006328 <_svfprintf_r+0xca8>
 8005d66:	3408      	adds	r4, #8
 8005d68:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005d6a:	b16b      	cbz	r3, 8005d88 <_svfprintf_r+0x708>
 8005d6c:	ab1b      	add	r3, sp, #108	; 0x6c
 8005d6e:	6023      	str	r3, [r4, #0]
 8005d70:	2302      	movs	r3, #2
 8005d72:	6063      	str	r3, [r4, #4]
 8005d74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8005d76:	3302      	adds	r3, #2
 8005d78:	9324      	str	r3, [sp, #144]	; 0x90
 8005d7a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005d7c:	3301      	adds	r3, #1
 8005d7e:	2b07      	cmp	r3, #7
 8005d80:	9323      	str	r3, [sp, #140]	; 0x8c
 8005d82:	f300 82db 	bgt.w	800633c <_svfprintf_r+0xcbc>
 8005d86:	3408      	adds	r4, #8
 8005d88:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8005d8a:	2b80      	cmp	r3, #128	; 0x80
 8005d8c:	d11f      	bne.n	8005dce <_svfprintf_r+0x74e>
 8005d8e:	e9dd 3210 	ldrd	r3, r2, [sp, #64]	; 0x40
 8005d92:	1a9f      	subs	r7, r3, r2
 8005d94:	2f00      	cmp	r7, #0
 8005d96:	dd1a      	ble.n	8005dce <_svfprintf_r+0x74e>
 8005d98:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 8005d9c:	4814      	ldr	r0, [pc, #80]	; (8005df0 <_svfprintf_r+0x770>)
 8005d9e:	6020      	str	r0, [r4, #0]
 8005da0:	2f10      	cmp	r7, #16
 8005da2:	f103 0301 	add.w	r3, r3, #1
 8005da6:	f104 0108 	add.w	r1, r4, #8
 8005daa:	f300 82d1 	bgt.w	8006350 <_svfprintf_r+0xcd0>
 8005dae:	6067      	str	r7, [r4, #4]
 8005db0:	2b07      	cmp	r3, #7
 8005db2:	4417      	add	r7, r2
 8005db4:	e9cd 3723 	strd	r3, r7, [sp, #140]	; 0x8c
 8005db8:	f340 82dd 	ble.w	8006376 <_svfprintf_r+0xcf6>
 8005dbc:	aa22      	add	r2, sp, #136	; 0x88
 8005dbe:	4641      	mov	r1, r8
 8005dc0:	4650      	mov	r0, sl
 8005dc2:	f002 fba9 	bl	8008518 <__ssprint_r>
 8005dc6:	2800      	cmp	r0, #0
 8005dc8:	f040 85dc 	bne.w	8006984 <_svfprintf_r+0x1304>
 8005dcc:	ac25      	add	r4, sp, #148	; 0x94
 8005dce:	9b04      	ldr	r3, [sp, #16]
 8005dd0:	1af6      	subs	r6, r6, r3
 8005dd2:	2e00      	cmp	r6, #0
 8005dd4:	dd28      	ble.n	8005e28 <_svfprintf_r+0x7a8>
 8005dd6:	4f06      	ldr	r7, [pc, #24]	; (8005df0 <_svfprintf_r+0x770>)
 8005dd8:	e00c      	b.n	8005df4 <_svfprintf_r+0x774>
 8005dda:	bf00      	nop
 8005ddc:	0800e335 	.word	0x0800e335
 8005de0:	0800e324 	.word	0x0800e324
 8005de4:	40300000 	.word	0x40300000
 8005de8:	3fe00000 	.word	0x3fe00000
 8005dec:	0800e348 	.word	0x0800e348
 8005df0:	0800e358 	.word	0x0800e358
 8005df4:	6027      	str	r7, [r4, #0]
 8005df6:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 8005dfa:	2e10      	cmp	r6, #16
 8005dfc:	f103 0301 	add.w	r3, r3, #1
 8005e00:	f104 0108 	add.w	r1, r4, #8
 8005e04:	f300 82b9 	bgt.w	800637a <_svfprintf_r+0xcfa>
 8005e08:	6066      	str	r6, [r4, #4]
 8005e0a:	2b07      	cmp	r3, #7
 8005e0c:	4416      	add	r6, r2
 8005e0e:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
 8005e12:	f340 82c5 	ble.w	80063a0 <_svfprintf_r+0xd20>
 8005e16:	aa22      	add	r2, sp, #136	; 0x88
 8005e18:	4641      	mov	r1, r8
 8005e1a:	4650      	mov	r0, sl
 8005e1c:	f002 fb7c 	bl	8008518 <__ssprint_r>
 8005e20:	2800      	cmp	r0, #0
 8005e22:	f040 85af 	bne.w	8006984 <_svfprintf_r+0x1304>
 8005e26:	ac25      	add	r4, sp, #148	; 0x94
 8005e28:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8005e2c:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8005e2e:	f040 82bd 	bne.w	80063ac <_svfprintf_r+0xd2c>
 8005e32:	9b04      	ldr	r3, [sp, #16]
 8005e34:	f8c4 9000 	str.w	r9, [r4]
 8005e38:	441e      	add	r6, r3
 8005e3a:	6063      	str	r3, [r4, #4]
 8005e3c:	9624      	str	r6, [sp, #144]	; 0x90
 8005e3e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005e40:	3301      	adds	r3, #1
 8005e42:	2b07      	cmp	r3, #7
 8005e44:	9323      	str	r3, [sp, #140]	; 0x8c
 8005e46:	f300 82f6 	bgt.w	8006436 <_svfprintf_r+0xdb6>
 8005e4a:	3408      	adds	r4, #8
 8005e4c:	f01b 0f04 	tst.w	fp, #4
 8005e50:	f040 857a 	bne.w	8006948 <_svfprintf_r+0x12c8>
 8005e54:	e9dd 2110 	ldrd	r2, r1, [sp, #64]	; 0x40
 8005e58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005e5a:	428a      	cmp	r2, r1
 8005e5c:	bfac      	ite	ge
 8005e5e:	189b      	addge	r3, r3, r2
 8005e60:	185b      	addlt	r3, r3, r1
 8005e62:	930c      	str	r3, [sp, #48]	; 0x30
 8005e64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8005e66:	b13b      	cbz	r3, 8005e78 <_svfprintf_r+0x7f8>
 8005e68:	aa22      	add	r2, sp, #136	; 0x88
 8005e6a:	4641      	mov	r1, r8
 8005e6c:	4650      	mov	r0, sl
 8005e6e:	f002 fb53 	bl	8008518 <__ssprint_r>
 8005e72:	2800      	cmp	r0, #0
 8005e74:	f040 8586 	bne.w	8006984 <_svfprintf_r+0x1304>
 8005e78:	2300      	movs	r3, #0
 8005e7a:	9323      	str	r3, [sp, #140]	; 0x8c
 8005e7c:	9b03      	ldr	r3, [sp, #12]
 8005e7e:	2b00      	cmp	r3, #0
 8005e80:	f040 859c 	bne.w	80069bc <_svfprintf_r+0x133c>
 8005e84:	ac25      	add	r4, sp, #148	; 0x94
 8005e86:	e0ec      	b.n	8006062 <_svfprintf_r+0x9e2>
 8005e88:	9003      	str	r0, [sp, #12]
 8005e8a:	e62c      	b.n	8005ae6 <_svfprintf_r+0x466>
 8005e8c:	9003      	str	r0, [sp, #12]
 8005e8e:	2306      	movs	r3, #6
 8005e90:	e61a      	b.n	8005ac8 <_svfprintf_r+0x448>
 8005e92:	9003      	str	r0, [sp, #12]
 8005e94:	e627      	b.n	8005ae6 <_svfprintf_r+0x466>
 8005e96:	ed9d 7b0e 	vldr	d7, [sp, #56]	; 0x38
 8005e9a:	2300      	movs	r3, #0
 8005e9c:	eeb0 8a47 	vmov.f32	s16, s14
 8005ea0:	eef0 8a67 	vmov.f32	s17, s15
 8005ea4:	e62f      	b.n	8005b06 <_svfprintf_r+0x486>
 8005ea6:	f802 0c01 	strb.w	r0, [r2, #-1]
 8005eaa:	e691      	b.n	8005bd0 <_svfprintf_r+0x550>
 8005eac:	f803 0b01 	strb.w	r0, [r3], #1
 8005eb0:	1aca      	subs	r2, r1, r3
 8005eb2:	2a00      	cmp	r2, #0
 8005eb4:	dafa      	bge.n	8005eac <_svfprintf_r+0x82c>
 8005eb6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005eb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005eba:	3201      	adds	r2, #1
 8005ebc:	f103 0301 	add.w	r3, r3, #1
 8005ec0:	bfb8      	it	lt
 8005ec2:	2300      	movlt	r3, #0
 8005ec4:	441d      	add	r5, r3
 8005ec6:	e693      	b.n	8005bf0 <_svfprintf_r+0x570>
 8005ec8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005eca:	462b      	mov	r3, r5
 8005ecc:	18a9      	adds	r1, r5, r2
 8005ece:	2030      	movs	r0, #48	; 0x30
 8005ed0:	e7ee      	b.n	8005eb0 <_svfprintf_r+0x830>
 8005ed2:	9b08      	ldr	r3, [sp, #32]
 8005ed4:	2b46      	cmp	r3, #70	; 0x46
 8005ed6:	d005      	beq.n	8005ee4 <_svfprintf_r+0x864>
 8005ed8:	2b45      	cmp	r3, #69	; 0x45
 8005eda:	d11b      	bne.n	8005f14 <_svfprintf_r+0x894>
 8005edc:	9b04      	ldr	r3, [sp, #16]
 8005ede:	1c5d      	adds	r5, r3, #1
 8005ee0:	2102      	movs	r1, #2
 8005ee2:	e001      	b.n	8005ee8 <_svfprintf_r+0x868>
 8005ee4:	9d04      	ldr	r5, [sp, #16]
 8005ee6:	2103      	movs	r1, #3
 8005ee8:	ab20      	add	r3, sp, #128	; 0x80
 8005eea:	9301      	str	r3, [sp, #4]
 8005eec:	ab1d      	add	r3, sp, #116	; 0x74
 8005eee:	9300      	str	r3, [sp, #0]
 8005ef0:	462a      	mov	r2, r5
 8005ef2:	ab1c      	add	r3, sp, #112	; 0x70
 8005ef4:	4650      	mov	r0, sl
 8005ef6:	eeb0 0a48 	vmov.f32	s0, s16
 8005efa:	eef0 0a68 	vmov.f32	s1, s17
 8005efe:	f000 fe4f 	bl	8006ba0 <_dtoa_r>
 8005f02:	9b08      	ldr	r3, [sp, #32]
 8005f04:	2b47      	cmp	r3, #71	; 0x47
 8005f06:	4681      	mov	r9, r0
 8005f08:	d106      	bne.n	8005f18 <_svfprintf_r+0x898>
 8005f0a:	f01b 0f01 	tst.w	fp, #1
 8005f0e:	d103      	bne.n	8005f18 <_svfprintf_r+0x898>
 8005f10:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8005f12:	e66d      	b.n	8005bf0 <_svfprintf_r+0x570>
 8005f14:	9d04      	ldr	r5, [sp, #16]
 8005f16:	e7e3      	b.n	8005ee0 <_svfprintf_r+0x860>
 8005f18:	9b08      	ldr	r3, [sp, #32]
 8005f1a:	2b46      	cmp	r3, #70	; 0x46
 8005f1c:	eb09 0605 	add.w	r6, r9, r5
 8005f20:	d10f      	bne.n	8005f42 <_svfprintf_r+0x8c2>
 8005f22:	f899 3000 	ldrb.w	r3, [r9]
 8005f26:	2b30      	cmp	r3, #48	; 0x30
 8005f28:	d109      	bne.n	8005f3e <_svfprintf_r+0x8be>
 8005f2a:	ec51 0b18 	vmov	r0, r1, d8
 8005f2e:	2200      	movs	r2, #0
 8005f30:	2300      	movs	r3, #0
 8005f32:	f7fa fdc9 	bl	8000ac8 <__aeabi_dcmpeq>
 8005f36:	b910      	cbnz	r0, 8005f3e <_svfprintf_r+0x8be>
 8005f38:	f1c5 0501 	rsb	r5, r5, #1
 8005f3c:	951c      	str	r5, [sp, #112]	; 0x70
 8005f3e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8005f40:	441e      	add	r6, r3
 8005f42:	ec51 0b18 	vmov	r0, r1, d8
 8005f46:	2200      	movs	r2, #0
 8005f48:	2300      	movs	r3, #0
 8005f4a:	f7fa fdbd 	bl	8000ac8 <__aeabi_dcmpeq>
 8005f4e:	b100      	cbz	r0, 8005f52 <_svfprintf_r+0x8d2>
 8005f50:	9620      	str	r6, [sp, #128]	; 0x80
 8005f52:	2230      	movs	r2, #48	; 0x30
 8005f54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8005f56:	429e      	cmp	r6, r3
 8005f58:	d9da      	bls.n	8005f10 <_svfprintf_r+0x890>
 8005f5a:	1c59      	adds	r1, r3, #1
 8005f5c:	9120      	str	r1, [sp, #128]	; 0x80
 8005f5e:	701a      	strb	r2, [r3, #0]
 8005f60:	e7f8      	b.n	8005f54 <_svfprintf_r+0x8d4>
 8005f62:	9b08      	ldr	r3, [sp, #32]
 8005f64:	2b46      	cmp	r3, #70	; 0x46
 8005f66:	f47f ae54 	bne.w	8005c12 <_svfprintf_r+0x592>
 8005f6a:	9a04      	ldr	r2, [sp, #16]
 8005f6c:	f00b 0301 	and.w	r3, fp, #1
 8005f70:	2d00      	cmp	r5, #0
 8005f72:	ea43 0302 	orr.w	r3, r3, r2
 8005f76:	dd1a      	ble.n	8005fae <_svfprintf_r+0x92e>
 8005f78:	2b00      	cmp	r3, #0
 8005f7a:	d034      	beq.n	8005fe6 <_svfprintf_r+0x966>
 8005f7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005f7e:	18eb      	adds	r3, r5, r3
 8005f80:	441a      	add	r2, r3
 8005f82:	9204      	str	r2, [sp, #16]
 8005f84:	2366      	movs	r3, #102	; 0x66
 8005f86:	9306      	str	r3, [sp, #24]
 8005f88:	e033      	b.n	8005ff2 <_svfprintf_r+0x972>
 8005f8a:	f813 6b01 	ldrb.w	r6, [r3], #1
 8005f8e:	f802 6b01 	strb.w	r6, [r2], #1
 8005f92:	e675      	b.n	8005c80 <_svfprintf_r+0x600>
 8005f94:	b941      	cbnz	r1, 8005fa8 <_svfprintf_r+0x928>
 8005f96:	2230      	movs	r2, #48	; 0x30
 8005f98:	f88d 207a 	strb.w	r2, [sp, #122]	; 0x7a
 8005f9c:	f10d 027b 	add.w	r2, sp, #123	; 0x7b
 8005fa0:	3330      	adds	r3, #48	; 0x30
 8005fa2:	f802 3b01 	strb.w	r3, [r2], #1
 8005fa6:	e677      	b.n	8005c98 <_svfprintf_r+0x618>
 8005fa8:	f10d 027a 	add.w	r2, sp, #122	; 0x7a
 8005fac:	e7f8      	b.n	8005fa0 <_svfprintf_r+0x920>
 8005fae:	b1e3      	cbz	r3, 8005fea <_svfprintf_r+0x96a>
 8005fb0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005fb2:	9a04      	ldr	r2, [sp, #16]
 8005fb4:	3301      	adds	r3, #1
 8005fb6:	e7e3      	b.n	8005f80 <_svfprintf_r+0x900>
 8005fb8:	9b05      	ldr	r3, [sp, #20]
 8005fba:	429d      	cmp	r5, r3
 8005fbc:	db07      	blt.n	8005fce <_svfprintf_r+0x94e>
 8005fbe:	f01b 0f01 	tst.w	fp, #1
 8005fc2:	d02d      	beq.n	8006020 <_svfprintf_r+0x9a0>
 8005fc4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005fc6:	18eb      	adds	r3, r5, r3
 8005fc8:	9304      	str	r3, [sp, #16]
 8005fca:	2367      	movs	r3, #103	; 0x67
 8005fcc:	e7db      	b.n	8005f86 <_svfprintf_r+0x906>
 8005fce:	9b05      	ldr	r3, [sp, #20]
 8005fd0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005fd2:	2d00      	cmp	r5, #0
 8005fd4:	4413      	add	r3, r2
 8005fd6:	9304      	str	r3, [sp, #16]
 8005fd8:	dcf7      	bgt.n	8005fca <_svfprintf_r+0x94a>
 8005fda:	9a04      	ldr	r2, [sp, #16]
 8005fdc:	f1c5 0301 	rsb	r3, r5, #1
 8005fe0:	441a      	add	r2, r3
 8005fe2:	9204      	str	r2, [sp, #16]
 8005fe4:	e7f1      	b.n	8005fca <_svfprintf_r+0x94a>
 8005fe6:	9504      	str	r5, [sp, #16]
 8005fe8:	e7cc      	b.n	8005f84 <_svfprintf_r+0x904>
 8005fea:	2366      	movs	r3, #102	; 0x66
 8005fec:	9306      	str	r3, [sp, #24]
 8005fee:	2301      	movs	r3, #1
 8005ff0:	9304      	str	r3, [sp, #16]
 8005ff2:	f41b 6380 	ands.w	r3, fp, #1024	; 0x400
 8005ff6:	9309      	str	r3, [sp, #36]	; 0x24
 8005ff8:	d025      	beq.n	8006046 <_svfprintf_r+0x9c6>
 8005ffa:	2300      	movs	r3, #0
 8005ffc:	2d00      	cmp	r5, #0
 8005ffe:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8006002:	f77f ae61 	ble.w	8005cc8 <_svfprintf_r+0x648>
 8006006:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006008:	781b      	ldrb	r3, [r3, #0]
 800600a:	2bff      	cmp	r3, #255	; 0xff
 800600c:	d10a      	bne.n	8006024 <_svfprintf_r+0x9a4>
 800600e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8006012:	9912      	ldr	r1, [sp, #72]	; 0x48
 8006014:	4413      	add	r3, r2
 8006016:	9a04      	ldr	r2, [sp, #16]
 8006018:	fb01 2303 	mla	r3, r1, r3, r2
 800601c:	9304      	str	r3, [sp, #16]
 800601e:	e653      	b.n	8005cc8 <_svfprintf_r+0x648>
 8006020:	9504      	str	r5, [sp, #16]
 8006022:	e7d2      	b.n	8005fca <_svfprintf_r+0x94a>
 8006024:	42ab      	cmp	r3, r5
 8006026:	daf2      	bge.n	800600e <_svfprintf_r+0x98e>
 8006028:	1aed      	subs	r5, r5, r3
 800602a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800602c:	785b      	ldrb	r3, [r3, #1]
 800602e:	b133      	cbz	r3, 800603e <_svfprintf_r+0x9be>
 8006030:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006032:	3301      	adds	r3, #1
 8006034:	9309      	str	r3, [sp, #36]	; 0x24
 8006036:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006038:	3301      	adds	r3, #1
 800603a:	930a      	str	r3, [sp, #40]	; 0x28
 800603c:	e7e3      	b.n	8006006 <_svfprintf_r+0x986>
 800603e:	9b08      	ldr	r3, [sp, #32]
 8006040:	3301      	adds	r3, #1
 8006042:	9308      	str	r3, [sp, #32]
 8006044:	e7df      	b.n	8006006 <_svfprintf_r+0x986>
 8006046:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006048:	9308      	str	r3, [sp, #32]
 800604a:	e63d      	b.n	8005cc8 <_svfprintf_r+0x648>
 800604c:	1d33      	adds	r3, r6, #4
 800604e:	f01b 0f20 	tst.w	fp, #32
 8006052:	9307      	str	r3, [sp, #28]
 8006054:	d00a      	beq.n	800606c <_svfprintf_r+0x9ec>
 8006056:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006058:	6833      	ldr	r3, [r6, #0]
 800605a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800605c:	17d2      	asrs	r2, r2, #31
 800605e:	e9c3 1200 	strd	r1, r2, [r3]
 8006062:	9e07      	ldr	r6, [sp, #28]
 8006064:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8006068:	f7ff bb4a 	b.w	8005700 <_svfprintf_r+0x80>
 800606c:	f01b 0f10 	tst.w	fp, #16
 8006070:	d003      	beq.n	800607a <_svfprintf_r+0x9fa>
 8006072:	6833      	ldr	r3, [r6, #0]
 8006074:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006076:	601a      	str	r2, [r3, #0]
 8006078:	e7f3      	b.n	8006062 <_svfprintf_r+0x9e2>
 800607a:	f01b 0f40 	tst.w	fp, #64	; 0x40
 800607e:	d003      	beq.n	8006088 <_svfprintf_r+0xa08>
 8006080:	6833      	ldr	r3, [r6, #0]
 8006082:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006084:	801a      	strh	r2, [r3, #0]
 8006086:	e7ec      	b.n	8006062 <_svfprintf_r+0x9e2>
 8006088:	f41b 7f00 	tst.w	fp, #512	; 0x200
 800608c:	d0f1      	beq.n	8006072 <_svfprintf_r+0x9f2>
 800608e:	6833      	ldr	r3, [r6, #0]
 8006090:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006092:	701a      	strb	r2, [r3, #0]
 8006094:	e7e5      	b.n	8006062 <_svfprintf_r+0x9e2>
 8006096:	f04b 0b10 	orr.w	fp, fp, #16
 800609a:	f01b 0320 	ands.w	r3, fp, #32
 800609e:	d01f      	beq.n	80060e0 <_svfprintf_r+0xa60>
 80060a0:	1df3      	adds	r3, r6, #7
 80060a2:	f023 0307 	bic.w	r3, r3, #7
 80060a6:	461a      	mov	r2, r3
 80060a8:	685d      	ldr	r5, [r3, #4]
 80060aa:	f852 6b08 	ldr.w	r6, [r2], #8
 80060ae:	9207      	str	r2, [sp, #28]
 80060b0:	f42b 6b80 	bic.w	fp, fp, #1024	; 0x400
 80060b4:	2300      	movs	r3, #0
 80060b6:	2200      	movs	r2, #0
 80060b8:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b
 80060bc:	9a04      	ldr	r2, [sp, #16]
 80060be:	3201      	adds	r2, #1
 80060c0:	f000 848d 	beq.w	80069de <_svfprintf_r+0x135e>
 80060c4:	ea56 0205 	orrs.w	r2, r6, r5
 80060c8:	f02b 0780 	bic.w	r7, fp, #128	; 0x80
 80060cc:	f040 848c 	bne.w	80069e8 <_svfprintf_r+0x1368>
 80060d0:	9a04      	ldr	r2, [sp, #16]
 80060d2:	2a00      	cmp	r2, #0
 80060d4:	f000 80f9 	beq.w	80062ca <_svfprintf_r+0xc4a>
 80060d8:	2b01      	cmp	r3, #1
 80060da:	f040 8488 	bne.w	80069ee <_svfprintf_r+0x136e>
 80060de:	e09f      	b.n	8006220 <_svfprintf_r+0xba0>
 80060e0:	4632      	mov	r2, r6
 80060e2:	f01b 0510 	ands.w	r5, fp, #16
 80060e6:	f852 6b04 	ldr.w	r6, [r2], #4
 80060ea:	9207      	str	r2, [sp, #28]
 80060ec:	d001      	beq.n	80060f2 <_svfprintf_r+0xa72>
 80060ee:	461d      	mov	r5, r3
 80060f0:	e7de      	b.n	80060b0 <_svfprintf_r+0xa30>
 80060f2:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
 80060f6:	d001      	beq.n	80060fc <_svfprintf_r+0xa7c>
 80060f8:	b2b6      	uxth	r6, r6
 80060fa:	e7d9      	b.n	80060b0 <_svfprintf_r+0xa30>
 80060fc:	f41b 7500 	ands.w	r5, fp, #512	; 0x200
 8006100:	d0d6      	beq.n	80060b0 <_svfprintf_r+0xa30>
 8006102:	b2f6      	uxtb	r6, r6
 8006104:	e7f3      	b.n	80060ee <_svfprintf_r+0xa6e>
 8006106:	4633      	mov	r3, r6
 8006108:	2278      	movs	r2, #120	; 0x78
 800610a:	f853 6b04 	ldr.w	r6, [r3], #4
 800610e:	9307      	str	r3, [sp, #28]
 8006110:	2330      	movs	r3, #48	; 0x30
 8006112:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
 8006116:	4ba3      	ldr	r3, [pc, #652]	; (80063a4 <_svfprintf_r+0xd24>)
 8006118:	9316      	str	r3, [sp, #88]	; 0x58
 800611a:	2500      	movs	r5, #0
 800611c:	f04b 0b02 	orr.w	fp, fp, #2
 8006120:	f88d 206d 	strb.w	r2, [sp, #109]	; 0x6d
 8006124:	2302      	movs	r3, #2
 8006126:	9206      	str	r2, [sp, #24]
 8006128:	e7c5      	b.n	80060b6 <_svfprintf_r+0xa36>
 800612a:	4633      	mov	r3, r6
 800612c:	2500      	movs	r5, #0
 800612e:	f853 9b04 	ldr.w	r9, [r3], #4
 8006132:	9307      	str	r3, [sp, #28]
 8006134:	9b04      	ldr	r3, [sp, #16]
 8006136:	f88d 506b 	strb.w	r5, [sp, #107]	; 0x6b
 800613a:	1c58      	adds	r0, r3, #1
 800613c:	d010      	beq.n	8006160 <_svfprintf_r+0xae0>
 800613e:	461a      	mov	r2, r3
 8006140:	4629      	mov	r1, r5
 8006142:	4648      	mov	r0, r9
 8006144:	f7fa f84c 	bl	80001e0 <memchr>
 8006148:	9003      	str	r0, [sp, #12]
 800614a:	2800      	cmp	r0, #0
 800614c:	f000 80d4 	beq.w	80062f8 <_svfprintf_r+0xc78>
 8006150:	eba0 0309 	sub.w	r3, r0, r9
 8006154:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8006158:	e9cd 5508 	strd	r5, r5, [sp, #32]
 800615c:	462e      	mov	r6, r5
 800615e:	e5bb      	b.n	8005cd8 <_svfprintf_r+0x658>
 8006160:	4648      	mov	r0, r9
 8006162:	f7fa f835 	bl	80001d0 <strlen>
 8006166:	e9cd 5003 	strd	r5, r0, [sp, #12]
 800616a:	e45f      	b.n	8005a2c <_svfprintf_r+0x3ac>
 800616c:	f04b 0b10 	orr.w	fp, fp, #16
 8006170:	f01b 0320 	ands.w	r3, fp, #32
 8006174:	d009      	beq.n	800618a <_svfprintf_r+0xb0a>
 8006176:	1df3      	adds	r3, r6, #7
 8006178:	f023 0307 	bic.w	r3, r3, #7
 800617c:	461a      	mov	r2, r3
 800617e:	685d      	ldr	r5, [r3, #4]
 8006180:	f852 6b08 	ldr.w	r6, [r2], #8
 8006184:	9207      	str	r2, [sp, #28]
 8006186:	2301      	movs	r3, #1
 8006188:	e795      	b.n	80060b6 <_svfprintf_r+0xa36>
 800618a:	4632      	mov	r2, r6
 800618c:	f01b 0510 	ands.w	r5, fp, #16
 8006190:	f852 6b04 	ldr.w	r6, [r2], #4
 8006194:	9207      	str	r2, [sp, #28]
 8006196:	d001      	beq.n	800619c <_svfprintf_r+0xb1c>
 8006198:	461d      	mov	r5, r3
 800619a:	e7f4      	b.n	8006186 <_svfprintf_r+0xb06>
 800619c:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
 80061a0:	d001      	beq.n	80061a6 <_svfprintf_r+0xb26>
 80061a2:	b2b6      	uxth	r6, r6
 80061a4:	e7ef      	b.n	8006186 <_svfprintf_r+0xb06>
 80061a6:	f41b 7500 	ands.w	r5, fp, #512	; 0x200
 80061aa:	d0ec      	beq.n	8006186 <_svfprintf_r+0xb06>
 80061ac:	b2f6      	uxtb	r6, r6
 80061ae:	e7f3      	b.n	8006198 <_svfprintf_r+0xb18>
 80061b0:	4b7d      	ldr	r3, [pc, #500]	; (80063a8 <_svfprintf_r+0xd28>)
 80061b2:	9316      	str	r3, [sp, #88]	; 0x58
 80061b4:	f01b 0320 	ands.w	r3, fp, #32
 80061b8:	d01b      	beq.n	80061f2 <_svfprintf_r+0xb72>
 80061ba:	1df3      	adds	r3, r6, #7
 80061bc:	f023 0307 	bic.w	r3, r3, #7
 80061c0:	461a      	mov	r2, r3
 80061c2:	685d      	ldr	r5, [r3, #4]
 80061c4:	f852 6b08 	ldr.w	r6, [r2], #8
 80061c8:	9207      	str	r2, [sp, #28]
 80061ca:	f01b 0f01 	tst.w	fp, #1
 80061ce:	d00a      	beq.n	80061e6 <_svfprintf_r+0xb66>
 80061d0:	ea56 0305 	orrs.w	r3, r6, r5
 80061d4:	d007      	beq.n	80061e6 <_svfprintf_r+0xb66>
 80061d6:	2330      	movs	r3, #48	; 0x30
 80061d8:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
 80061dc:	9b06      	ldr	r3, [sp, #24]
 80061de:	f88d 306d 	strb.w	r3, [sp, #109]	; 0x6d
 80061e2:	f04b 0b02 	orr.w	fp, fp, #2
 80061e6:	f42b 6b80 	bic.w	fp, fp, #1024	; 0x400
 80061ea:	2302      	movs	r3, #2
 80061ec:	e763      	b.n	80060b6 <_svfprintf_r+0xa36>
 80061ee:	4b6d      	ldr	r3, [pc, #436]	; (80063a4 <_svfprintf_r+0xd24>)
 80061f0:	e7df      	b.n	80061b2 <_svfprintf_r+0xb32>
 80061f2:	4632      	mov	r2, r6
 80061f4:	f01b 0510 	ands.w	r5, fp, #16
 80061f8:	f852 6b04 	ldr.w	r6, [r2], #4
 80061fc:	9207      	str	r2, [sp, #28]
 80061fe:	d001      	beq.n	8006204 <_svfprintf_r+0xb84>
 8006200:	461d      	mov	r5, r3
 8006202:	e7e2      	b.n	80061ca <_svfprintf_r+0xb4a>
 8006204:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
 8006208:	d001      	beq.n	800620e <_svfprintf_r+0xb8e>
 800620a:	b2b6      	uxth	r6, r6
 800620c:	e7dd      	b.n	80061ca <_svfprintf_r+0xb4a>
 800620e:	f41b 7500 	ands.w	r5, fp, #512	; 0x200
 8006212:	d0da      	beq.n	80061ca <_svfprintf_r+0xb4a>
 8006214:	b2f6      	uxtb	r6, r6
 8006216:	e7f3      	b.n	8006200 <_svfprintf_r+0xb80>
 8006218:	2e0a      	cmp	r6, #10
 800621a:	f175 0300 	sbcs.w	r3, r5, #0
 800621e:	d205      	bcs.n	800622c <_svfprintf_r+0xbac>
 8006220:	3630      	adds	r6, #48	; 0x30
 8006222:	f88d 6137 	strb.w	r6, [sp, #311]	; 0x137
 8006226:	f20d 1937 	addw	r9, sp, #311	; 0x137
 800622a:	e3fb      	b.n	8006a24 <_svfprintf_r+0x13a4>
 800622c:	2300      	movs	r3, #0
 800622e:	9305      	str	r3, [sp, #20]
 8006230:	f407 6380 	and.w	r3, r7, #1024	; 0x400
 8006234:	f50d 7b9c 	add.w	fp, sp, #312	; 0x138
 8006238:	9303      	str	r3, [sp, #12]
 800623a:	220a      	movs	r2, #10
 800623c:	2300      	movs	r3, #0
 800623e:	4630      	mov	r0, r6
 8006240:	4629      	mov	r1, r5
 8006242:	f7fa fcb1 	bl	8000ba8 <__aeabi_uldivmod>
 8006246:	9b05      	ldr	r3, [sp, #20]
 8006248:	3301      	adds	r3, #1
 800624a:	9305      	str	r3, [sp, #20]
 800624c:	9b03      	ldr	r3, [sp, #12]
 800624e:	3230      	adds	r2, #48	; 0x30
 8006250:	f10b 39ff 	add.w	r9, fp, #4294967295	; 0xffffffff
 8006254:	f80b 2c01 	strb.w	r2, [fp, #-1]
 8006258:	b1d3      	cbz	r3, 8006290 <_svfprintf_r+0xc10>
 800625a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800625c:	9a05      	ldr	r2, [sp, #20]
 800625e:	781b      	ldrb	r3, [r3, #0]
 8006260:	429a      	cmp	r2, r3
 8006262:	d115      	bne.n	8006290 <_svfprintf_r+0xc10>
 8006264:	2aff      	cmp	r2, #255	; 0xff
 8006266:	d013      	beq.n	8006290 <_svfprintf_r+0xc10>
 8006268:	2e0a      	cmp	r6, #10
 800626a:	f175 0300 	sbcs.w	r3, r5, #0
 800626e:	d30f      	bcc.n	8006290 <_svfprintf_r+0xc10>
 8006270:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006272:	9914      	ldr	r1, [sp, #80]	; 0x50
 8006274:	eba9 0903 	sub.w	r9, r9, r3
 8006278:	461a      	mov	r2, r3
 800627a:	4648      	mov	r0, r9
 800627c:	f002 f939 	bl	80084f2 <strncpy>
 8006280:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006282:	785b      	ldrb	r3, [r3, #1]
 8006284:	b11b      	cbz	r3, 800628e <_svfprintf_r+0xc0e>
 8006286:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006288:	3301      	adds	r3, #1
 800628a:	930a      	str	r3, [sp, #40]	; 0x28
 800628c:	2300      	movs	r3, #0
 800628e:	9305      	str	r3, [sp, #20]
 8006290:	2300      	movs	r3, #0
 8006292:	220a      	movs	r2, #10
 8006294:	4630      	mov	r0, r6
 8006296:	4629      	mov	r1, r5
 8006298:	f7fa fc86 	bl	8000ba8 <__aeabi_uldivmod>
 800629c:	2e0a      	cmp	r6, #10
 800629e:	f175 0300 	sbcs.w	r3, r5, #0
 80062a2:	f0c0 83bf 	bcc.w	8006a24 <_svfprintf_r+0x13a4>
 80062a6:	4606      	mov	r6, r0
 80062a8:	460d      	mov	r5, r1
 80062aa:	46cb      	mov	fp, r9
 80062ac:	e7c5      	b.n	800623a <_svfprintf_r+0xbba>
 80062ae:	f006 030f 	and.w	r3, r6, #15
 80062b2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80062b4:	0936      	lsrs	r6, r6, #4
 80062b6:	5cd3      	ldrb	r3, [r2, r3]
 80062b8:	f809 3d01 	strb.w	r3, [r9, #-1]!
 80062bc:	ea46 7605 	orr.w	r6, r6, r5, lsl #28
 80062c0:	092d      	lsrs	r5, r5, #4
 80062c2:	ea56 0305 	orrs.w	r3, r6, r5
 80062c6:	d1f2      	bne.n	80062ae <_svfprintf_r+0xc2e>
 80062c8:	e3ac      	b.n	8006a24 <_svfprintf_r+0x13a4>
 80062ca:	b933      	cbnz	r3, 80062da <_svfprintf_r+0xc5a>
 80062cc:	f01b 0f01 	tst.w	fp, #1
 80062d0:	d003      	beq.n	80062da <_svfprintf_r+0xc5a>
 80062d2:	2330      	movs	r3, #48	; 0x30
 80062d4:	f88d 3137 	strb.w	r3, [sp, #311]	; 0x137
 80062d8:	e7a5      	b.n	8006226 <_svfprintf_r+0xba6>
 80062da:	f50d 799c 	add.w	r9, sp, #312	; 0x138
 80062de:	e3a1      	b.n	8006a24 <_svfprintf_r+0x13a4>
 80062e0:	9b06      	ldr	r3, [sp, #24]
 80062e2:	2b00      	cmp	r3, #0
 80062e4:	f000 8370 	beq.w	80069c8 <_svfprintf_r+0x1348>
 80062e8:	2000      	movs	r0, #0
 80062ea:	f88d 30d4 	strb.w	r3, [sp, #212]	; 0xd4
 80062ee:	f88d 006b 	strb.w	r0, [sp, #107]	; 0x6b
 80062f2:	9607      	str	r6, [sp, #28]
 80062f4:	f7ff bb29 	b.w	800594a <_svfprintf_r+0x2ca>
 80062f8:	9e03      	ldr	r6, [sp, #12]
 80062fa:	f7ff bb98 	b.w	8005a2e <_svfprintf_r+0x3ae>
 80062fe:	2010      	movs	r0, #16
 8006300:	4402      	add	r2, r0
 8006302:	2b07      	cmp	r3, #7
 8006304:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 8006308:	6060      	str	r0, [r4, #4]
 800630a:	dd08      	ble.n	800631e <_svfprintf_r+0xc9e>
 800630c:	aa22      	add	r2, sp, #136	; 0x88
 800630e:	4641      	mov	r1, r8
 8006310:	4650      	mov	r0, sl
 8006312:	f002 f901 	bl	8008518 <__ssprint_r>
 8006316:	2800      	cmp	r0, #0
 8006318:	f040 8334 	bne.w	8006984 <_svfprintf_r+0x1304>
 800631c:	a925      	add	r1, sp, #148	; 0x94
 800631e:	3f10      	subs	r7, #16
 8006320:	460c      	mov	r4, r1
 8006322:	e4f4      	b.n	8005d0e <_svfprintf_r+0x68e>
 8006324:	460c      	mov	r4, r1
 8006326:	e50d      	b.n	8005d44 <_svfprintf_r+0x6c4>
 8006328:	aa22      	add	r2, sp, #136	; 0x88
 800632a:	4641      	mov	r1, r8
 800632c:	4650      	mov	r0, sl
 800632e:	f002 f8f3 	bl	8008518 <__ssprint_r>
 8006332:	2800      	cmp	r0, #0
 8006334:	f040 8326 	bne.w	8006984 <_svfprintf_r+0x1304>
 8006338:	ac25      	add	r4, sp, #148	; 0x94
 800633a:	e515      	b.n	8005d68 <_svfprintf_r+0x6e8>
 800633c:	aa22      	add	r2, sp, #136	; 0x88
 800633e:	4641      	mov	r1, r8
 8006340:	4650      	mov	r0, sl
 8006342:	f002 f8e9 	bl	8008518 <__ssprint_r>
 8006346:	2800      	cmp	r0, #0
 8006348:	f040 831c 	bne.w	8006984 <_svfprintf_r+0x1304>
 800634c:	ac25      	add	r4, sp, #148	; 0x94
 800634e:	e51b      	b.n	8005d88 <_svfprintf_r+0x708>
 8006350:	2010      	movs	r0, #16
 8006352:	4402      	add	r2, r0
 8006354:	2b07      	cmp	r3, #7
 8006356:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800635a:	6060      	str	r0, [r4, #4]
 800635c:	dd08      	ble.n	8006370 <_svfprintf_r+0xcf0>
 800635e:	aa22      	add	r2, sp, #136	; 0x88
 8006360:	4641      	mov	r1, r8
 8006362:	4650      	mov	r0, sl
 8006364:	f002 f8d8 	bl	8008518 <__ssprint_r>
 8006368:	2800      	cmp	r0, #0
 800636a:	f040 830b 	bne.w	8006984 <_svfprintf_r+0x1304>
 800636e:	a925      	add	r1, sp, #148	; 0x94
 8006370:	3f10      	subs	r7, #16
 8006372:	460c      	mov	r4, r1
 8006374:	e510      	b.n	8005d98 <_svfprintf_r+0x718>
 8006376:	460c      	mov	r4, r1
 8006378:	e529      	b.n	8005dce <_svfprintf_r+0x74e>
 800637a:	2010      	movs	r0, #16
 800637c:	4402      	add	r2, r0
 800637e:	2b07      	cmp	r3, #7
 8006380:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 8006384:	6060      	str	r0, [r4, #4]
 8006386:	dd08      	ble.n	800639a <_svfprintf_r+0xd1a>
 8006388:	aa22      	add	r2, sp, #136	; 0x88
 800638a:	4641      	mov	r1, r8
 800638c:	4650      	mov	r0, sl
 800638e:	f002 f8c3 	bl	8008518 <__ssprint_r>
 8006392:	2800      	cmp	r0, #0
 8006394:	f040 82f6 	bne.w	8006984 <_svfprintf_r+0x1304>
 8006398:	a925      	add	r1, sp, #148	; 0x94
 800639a:	3e10      	subs	r6, #16
 800639c:	460c      	mov	r4, r1
 800639e:	e529      	b.n	8005df4 <_svfprintf_r+0x774>
 80063a0:	460c      	mov	r4, r1
 80063a2:	e541      	b.n	8005e28 <_svfprintf_r+0x7a8>
 80063a4:	0800e324 	.word	0x0800e324
 80063a8:	0800e335 	.word	0x0800e335
 80063ac:	9b06      	ldr	r3, [sp, #24]
 80063ae:	2b65      	cmp	r3, #101	; 0x65
 80063b0:	f340 8230 	ble.w	8006814 <_svfprintf_r+0x1194>
 80063b4:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80063b8:	2200      	movs	r2, #0
 80063ba:	2300      	movs	r3, #0
 80063bc:	f7fa fb84 	bl	8000ac8 <__aeabi_dcmpeq>
 80063c0:	2800      	cmp	r0, #0
 80063c2:	d068      	beq.n	8006496 <_svfprintf_r+0xe16>
 80063c4:	4b6d      	ldr	r3, [pc, #436]	; (800657c <_svfprintf_r+0xefc>)
 80063c6:	6023      	str	r3, [r4, #0]
 80063c8:	2301      	movs	r3, #1
 80063ca:	441e      	add	r6, r3
 80063cc:	6063      	str	r3, [r4, #4]
 80063ce:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80063d0:	9624      	str	r6, [sp, #144]	; 0x90
 80063d2:	3301      	adds	r3, #1
 80063d4:	2b07      	cmp	r3, #7
 80063d6:	9323      	str	r3, [sp, #140]	; 0x8c
 80063d8:	dc37      	bgt.n	800644a <_svfprintf_r+0xdca>
 80063da:	3408      	adds	r4, #8
 80063dc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80063de:	9a05      	ldr	r2, [sp, #20]
 80063e0:	4293      	cmp	r3, r2
 80063e2:	db03      	blt.n	80063ec <_svfprintf_r+0xd6c>
 80063e4:	f01b 0f01 	tst.w	fp, #1
 80063e8:	f43f ad30 	beq.w	8005e4c <_svfprintf_r+0x7cc>
 80063ec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80063ee:	6023      	str	r3, [r4, #0]
 80063f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80063f2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80063f4:	6063      	str	r3, [r4, #4]
 80063f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80063f8:	4413      	add	r3, r2
 80063fa:	9324      	str	r3, [sp, #144]	; 0x90
 80063fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80063fe:	3301      	adds	r3, #1
 8006400:	2b07      	cmp	r3, #7
 8006402:	9323      	str	r3, [sp, #140]	; 0x8c
 8006404:	dc2b      	bgt.n	800645e <_svfprintf_r+0xdde>
 8006406:	3408      	adds	r4, #8
 8006408:	9b05      	ldr	r3, [sp, #20]
 800640a:	1e5d      	subs	r5, r3, #1
 800640c:	2d00      	cmp	r5, #0
 800640e:	f77f ad1d 	ble.w	8005e4c <_svfprintf_r+0x7cc>
 8006412:	4e5b      	ldr	r6, [pc, #364]	; (8006580 <_svfprintf_r+0xf00>)
 8006414:	2710      	movs	r7, #16
 8006416:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800641a:	2d10      	cmp	r5, #16
 800641c:	f103 0301 	add.w	r3, r3, #1
 8006420:	f104 0108 	add.w	r1, r4, #8
 8006424:	6026      	str	r6, [r4, #0]
 8006426:	dc24      	bgt.n	8006472 <_svfprintf_r+0xdf2>
 8006428:	6065      	str	r5, [r4, #4]
 800642a:	2b07      	cmp	r3, #7
 800642c:	4415      	add	r5, r2
 800642e:	e9cd 3523 	strd	r3, r5, [sp, #140]	; 0x8c
 8006432:	f340 8286 	ble.w	8006942 <_svfprintf_r+0x12c2>
 8006436:	aa22      	add	r2, sp, #136	; 0x88
 8006438:	4641      	mov	r1, r8
 800643a:	4650      	mov	r0, sl
 800643c:	f002 f86c 	bl	8008518 <__ssprint_r>
 8006440:	2800      	cmp	r0, #0
 8006442:	f040 829f 	bne.w	8006984 <_svfprintf_r+0x1304>
 8006446:	ac25      	add	r4, sp, #148	; 0x94
 8006448:	e500      	b.n	8005e4c <_svfprintf_r+0x7cc>
 800644a:	aa22      	add	r2, sp, #136	; 0x88
 800644c:	4641      	mov	r1, r8
 800644e:	4650      	mov	r0, sl
 8006450:	f002 f862 	bl	8008518 <__ssprint_r>
 8006454:	2800      	cmp	r0, #0
 8006456:	f040 8295 	bne.w	8006984 <_svfprintf_r+0x1304>
 800645a:	ac25      	add	r4, sp, #148	; 0x94
 800645c:	e7be      	b.n	80063dc <_svfprintf_r+0xd5c>
 800645e:	aa22      	add	r2, sp, #136	; 0x88
 8006460:	4641      	mov	r1, r8
 8006462:	4650      	mov	r0, sl
 8006464:	f002 f858 	bl	8008518 <__ssprint_r>
 8006468:	2800      	cmp	r0, #0
 800646a:	f040 828b 	bne.w	8006984 <_svfprintf_r+0x1304>
 800646e:	ac25      	add	r4, sp, #148	; 0x94
 8006470:	e7ca      	b.n	8006408 <_svfprintf_r+0xd88>
 8006472:	3210      	adds	r2, #16
 8006474:	2b07      	cmp	r3, #7
 8006476:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800647a:	6067      	str	r7, [r4, #4]
 800647c:	dd08      	ble.n	8006490 <_svfprintf_r+0xe10>
 800647e:	aa22      	add	r2, sp, #136	; 0x88
 8006480:	4641      	mov	r1, r8
 8006482:	4650      	mov	r0, sl
 8006484:	f002 f848 	bl	8008518 <__ssprint_r>
 8006488:	2800      	cmp	r0, #0
 800648a:	f040 827b 	bne.w	8006984 <_svfprintf_r+0x1304>
 800648e:	a925      	add	r1, sp, #148	; 0x94
 8006490:	3d10      	subs	r5, #16
 8006492:	460c      	mov	r4, r1
 8006494:	e7bf      	b.n	8006416 <_svfprintf_r+0xd96>
 8006496:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8006498:	2b00      	cmp	r3, #0
 800649a:	dc73      	bgt.n	8006584 <_svfprintf_r+0xf04>
 800649c:	4b37      	ldr	r3, [pc, #220]	; (800657c <_svfprintf_r+0xefc>)
 800649e:	6023      	str	r3, [r4, #0]
 80064a0:	2301      	movs	r3, #1
 80064a2:	441e      	add	r6, r3
 80064a4:	6063      	str	r3, [r4, #4]
 80064a6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80064a8:	9624      	str	r6, [sp, #144]	; 0x90
 80064aa:	3301      	adds	r3, #1
 80064ac:	2b07      	cmp	r3, #7
 80064ae:	9323      	str	r3, [sp, #140]	; 0x8c
 80064b0:	dc3d      	bgt.n	800652e <_svfprintf_r+0xeae>
 80064b2:	3408      	adds	r4, #8
 80064b4:	9905      	ldr	r1, [sp, #20]
 80064b6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80064b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80064ba:	430a      	orrs	r2, r1
 80064bc:	f00b 0101 	and.w	r1, fp, #1
 80064c0:	430a      	orrs	r2, r1
 80064c2:	f43f acc3 	beq.w	8005e4c <_svfprintf_r+0x7cc>
 80064c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80064c8:	6022      	str	r2, [r4, #0]
 80064ca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80064cc:	6062      	str	r2, [r4, #4]
 80064ce:	4413      	add	r3, r2
 80064d0:	9324      	str	r3, [sp, #144]	; 0x90
 80064d2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80064d4:	3301      	adds	r3, #1
 80064d6:	2b07      	cmp	r3, #7
 80064d8:	9323      	str	r3, [sp, #140]	; 0x8c
 80064da:	dc32      	bgt.n	8006542 <_svfprintf_r+0xec2>
 80064dc:	3408      	adds	r4, #8
 80064de:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 80064e0:	2d00      	cmp	r5, #0
 80064e2:	da1b      	bge.n	800651c <_svfprintf_r+0xe9c>
 80064e4:	4e26      	ldr	r6, [pc, #152]	; (8006580 <_svfprintf_r+0xf00>)
 80064e6:	426d      	negs	r5, r5
 80064e8:	4623      	mov	r3, r4
 80064ea:	2710      	movs	r7, #16
 80064ec:	e9dd 2123 	ldrd	r2, r1, [sp, #140]	; 0x8c
 80064f0:	2d10      	cmp	r5, #16
 80064f2:	f102 0201 	add.w	r2, r2, #1
 80064f6:	f104 0408 	add.w	r4, r4, #8
 80064fa:	601e      	str	r6, [r3, #0]
 80064fc:	dc2b      	bgt.n	8006556 <_svfprintf_r+0xed6>
 80064fe:	605d      	str	r5, [r3, #4]
 8006500:	2a07      	cmp	r2, #7
 8006502:	440d      	add	r5, r1
 8006504:	e9cd 2523 	strd	r2, r5, [sp, #140]	; 0x8c
 8006508:	dd08      	ble.n	800651c <_svfprintf_r+0xe9c>
 800650a:	aa22      	add	r2, sp, #136	; 0x88
 800650c:	4641      	mov	r1, r8
 800650e:	4650      	mov	r0, sl
 8006510:	f002 f802 	bl	8008518 <__ssprint_r>
 8006514:	2800      	cmp	r0, #0
 8006516:	f040 8235 	bne.w	8006984 <_svfprintf_r+0x1304>
 800651a:	ac25      	add	r4, sp, #148	; 0x94
 800651c:	9b05      	ldr	r3, [sp, #20]
 800651e:	9a05      	ldr	r2, [sp, #20]
 8006520:	6063      	str	r3, [r4, #4]
 8006522:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8006524:	f8c4 9000 	str.w	r9, [r4]
 8006528:	4413      	add	r3, r2
 800652a:	9324      	str	r3, [sp, #144]	; 0x90
 800652c:	e487      	b.n	8005e3e <_svfprintf_r+0x7be>
 800652e:	aa22      	add	r2, sp, #136	; 0x88
 8006530:	4641      	mov	r1, r8
 8006532:	4650      	mov	r0, sl
 8006534:	f001 fff0 	bl	8008518 <__ssprint_r>
 8006538:	2800      	cmp	r0, #0
 800653a:	f040 8223 	bne.w	8006984 <_svfprintf_r+0x1304>
 800653e:	ac25      	add	r4, sp, #148	; 0x94
 8006540:	e7b8      	b.n	80064b4 <_svfprintf_r+0xe34>
 8006542:	aa22      	add	r2, sp, #136	; 0x88
 8006544:	4641      	mov	r1, r8
 8006546:	4650      	mov	r0, sl
 8006548:	f001 ffe6 	bl	8008518 <__ssprint_r>
 800654c:	2800      	cmp	r0, #0
 800654e:	f040 8219 	bne.w	8006984 <_svfprintf_r+0x1304>
 8006552:	ac25      	add	r4, sp, #148	; 0x94
 8006554:	e7c3      	b.n	80064de <_svfprintf_r+0xe5e>
 8006556:	3110      	adds	r1, #16
 8006558:	2a07      	cmp	r2, #7
 800655a:	e9cd 2123 	strd	r2, r1, [sp, #140]	; 0x8c
 800655e:	605f      	str	r7, [r3, #4]
 8006560:	dd08      	ble.n	8006574 <_svfprintf_r+0xef4>
 8006562:	aa22      	add	r2, sp, #136	; 0x88
 8006564:	4641      	mov	r1, r8
 8006566:	4650      	mov	r0, sl
 8006568:	f001 ffd6 	bl	8008518 <__ssprint_r>
 800656c:	2800      	cmp	r0, #0
 800656e:	f040 8209 	bne.w	8006984 <_svfprintf_r+0x1304>
 8006572:	ac25      	add	r4, sp, #148	; 0x94
 8006574:	3d10      	subs	r5, #16
 8006576:	4623      	mov	r3, r4
 8006578:	e7b8      	b.n	80064ec <_svfprintf_r+0xe6c>
 800657a:	bf00      	nop
 800657c:	0800e346 	.word	0x0800e346
 8006580:	0800e358 	.word	0x0800e358
 8006584:	9f05      	ldr	r7, [sp, #20]
 8006586:	42af      	cmp	r7, r5
 8006588:	bfa8      	it	ge
 800658a:	462f      	movge	r7, r5
 800658c:	2f00      	cmp	r7, #0
 800658e:	dd0a      	ble.n	80065a6 <_svfprintf_r+0xf26>
 8006590:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006592:	3301      	adds	r3, #1
 8006594:	443e      	add	r6, r7
 8006596:	2b07      	cmp	r3, #7
 8006598:	e9c4 9700 	strd	r9, r7, [r4]
 800659c:	9624      	str	r6, [sp, #144]	; 0x90
 800659e:	9323      	str	r3, [sp, #140]	; 0x8c
 80065a0:	f300 8085 	bgt.w	80066ae <_svfprintf_r+0x102e>
 80065a4:	3408      	adds	r4, #8
 80065a6:	2f00      	cmp	r7, #0
 80065a8:	bfac      	ite	ge
 80065aa:	1bee      	subge	r6, r5, r7
 80065ac:	462e      	movlt	r6, r5
 80065ae:	2e00      	cmp	r6, #0
 80065b0:	dd19      	ble.n	80065e6 <_svfprintf_r+0xf66>
 80065b2:	4f97      	ldr	r7, [pc, #604]	; (8006810 <_svfprintf_r+0x1190>)
 80065b4:	6027      	str	r7, [r4, #0]
 80065b6:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 80065ba:	2e10      	cmp	r6, #16
 80065bc:	f103 0301 	add.w	r3, r3, #1
 80065c0:	f104 0108 	add.w	r1, r4, #8
 80065c4:	dc7d      	bgt.n	80066c2 <_svfprintf_r+0x1042>
 80065c6:	6066      	str	r6, [r4, #4]
 80065c8:	2b07      	cmp	r3, #7
 80065ca:	4416      	add	r6, r2
 80065cc:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
 80065d0:	f340 808a 	ble.w	80066e8 <_svfprintf_r+0x1068>
 80065d4:	aa22      	add	r2, sp, #136	; 0x88
 80065d6:	4641      	mov	r1, r8
 80065d8:	4650      	mov	r0, sl
 80065da:	f001 ff9d 	bl	8008518 <__ssprint_r>
 80065de:	2800      	cmp	r0, #0
 80065e0:	f040 81d0 	bne.w	8006984 <_svfprintf_r+0x1304>
 80065e4:	ac25      	add	r4, sp, #148	; 0x94
 80065e6:	f41b 6f80 	tst.w	fp, #1024	; 0x400
 80065ea:	444d      	add	r5, r9
 80065ec:	d00a      	beq.n	8006604 <_svfprintf_r+0xf84>
 80065ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80065f0:	2b00      	cmp	r3, #0
 80065f2:	d17b      	bne.n	80066ec <_svfprintf_r+0x106c>
 80065f4:	9b08      	ldr	r3, [sp, #32]
 80065f6:	2b00      	cmp	r3, #0
 80065f8:	d17b      	bne.n	80066f2 <_svfprintf_r+0x1072>
 80065fa:	9b05      	ldr	r3, [sp, #20]
 80065fc:	444b      	add	r3, r9
 80065fe:	429d      	cmp	r5, r3
 8006600:	bf28      	it	cs
 8006602:	461d      	movcs	r5, r3
 8006604:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8006606:	9a05      	ldr	r2, [sp, #20]
 8006608:	4293      	cmp	r3, r2
 800660a:	db02      	blt.n	8006612 <_svfprintf_r+0xf92>
 800660c:	f01b 0f01 	tst.w	fp, #1
 8006610:	d00e      	beq.n	8006630 <_svfprintf_r+0xfb0>
 8006612:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8006614:	6023      	str	r3, [r4, #0]
 8006616:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006618:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800661a:	6063      	str	r3, [r4, #4]
 800661c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800661e:	4413      	add	r3, r2
 8006620:	9324      	str	r3, [sp, #144]	; 0x90
 8006622:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006624:	3301      	adds	r3, #1
 8006626:	2b07      	cmp	r3, #7
 8006628:	9323      	str	r3, [sp, #140]	; 0x8c
 800662a:	f300 80dd 	bgt.w	80067e8 <_svfprintf_r+0x1168>
 800662e:	3408      	adds	r4, #8
 8006630:	9b05      	ldr	r3, [sp, #20]
 8006632:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 8006634:	eb09 0203 	add.w	r2, r9, r3
 8006638:	1b9e      	subs	r6, r3, r6
 800663a:	1b52      	subs	r2, r2, r5
 800663c:	4296      	cmp	r6, r2
 800663e:	bfa8      	it	ge
 8006640:	4616      	movge	r6, r2
 8006642:	2e00      	cmp	r6, #0
 8006644:	dd0b      	ble.n	800665e <_svfprintf_r+0xfde>
 8006646:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8006648:	4433      	add	r3, r6
 800664a:	9324      	str	r3, [sp, #144]	; 0x90
 800664c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800664e:	3301      	adds	r3, #1
 8006650:	2b07      	cmp	r3, #7
 8006652:	e9c4 5600 	strd	r5, r6, [r4]
 8006656:	9323      	str	r3, [sp, #140]	; 0x8c
 8006658:	f300 80d0 	bgt.w	80067fc <_svfprintf_r+0x117c>
 800665c:	3408      	adds	r4, #8
 800665e:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8006660:	9b05      	ldr	r3, [sp, #20]
 8006662:	2e00      	cmp	r6, #0
 8006664:	eba3 0505 	sub.w	r5, r3, r5
 8006668:	bfa8      	it	ge
 800666a:	1bad      	subge	r5, r5, r6
 800666c:	2d00      	cmp	r5, #0
 800666e:	f77f abed 	ble.w	8005e4c <_svfprintf_r+0x7cc>
 8006672:	4e67      	ldr	r6, [pc, #412]	; (8006810 <_svfprintf_r+0x1190>)
 8006674:	2710      	movs	r7, #16
 8006676:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800667a:	2d10      	cmp	r5, #16
 800667c:	f103 0301 	add.w	r3, r3, #1
 8006680:	f104 0108 	add.w	r1, r4, #8
 8006684:	6026      	str	r6, [r4, #0]
 8006686:	f77f aecf 	ble.w	8006428 <_svfprintf_r+0xda8>
 800668a:	3210      	adds	r2, #16
 800668c:	2b07      	cmp	r3, #7
 800668e:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 8006692:	6067      	str	r7, [r4, #4]
 8006694:	dd08      	ble.n	80066a8 <_svfprintf_r+0x1028>
 8006696:	aa22      	add	r2, sp, #136	; 0x88
 8006698:	4641      	mov	r1, r8
 800669a:	4650      	mov	r0, sl
 800669c:	f001 ff3c 	bl	8008518 <__ssprint_r>
 80066a0:	2800      	cmp	r0, #0
 80066a2:	f040 816f 	bne.w	8006984 <_svfprintf_r+0x1304>
 80066a6:	a925      	add	r1, sp, #148	; 0x94
 80066a8:	3d10      	subs	r5, #16
 80066aa:	460c      	mov	r4, r1
 80066ac:	e7e3      	b.n	8006676 <_svfprintf_r+0xff6>
 80066ae:	aa22      	add	r2, sp, #136	; 0x88
 80066b0:	4641      	mov	r1, r8
 80066b2:	4650      	mov	r0, sl
 80066b4:	f001 ff30 	bl	8008518 <__ssprint_r>
 80066b8:	2800      	cmp	r0, #0
 80066ba:	f040 8163 	bne.w	8006984 <_svfprintf_r+0x1304>
 80066be:	ac25      	add	r4, sp, #148	; 0x94
 80066c0:	e771      	b.n	80065a6 <_svfprintf_r+0xf26>
 80066c2:	2010      	movs	r0, #16
 80066c4:	4402      	add	r2, r0
 80066c6:	2b07      	cmp	r3, #7
 80066c8:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 80066cc:	6060      	str	r0, [r4, #4]
 80066ce:	dd08      	ble.n	80066e2 <_svfprintf_r+0x1062>
 80066d0:	aa22      	add	r2, sp, #136	; 0x88
 80066d2:	4641      	mov	r1, r8
 80066d4:	4650      	mov	r0, sl
 80066d6:	f001 ff1f 	bl	8008518 <__ssprint_r>
 80066da:	2800      	cmp	r0, #0
 80066dc:	f040 8152 	bne.w	8006984 <_svfprintf_r+0x1304>
 80066e0:	a925      	add	r1, sp, #148	; 0x94
 80066e2:	3e10      	subs	r6, #16
 80066e4:	460c      	mov	r4, r1
 80066e6:	e765      	b.n	80065b4 <_svfprintf_r+0xf34>
 80066e8:	460c      	mov	r4, r1
 80066ea:	e77c      	b.n	80065e6 <_svfprintf_r+0xf66>
 80066ec:	9b08      	ldr	r3, [sp, #32]
 80066ee:	2b00      	cmp	r3, #0
 80066f0:	d04a      	beq.n	8006788 <_svfprintf_r+0x1108>
 80066f2:	9b08      	ldr	r3, [sp, #32]
 80066f4:	3b01      	subs	r3, #1
 80066f6:	9308      	str	r3, [sp, #32]
 80066f8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80066fa:	6023      	str	r3, [r4, #0]
 80066fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80066fe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8006700:	6063      	str	r3, [r4, #4]
 8006702:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8006704:	4413      	add	r3, r2
 8006706:	9324      	str	r3, [sp, #144]	; 0x90
 8006708:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800670a:	3301      	adds	r3, #1
 800670c:	2b07      	cmp	r3, #7
 800670e:	9323      	str	r3, [sp, #140]	; 0x8c
 8006710:	dc41      	bgt.n	8006796 <_svfprintf_r+0x1116>
 8006712:	3408      	adds	r4, #8
 8006714:	9b05      	ldr	r3, [sp, #20]
 8006716:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006718:	eb09 0703 	add.w	r7, r9, r3
 800671c:	1b7b      	subs	r3, r7, r5
 800671e:	7817      	ldrb	r7, [r2, #0]
 8006720:	429f      	cmp	r7, r3
 8006722:	bfa8      	it	ge
 8006724:	461f      	movge	r7, r3
 8006726:	2f00      	cmp	r7, #0
 8006728:	dd0a      	ble.n	8006740 <_svfprintf_r+0x10c0>
 800672a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800672c:	443b      	add	r3, r7
 800672e:	9324      	str	r3, [sp, #144]	; 0x90
 8006730:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006732:	3301      	adds	r3, #1
 8006734:	2b07      	cmp	r3, #7
 8006736:	e9c4 5700 	strd	r5, r7, [r4]
 800673a:	9323      	str	r3, [sp, #140]	; 0x8c
 800673c:	dc35      	bgt.n	80067aa <_svfprintf_r+0x112a>
 800673e:	3408      	adds	r4, #8
 8006740:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006742:	781e      	ldrb	r6, [r3, #0]
 8006744:	2f00      	cmp	r7, #0
 8006746:	bfa8      	it	ge
 8006748:	1bf6      	subge	r6, r6, r7
 800674a:	2e00      	cmp	r6, #0
 800674c:	dd18      	ble.n	8006780 <_svfprintf_r+0x1100>
 800674e:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 8006752:	482f      	ldr	r0, [pc, #188]	; (8006810 <_svfprintf_r+0x1190>)
 8006754:	6020      	str	r0, [r4, #0]
 8006756:	2e10      	cmp	r6, #16
 8006758:	f103 0301 	add.w	r3, r3, #1
 800675c:	f104 0108 	add.w	r1, r4, #8
 8006760:	dc2d      	bgt.n	80067be <_svfprintf_r+0x113e>
 8006762:	4432      	add	r2, r6
 8006764:	2b07      	cmp	r3, #7
 8006766:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800676a:	6066      	str	r6, [r4, #4]
 800676c:	dd3a      	ble.n	80067e4 <_svfprintf_r+0x1164>
 800676e:	aa22      	add	r2, sp, #136	; 0x88
 8006770:	4641      	mov	r1, r8
 8006772:	4650      	mov	r0, sl
 8006774:	f001 fed0 	bl	8008518 <__ssprint_r>
 8006778:	2800      	cmp	r0, #0
 800677a:	f040 8103 	bne.w	8006984 <_svfprintf_r+0x1304>
 800677e:	ac25      	add	r4, sp, #148	; 0x94
 8006780:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006782:	781b      	ldrb	r3, [r3, #0]
 8006784:	441d      	add	r5, r3
 8006786:	e732      	b.n	80065ee <_svfprintf_r+0xf6e>
 8006788:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800678a:	3b01      	subs	r3, #1
 800678c:	930a      	str	r3, [sp, #40]	; 0x28
 800678e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006790:	3b01      	subs	r3, #1
 8006792:	9309      	str	r3, [sp, #36]	; 0x24
 8006794:	e7b0      	b.n	80066f8 <_svfprintf_r+0x1078>
 8006796:	aa22      	add	r2, sp, #136	; 0x88
 8006798:	4641      	mov	r1, r8
 800679a:	4650      	mov	r0, sl
 800679c:	f001 febc 	bl	8008518 <__ssprint_r>
 80067a0:	2800      	cmp	r0, #0
 80067a2:	f040 80ef 	bne.w	8006984 <_svfprintf_r+0x1304>
 80067a6:	ac25      	add	r4, sp, #148	; 0x94
 80067a8:	e7b4      	b.n	8006714 <_svfprintf_r+0x1094>
 80067aa:	aa22      	add	r2, sp, #136	; 0x88
 80067ac:	4641      	mov	r1, r8
 80067ae:	4650      	mov	r0, sl
 80067b0:	f001 feb2 	bl	8008518 <__ssprint_r>
 80067b4:	2800      	cmp	r0, #0
 80067b6:	f040 80e5 	bne.w	8006984 <_svfprintf_r+0x1304>
 80067ba:	ac25      	add	r4, sp, #148	; 0x94
 80067bc:	e7c0      	b.n	8006740 <_svfprintf_r+0x10c0>
 80067be:	2010      	movs	r0, #16
 80067c0:	4402      	add	r2, r0
 80067c2:	2b07      	cmp	r3, #7
 80067c4:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 80067c8:	6060      	str	r0, [r4, #4]
 80067ca:	dd08      	ble.n	80067de <_svfprintf_r+0x115e>
 80067cc:	aa22      	add	r2, sp, #136	; 0x88
 80067ce:	4641      	mov	r1, r8
 80067d0:	4650      	mov	r0, sl
 80067d2:	f001 fea1 	bl	8008518 <__ssprint_r>
 80067d6:	2800      	cmp	r0, #0
 80067d8:	f040 80d4 	bne.w	8006984 <_svfprintf_r+0x1304>
 80067dc:	a925      	add	r1, sp, #148	; 0x94
 80067de:	3e10      	subs	r6, #16
 80067e0:	460c      	mov	r4, r1
 80067e2:	e7b4      	b.n	800674e <_svfprintf_r+0x10ce>
 80067e4:	460c      	mov	r4, r1
 80067e6:	e7cb      	b.n	8006780 <_svfprintf_r+0x1100>
 80067e8:	aa22      	add	r2, sp, #136	; 0x88
 80067ea:	4641      	mov	r1, r8
 80067ec:	4650      	mov	r0, sl
 80067ee:	f001 fe93 	bl	8008518 <__ssprint_r>
 80067f2:	2800      	cmp	r0, #0
 80067f4:	f040 80c6 	bne.w	8006984 <_svfprintf_r+0x1304>
 80067f8:	ac25      	add	r4, sp, #148	; 0x94
 80067fa:	e719      	b.n	8006630 <_svfprintf_r+0xfb0>
 80067fc:	aa22      	add	r2, sp, #136	; 0x88
 80067fe:	4641      	mov	r1, r8
 8006800:	4650      	mov	r0, sl
 8006802:	f001 fe89 	bl	8008518 <__ssprint_r>
 8006806:	2800      	cmp	r0, #0
 8006808:	f040 80bc 	bne.w	8006984 <_svfprintf_r+0x1304>
 800680c:	ac25      	add	r4, sp, #148	; 0x94
 800680e:	e726      	b.n	800665e <_svfprintf_r+0xfde>
 8006810:	0800e358 	.word	0x0800e358
 8006814:	9a05      	ldr	r2, [sp, #20]
 8006816:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006818:	2a01      	cmp	r2, #1
 800681a:	f106 0601 	add.w	r6, r6, #1
 800681e:	f103 0301 	add.w	r3, r3, #1
 8006822:	f104 0508 	add.w	r5, r4, #8
 8006826:	dc02      	bgt.n	800682e <_svfprintf_r+0x11ae>
 8006828:	f01b 0f01 	tst.w	fp, #1
 800682c:	d07e      	beq.n	800692c <_svfprintf_r+0x12ac>
 800682e:	2201      	movs	r2, #1
 8006830:	2b07      	cmp	r3, #7
 8006832:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
 8006836:	f8c4 9000 	str.w	r9, [r4]
 800683a:	6062      	str	r2, [r4, #4]
 800683c:	dd08      	ble.n	8006850 <_svfprintf_r+0x11d0>
 800683e:	aa22      	add	r2, sp, #136	; 0x88
 8006840:	4641      	mov	r1, r8
 8006842:	4650      	mov	r0, sl
 8006844:	f001 fe68 	bl	8008518 <__ssprint_r>
 8006848:	2800      	cmp	r0, #0
 800684a:	f040 809b 	bne.w	8006984 <_svfprintf_r+0x1304>
 800684e:	ad25      	add	r5, sp, #148	; 0x94
 8006850:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8006852:	602b      	str	r3, [r5, #0]
 8006854:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006856:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006858:	606b      	str	r3, [r5, #4]
 800685a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800685c:	4413      	add	r3, r2
 800685e:	9324      	str	r3, [sp, #144]	; 0x90
 8006860:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006862:	3301      	adds	r3, #1
 8006864:	2b07      	cmp	r3, #7
 8006866:	9323      	str	r3, [sp, #140]	; 0x8c
 8006868:	dc32      	bgt.n	80068d0 <_svfprintf_r+0x1250>
 800686a:	3508      	adds	r5, #8
 800686c:	9b05      	ldr	r3, [sp, #20]
 800686e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8006872:	1e5c      	subs	r4, r3, #1
 8006874:	2200      	movs	r2, #0
 8006876:	2300      	movs	r3, #0
 8006878:	f7fa f926 	bl	8000ac8 <__aeabi_dcmpeq>
 800687c:	2800      	cmp	r0, #0
 800687e:	d130      	bne.n	80068e2 <_svfprintf_r+0x1262>
 8006880:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8006882:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8006884:	9a05      	ldr	r2, [sp, #20]
 8006886:	3101      	adds	r1, #1
 8006888:	3b01      	subs	r3, #1
 800688a:	f109 0001 	add.w	r0, r9, #1
 800688e:	4413      	add	r3, r2
 8006890:	2907      	cmp	r1, #7
 8006892:	e9c5 0400 	strd	r0, r4, [r5]
 8006896:	e9cd 1323 	strd	r1, r3, [sp, #140]	; 0x8c
 800689a:	dd50      	ble.n	800693e <_svfprintf_r+0x12be>
 800689c:	aa22      	add	r2, sp, #136	; 0x88
 800689e:	4641      	mov	r1, r8
 80068a0:	4650      	mov	r0, sl
 80068a2:	f001 fe39 	bl	8008518 <__ssprint_r>
 80068a6:	2800      	cmp	r0, #0
 80068a8:	d16c      	bne.n	8006984 <_svfprintf_r+0x1304>
 80068aa:	ad25      	add	r5, sp, #148	; 0x94
 80068ac:	ab1e      	add	r3, sp, #120	; 0x78
 80068ae:	602b      	str	r3, [r5, #0]
 80068b0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80068b2:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80068b4:	606b      	str	r3, [r5, #4]
 80068b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80068b8:	4413      	add	r3, r2
 80068ba:	9324      	str	r3, [sp, #144]	; 0x90
 80068bc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80068be:	3301      	adds	r3, #1
 80068c0:	2b07      	cmp	r3, #7
 80068c2:	9323      	str	r3, [sp, #140]	; 0x8c
 80068c4:	f73f adb7 	bgt.w	8006436 <_svfprintf_r+0xdb6>
 80068c8:	f105 0408 	add.w	r4, r5, #8
 80068cc:	f7ff babe 	b.w	8005e4c <_svfprintf_r+0x7cc>
 80068d0:	aa22      	add	r2, sp, #136	; 0x88
 80068d2:	4641      	mov	r1, r8
 80068d4:	4650      	mov	r0, sl
 80068d6:	f001 fe1f 	bl	8008518 <__ssprint_r>
 80068da:	2800      	cmp	r0, #0
 80068dc:	d152      	bne.n	8006984 <_svfprintf_r+0x1304>
 80068de:	ad25      	add	r5, sp, #148	; 0x94
 80068e0:	e7c4      	b.n	800686c <_svfprintf_r+0x11ec>
 80068e2:	2c00      	cmp	r4, #0
 80068e4:	dde2      	ble.n	80068ac <_svfprintf_r+0x122c>
 80068e6:	4e56      	ldr	r6, [pc, #344]	; (8006a40 <_svfprintf_r+0x13c0>)
 80068e8:	2710      	movs	r7, #16
 80068ea:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 80068ee:	2c10      	cmp	r4, #16
 80068f0:	f103 0301 	add.w	r3, r3, #1
 80068f4:	f105 0108 	add.w	r1, r5, #8
 80068f8:	602e      	str	r6, [r5, #0]
 80068fa:	dc07      	bgt.n	800690c <_svfprintf_r+0x128c>
 80068fc:	606c      	str	r4, [r5, #4]
 80068fe:	2b07      	cmp	r3, #7
 8006900:	4414      	add	r4, r2
 8006902:	e9cd 3423 	strd	r3, r4, [sp, #140]	; 0x8c
 8006906:	dcc9      	bgt.n	800689c <_svfprintf_r+0x121c>
 8006908:	460d      	mov	r5, r1
 800690a:	e7cf      	b.n	80068ac <_svfprintf_r+0x122c>
 800690c:	3210      	adds	r2, #16
 800690e:	2b07      	cmp	r3, #7
 8006910:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 8006914:	606f      	str	r7, [r5, #4]
 8006916:	dd06      	ble.n	8006926 <_svfprintf_r+0x12a6>
 8006918:	aa22      	add	r2, sp, #136	; 0x88
 800691a:	4641      	mov	r1, r8
 800691c:	4650      	mov	r0, sl
 800691e:	f001 fdfb 	bl	8008518 <__ssprint_r>
 8006922:	bb78      	cbnz	r0, 8006984 <_svfprintf_r+0x1304>
 8006924:	a925      	add	r1, sp, #148	; 0x94
 8006926:	3c10      	subs	r4, #16
 8006928:	460d      	mov	r5, r1
 800692a:	e7de      	b.n	80068ea <_svfprintf_r+0x126a>
 800692c:	2201      	movs	r2, #1
 800692e:	2b07      	cmp	r3, #7
 8006930:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
 8006934:	f8c4 9000 	str.w	r9, [r4]
 8006938:	6062      	str	r2, [r4, #4]
 800693a:	ddb7      	ble.n	80068ac <_svfprintf_r+0x122c>
 800693c:	e7ae      	b.n	800689c <_svfprintf_r+0x121c>
 800693e:	3508      	adds	r5, #8
 8006940:	e7b4      	b.n	80068ac <_svfprintf_r+0x122c>
 8006942:	460c      	mov	r4, r1
 8006944:	f7ff ba82 	b.w	8005e4c <_svfprintf_r+0x7cc>
 8006948:	e9dd 3210 	ldrd	r3, r2, [sp, #64]	; 0x40
 800694c:	1a9d      	subs	r5, r3, r2
 800694e:	2d00      	cmp	r5, #0
 8006950:	f77f aa80 	ble.w	8005e54 <_svfprintf_r+0x7d4>
 8006954:	4e3b      	ldr	r6, [pc, #236]	; (8006a44 <_svfprintf_r+0x13c4>)
 8006956:	2710      	movs	r7, #16
 8006958:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800695c:	2d10      	cmp	r5, #16
 800695e:	f103 0301 	add.w	r3, r3, #1
 8006962:	6026      	str	r6, [r4, #0]
 8006964:	dc18      	bgt.n	8006998 <_svfprintf_r+0x1318>
 8006966:	6065      	str	r5, [r4, #4]
 8006968:	2b07      	cmp	r3, #7
 800696a:	4415      	add	r5, r2
 800696c:	e9cd 3523 	strd	r3, r5, [sp, #140]	; 0x8c
 8006970:	f77f aa70 	ble.w	8005e54 <_svfprintf_r+0x7d4>
 8006974:	aa22      	add	r2, sp, #136	; 0x88
 8006976:	4641      	mov	r1, r8
 8006978:	4650      	mov	r0, sl
 800697a:	f001 fdcd 	bl	8008518 <__ssprint_r>
 800697e:	2800      	cmp	r0, #0
 8006980:	f43f aa68 	beq.w	8005e54 <_svfprintf_r+0x7d4>
 8006984:	9b03      	ldr	r3, [sp, #12]
 8006986:	2b00      	cmp	r3, #0
 8006988:	f43f a887 	beq.w	8005a9a <_svfprintf_r+0x41a>
 800698c:	4619      	mov	r1, r3
 800698e:	4650      	mov	r0, sl
 8006990:	f000 ffb2 	bl	80078f8 <_free_r>
 8006994:	f7ff b881 	b.w	8005a9a <_svfprintf_r+0x41a>
 8006998:	3210      	adds	r2, #16
 800699a:	2b07      	cmp	r3, #7
 800699c:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 80069a0:	6067      	str	r7, [r4, #4]
 80069a2:	dc02      	bgt.n	80069aa <_svfprintf_r+0x132a>
 80069a4:	3408      	adds	r4, #8
 80069a6:	3d10      	subs	r5, #16
 80069a8:	e7d6      	b.n	8006958 <_svfprintf_r+0x12d8>
 80069aa:	aa22      	add	r2, sp, #136	; 0x88
 80069ac:	4641      	mov	r1, r8
 80069ae:	4650      	mov	r0, sl
 80069b0:	f001 fdb2 	bl	8008518 <__ssprint_r>
 80069b4:	2800      	cmp	r0, #0
 80069b6:	d1e5      	bne.n	8006984 <_svfprintf_r+0x1304>
 80069b8:	ac25      	add	r4, sp, #148	; 0x94
 80069ba:	e7f4      	b.n	80069a6 <_svfprintf_r+0x1326>
 80069bc:	9903      	ldr	r1, [sp, #12]
 80069be:	4650      	mov	r0, sl
 80069c0:	f000 ff9a 	bl	80078f8 <_free_r>
 80069c4:	f7ff ba5e 	b.w	8005e84 <_svfprintf_r+0x804>
 80069c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80069ca:	2b00      	cmp	r3, #0
 80069cc:	f43f a865 	beq.w	8005a9a <_svfprintf_r+0x41a>
 80069d0:	aa22      	add	r2, sp, #136	; 0x88
 80069d2:	4641      	mov	r1, r8
 80069d4:	4650      	mov	r0, sl
 80069d6:	f001 fd9f 	bl	8008518 <__ssprint_r>
 80069da:	f7ff b85e 	b.w	8005a9a <_svfprintf_r+0x41a>
 80069de:	ea56 0205 	orrs.w	r2, r6, r5
 80069e2:	465f      	mov	r7, fp
 80069e4:	f43f ab78 	beq.w	80060d8 <_svfprintf_r+0xa58>
 80069e8:	2b01      	cmp	r3, #1
 80069ea:	f43f ac15 	beq.w	8006218 <_svfprintf_r+0xb98>
 80069ee:	2b02      	cmp	r3, #2
 80069f0:	f50d 799c 	add.w	r9, sp, #312	; 0x138
 80069f4:	f43f ac5b 	beq.w	80062ae <_svfprintf_r+0xc2e>
 80069f8:	f006 0307 	and.w	r3, r6, #7
 80069fc:	08f6      	lsrs	r6, r6, #3
 80069fe:	ea46 7645 	orr.w	r6, r6, r5, lsl #29
 8006a02:	08ed      	lsrs	r5, r5, #3
 8006a04:	3330      	adds	r3, #48	; 0x30
 8006a06:	ea56 0105 	orrs.w	r1, r6, r5
 8006a0a:	464a      	mov	r2, r9
 8006a0c:	f809 3d01 	strb.w	r3, [r9, #-1]!
 8006a10:	d1f2      	bne.n	80069f8 <_svfprintf_r+0x1378>
 8006a12:	07f9      	lsls	r1, r7, #31
 8006a14:	d506      	bpl.n	8006a24 <_svfprintf_r+0x13a4>
 8006a16:	2b30      	cmp	r3, #48	; 0x30
 8006a18:	d004      	beq.n	8006a24 <_svfprintf_r+0x13a4>
 8006a1a:	2330      	movs	r3, #48	; 0x30
 8006a1c:	f809 3c01 	strb.w	r3, [r9, #-1]
 8006a20:	f1a2 0902 	sub.w	r9, r2, #2
 8006a24:	ab4e      	add	r3, sp, #312	; 0x138
 8006a26:	eba3 0309 	sub.w	r3, r3, r9
 8006a2a:	9e04      	ldr	r6, [sp, #16]
 8006a2c:	9304      	str	r3, [sp, #16]
 8006a2e:	2300      	movs	r3, #0
 8006a30:	46bb      	mov	fp, r7
 8006a32:	9303      	str	r3, [sp, #12]
 8006a34:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8006a38:	461d      	mov	r5, r3
 8006a3a:	f7ff b94d 	b.w	8005cd8 <_svfprintf_r+0x658>
 8006a3e:	bf00      	nop
 8006a40:	0800e358 	.word	0x0800e358
 8006a44:	0800e348 	.word	0x0800e348

08006a48 <sysconf>:
 8006a48:	2808      	cmp	r0, #8
 8006a4a:	b508      	push	{r3, lr}
 8006a4c:	d006      	beq.n	8006a5c <sysconf+0x14>
 8006a4e:	f7fe f96b 	bl	8004d28 <__errno>
 8006a52:	2316      	movs	r3, #22
 8006a54:	6003      	str	r3, [r0, #0]
 8006a56:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006a5a:	bd08      	pop	{r3, pc}
 8006a5c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8006a60:	e7fb      	b.n	8006a5a <sysconf+0x12>
	...

08006a64 <register_fini>:
 8006a64:	4b02      	ldr	r3, [pc, #8]	; (8006a70 <register_fini+0xc>)
 8006a66:	b113      	cbz	r3, 8006a6e <register_fini+0xa>
 8006a68:	4802      	ldr	r0, [pc, #8]	; (8006a74 <register_fini+0x10>)
 8006a6a:	f000 b805 	b.w	8006a78 <atexit>
 8006a6e:	4770      	bx	lr
 8006a70:	00000000 	.word	0x00000000
 8006a74:	08007829 	.word	0x08007829

08006a78 <atexit>:
 8006a78:	2300      	movs	r3, #0
 8006a7a:	4601      	mov	r1, r0
 8006a7c:	461a      	mov	r2, r3
 8006a7e:	4618      	mov	r0, r3
 8006a80:	f001 be30 	b.w	80086e4 <__register_exitproc>

08006a84 <quorem>:
 8006a84:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006a88:	6903      	ldr	r3, [r0, #16]
 8006a8a:	690c      	ldr	r4, [r1, #16]
 8006a8c:	42a3      	cmp	r3, r4
 8006a8e:	4607      	mov	r7, r0
 8006a90:	f2c0 8081 	blt.w	8006b96 <quorem+0x112>
 8006a94:	3c01      	subs	r4, #1
 8006a96:	f101 0814 	add.w	r8, r1, #20
 8006a9a:	f100 0514 	add.w	r5, r0, #20
 8006a9e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8006aa2:	9301      	str	r3, [sp, #4]
 8006aa4:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8006aa8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8006aac:	3301      	adds	r3, #1
 8006aae:	429a      	cmp	r2, r3
 8006ab0:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8006ab4:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8006ab8:	fbb2 f6f3 	udiv	r6, r2, r3
 8006abc:	d331      	bcc.n	8006b22 <quorem+0x9e>
 8006abe:	f04f 0e00 	mov.w	lr, #0
 8006ac2:	4640      	mov	r0, r8
 8006ac4:	46ac      	mov	ip, r5
 8006ac6:	46f2      	mov	sl, lr
 8006ac8:	f850 2b04 	ldr.w	r2, [r0], #4
 8006acc:	b293      	uxth	r3, r2
 8006ace:	fb06 e303 	mla	r3, r6, r3, lr
 8006ad2:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8006ad6:	b29b      	uxth	r3, r3
 8006ad8:	ebaa 0303 	sub.w	r3, sl, r3
 8006adc:	f8dc a000 	ldr.w	sl, [ip]
 8006ae0:	0c12      	lsrs	r2, r2, #16
 8006ae2:	fa13 f38a 	uxtah	r3, r3, sl
 8006ae6:	fb06 e202 	mla	r2, r6, r2, lr
 8006aea:	9300      	str	r3, [sp, #0]
 8006aec:	9b00      	ldr	r3, [sp, #0]
 8006aee:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8006af2:	b292      	uxth	r2, r2
 8006af4:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8006af8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8006afc:	f8bd 3000 	ldrh.w	r3, [sp]
 8006b00:	4581      	cmp	r9, r0
 8006b02:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006b06:	f84c 3b04 	str.w	r3, [ip], #4
 8006b0a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8006b0e:	d2db      	bcs.n	8006ac8 <quorem+0x44>
 8006b10:	f855 300b 	ldr.w	r3, [r5, fp]
 8006b14:	b92b      	cbnz	r3, 8006b22 <quorem+0x9e>
 8006b16:	9b01      	ldr	r3, [sp, #4]
 8006b18:	3b04      	subs	r3, #4
 8006b1a:	429d      	cmp	r5, r3
 8006b1c:	461a      	mov	r2, r3
 8006b1e:	d32e      	bcc.n	8006b7e <quorem+0xfa>
 8006b20:	613c      	str	r4, [r7, #16]
 8006b22:	4638      	mov	r0, r7
 8006b24:	f001 fb68 	bl	80081f8 <__mcmp>
 8006b28:	2800      	cmp	r0, #0
 8006b2a:	db24      	blt.n	8006b76 <quorem+0xf2>
 8006b2c:	3601      	adds	r6, #1
 8006b2e:	4628      	mov	r0, r5
 8006b30:	f04f 0c00 	mov.w	ip, #0
 8006b34:	f858 2b04 	ldr.w	r2, [r8], #4
 8006b38:	f8d0 e000 	ldr.w	lr, [r0]
 8006b3c:	b293      	uxth	r3, r2
 8006b3e:	ebac 0303 	sub.w	r3, ip, r3
 8006b42:	0c12      	lsrs	r2, r2, #16
 8006b44:	fa13 f38e 	uxtah	r3, r3, lr
 8006b48:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8006b4c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8006b50:	b29b      	uxth	r3, r3
 8006b52:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006b56:	45c1      	cmp	r9, r8
 8006b58:	f840 3b04 	str.w	r3, [r0], #4
 8006b5c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8006b60:	d2e8      	bcs.n	8006b34 <quorem+0xb0>
 8006b62:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8006b66:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8006b6a:	b922      	cbnz	r2, 8006b76 <quorem+0xf2>
 8006b6c:	3b04      	subs	r3, #4
 8006b6e:	429d      	cmp	r5, r3
 8006b70:	461a      	mov	r2, r3
 8006b72:	d30a      	bcc.n	8006b8a <quorem+0x106>
 8006b74:	613c      	str	r4, [r7, #16]
 8006b76:	4630      	mov	r0, r6
 8006b78:	b003      	add	sp, #12
 8006b7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b7e:	6812      	ldr	r2, [r2, #0]
 8006b80:	3b04      	subs	r3, #4
 8006b82:	2a00      	cmp	r2, #0
 8006b84:	d1cc      	bne.n	8006b20 <quorem+0x9c>
 8006b86:	3c01      	subs	r4, #1
 8006b88:	e7c7      	b.n	8006b1a <quorem+0x96>
 8006b8a:	6812      	ldr	r2, [r2, #0]
 8006b8c:	3b04      	subs	r3, #4
 8006b8e:	2a00      	cmp	r2, #0
 8006b90:	d1f0      	bne.n	8006b74 <quorem+0xf0>
 8006b92:	3c01      	subs	r4, #1
 8006b94:	e7eb      	b.n	8006b6e <quorem+0xea>
 8006b96:	2000      	movs	r0, #0
 8006b98:	e7ee      	b.n	8006b78 <quorem+0xf4>
 8006b9a:	0000      	movs	r0, r0
 8006b9c:	0000      	movs	r0, r0
	...

08006ba0 <_dtoa_r>:
 8006ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ba4:	ed2d 8b04 	vpush	{d8-d9}
 8006ba8:	b093      	sub	sp, #76	; 0x4c
 8006baa:	ec57 6b10 	vmov	r6, r7, d0
 8006bae:	9106      	str	r1, [sp, #24]
 8006bb0:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8006bb2:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8006bb4:	9209      	str	r2, [sp, #36]	; 0x24
 8006bb6:	ee10 aa10 	vmov	sl, s0
 8006bba:	4604      	mov	r4, r0
 8006bbc:	930c      	str	r3, [sp, #48]	; 0x30
 8006bbe:	46bb      	mov	fp, r7
 8006bc0:	b141      	cbz	r1, 8006bd4 <_dtoa_r+0x34>
 8006bc2:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8006bc4:	604a      	str	r2, [r1, #4]
 8006bc6:	2301      	movs	r3, #1
 8006bc8:	4093      	lsls	r3, r2
 8006bca:	608b      	str	r3, [r1, #8]
 8006bcc:	f001 f905 	bl	8007dda <_Bfree>
 8006bd0:	2300      	movs	r3, #0
 8006bd2:	6423      	str	r3, [r4, #64]	; 0x40
 8006bd4:	1e3b      	subs	r3, r7, #0
 8006bd6:	bfaa      	itet	ge
 8006bd8:	2300      	movge	r3, #0
 8006bda:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8006bde:	602b      	strge	r3, [r5, #0]
 8006be0:	4ba3      	ldr	r3, [pc, #652]	; (8006e70 <_dtoa_r+0x2d0>)
 8006be2:	bfbc      	itt	lt
 8006be4:	2201      	movlt	r2, #1
 8006be6:	602a      	strlt	r2, [r5, #0]
 8006be8:	ea33 030b 	bics.w	r3, r3, fp
 8006bec:	d11b      	bne.n	8006c26 <_dtoa_r+0x86>
 8006bee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006bf0:	f242 730f 	movw	r3, #9999	; 0x270f
 8006bf4:	6013      	str	r3, [r2, #0]
 8006bf6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8006bfa:	4333      	orrs	r3, r6
 8006bfc:	f000 8590 	beq.w	8007720 <_dtoa_r+0xb80>
 8006c00:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8006c02:	b90b      	cbnz	r3, 8006c08 <_dtoa_r+0x68>
 8006c04:	4b9b      	ldr	r3, [pc, #620]	; (8006e74 <_dtoa_r+0x2d4>)
 8006c06:	e022      	b.n	8006c4e <_dtoa_r+0xae>
 8006c08:	4b9a      	ldr	r3, [pc, #616]	; (8006e74 <_dtoa_r+0x2d4>)
 8006c0a:	9301      	str	r3, [sp, #4]
 8006c0c:	3303      	adds	r3, #3
 8006c0e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8006c10:	6013      	str	r3, [r2, #0]
 8006c12:	9801      	ldr	r0, [sp, #4]
 8006c14:	b013      	add	sp, #76	; 0x4c
 8006c16:	ecbd 8b04 	vpop	{d8-d9}
 8006c1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006c1e:	4b96      	ldr	r3, [pc, #600]	; (8006e78 <_dtoa_r+0x2d8>)
 8006c20:	9301      	str	r3, [sp, #4]
 8006c22:	3308      	adds	r3, #8
 8006c24:	e7f3      	b.n	8006c0e <_dtoa_r+0x6e>
 8006c26:	2200      	movs	r2, #0
 8006c28:	2300      	movs	r3, #0
 8006c2a:	4650      	mov	r0, sl
 8006c2c:	4659      	mov	r1, fp
 8006c2e:	f7f9 ff4b 	bl	8000ac8 <__aeabi_dcmpeq>
 8006c32:	ec4b ab19 	vmov	d9, sl, fp
 8006c36:	4680      	mov	r8, r0
 8006c38:	b158      	cbz	r0, 8006c52 <_dtoa_r+0xb2>
 8006c3a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006c3c:	2301      	movs	r3, #1
 8006c3e:	6013      	str	r3, [r2, #0]
 8006c40:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8006c42:	2b00      	cmp	r3, #0
 8006c44:	f000 8569 	beq.w	800771a <_dtoa_r+0xb7a>
 8006c48:	488c      	ldr	r0, [pc, #560]	; (8006e7c <_dtoa_r+0x2dc>)
 8006c4a:	6018      	str	r0, [r3, #0]
 8006c4c:	1e43      	subs	r3, r0, #1
 8006c4e:	9301      	str	r3, [sp, #4]
 8006c50:	e7df      	b.n	8006c12 <_dtoa_r+0x72>
 8006c52:	ec4b ab10 	vmov	d0, sl, fp
 8006c56:	aa10      	add	r2, sp, #64	; 0x40
 8006c58:	a911      	add	r1, sp, #68	; 0x44
 8006c5a:	4620      	mov	r0, r4
 8006c5c:	f001 fb72 	bl	8008344 <__d2b>
 8006c60:	f3cb 550a 	ubfx	r5, fp, #20, #11
 8006c64:	ee08 0a10 	vmov	s16, r0
 8006c68:	2d00      	cmp	r5, #0
 8006c6a:	f000 8082 	beq.w	8006d72 <_dtoa_r+0x1d2>
 8006c6e:	ee19 3a90 	vmov	r3, s19
 8006c72:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006c76:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8006c7a:	4656      	mov	r6, sl
 8006c7c:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 8006c80:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8006c84:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8006c88:	4b7d      	ldr	r3, [pc, #500]	; (8006e80 <_dtoa_r+0x2e0>)
 8006c8a:	2200      	movs	r2, #0
 8006c8c:	4630      	mov	r0, r6
 8006c8e:	4639      	mov	r1, r7
 8006c90:	f7f9 fafa 	bl	8000288 <__aeabi_dsub>
 8006c94:	a370      	add	r3, pc, #448	; (adr r3, 8006e58 <_dtoa_r+0x2b8>)
 8006c96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006c9a:	f7f9 fcad 	bl	80005f8 <__aeabi_dmul>
 8006c9e:	a370      	add	r3, pc, #448	; (adr r3, 8006e60 <_dtoa_r+0x2c0>)
 8006ca0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ca4:	f7f9 faf2 	bl	800028c <__adddf3>
 8006ca8:	4606      	mov	r6, r0
 8006caa:	4628      	mov	r0, r5
 8006cac:	460f      	mov	r7, r1
 8006cae:	f7f9 fc39 	bl	8000524 <__aeabi_i2d>
 8006cb2:	a36d      	add	r3, pc, #436	; (adr r3, 8006e68 <_dtoa_r+0x2c8>)
 8006cb4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006cb8:	f7f9 fc9e 	bl	80005f8 <__aeabi_dmul>
 8006cbc:	4602      	mov	r2, r0
 8006cbe:	460b      	mov	r3, r1
 8006cc0:	4630      	mov	r0, r6
 8006cc2:	4639      	mov	r1, r7
 8006cc4:	f7f9 fae2 	bl	800028c <__adddf3>
 8006cc8:	4606      	mov	r6, r0
 8006cca:	460f      	mov	r7, r1
 8006ccc:	f7f9 ff44 	bl	8000b58 <__aeabi_d2iz>
 8006cd0:	2200      	movs	r2, #0
 8006cd2:	9000      	str	r0, [sp, #0]
 8006cd4:	2300      	movs	r3, #0
 8006cd6:	4630      	mov	r0, r6
 8006cd8:	4639      	mov	r1, r7
 8006cda:	f7f9 feff 	bl	8000adc <__aeabi_dcmplt>
 8006cde:	b150      	cbz	r0, 8006cf6 <_dtoa_r+0x156>
 8006ce0:	9800      	ldr	r0, [sp, #0]
 8006ce2:	f7f9 fc1f 	bl	8000524 <__aeabi_i2d>
 8006ce6:	4632      	mov	r2, r6
 8006ce8:	463b      	mov	r3, r7
 8006cea:	f7f9 feed 	bl	8000ac8 <__aeabi_dcmpeq>
 8006cee:	b910      	cbnz	r0, 8006cf6 <_dtoa_r+0x156>
 8006cf0:	9b00      	ldr	r3, [sp, #0]
 8006cf2:	3b01      	subs	r3, #1
 8006cf4:	9300      	str	r3, [sp, #0]
 8006cf6:	9b00      	ldr	r3, [sp, #0]
 8006cf8:	2b16      	cmp	r3, #22
 8006cfa:	d858      	bhi.n	8006dae <_dtoa_r+0x20e>
 8006cfc:	9a00      	ldr	r2, [sp, #0]
 8006cfe:	4b61      	ldr	r3, [pc, #388]	; (8006e84 <_dtoa_r+0x2e4>)
 8006d00:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006d04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d08:	ec51 0b19 	vmov	r0, r1, d9
 8006d0c:	f7f9 fee6 	bl	8000adc <__aeabi_dcmplt>
 8006d10:	2800      	cmp	r0, #0
 8006d12:	d04e      	beq.n	8006db2 <_dtoa_r+0x212>
 8006d14:	9b00      	ldr	r3, [sp, #0]
 8006d16:	3b01      	subs	r3, #1
 8006d18:	9300      	str	r3, [sp, #0]
 8006d1a:	2300      	movs	r3, #0
 8006d1c:	930b      	str	r3, [sp, #44]	; 0x2c
 8006d1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006d20:	1b5d      	subs	r5, r3, r5
 8006d22:	1e6b      	subs	r3, r5, #1
 8006d24:	9305      	str	r3, [sp, #20]
 8006d26:	bf45      	ittet	mi
 8006d28:	f1c5 0301 	rsbmi	r3, r5, #1
 8006d2c:	9304      	strmi	r3, [sp, #16]
 8006d2e:	2300      	movpl	r3, #0
 8006d30:	2300      	movmi	r3, #0
 8006d32:	bf4c      	ite	mi
 8006d34:	9305      	strmi	r3, [sp, #20]
 8006d36:	9304      	strpl	r3, [sp, #16]
 8006d38:	9b00      	ldr	r3, [sp, #0]
 8006d3a:	2b00      	cmp	r3, #0
 8006d3c:	db3b      	blt.n	8006db6 <_dtoa_r+0x216>
 8006d3e:	9b05      	ldr	r3, [sp, #20]
 8006d40:	9a00      	ldr	r2, [sp, #0]
 8006d42:	920a      	str	r2, [sp, #40]	; 0x28
 8006d44:	4413      	add	r3, r2
 8006d46:	9305      	str	r3, [sp, #20]
 8006d48:	2300      	movs	r3, #0
 8006d4a:	9307      	str	r3, [sp, #28]
 8006d4c:	9b06      	ldr	r3, [sp, #24]
 8006d4e:	2b09      	cmp	r3, #9
 8006d50:	d869      	bhi.n	8006e26 <_dtoa_r+0x286>
 8006d52:	2b05      	cmp	r3, #5
 8006d54:	bfc4      	itt	gt
 8006d56:	3b04      	subgt	r3, #4
 8006d58:	9306      	strgt	r3, [sp, #24]
 8006d5a:	9b06      	ldr	r3, [sp, #24]
 8006d5c:	f1a3 0302 	sub.w	r3, r3, #2
 8006d60:	bfcc      	ite	gt
 8006d62:	2500      	movgt	r5, #0
 8006d64:	2501      	movle	r5, #1
 8006d66:	2b03      	cmp	r3, #3
 8006d68:	d868      	bhi.n	8006e3c <_dtoa_r+0x29c>
 8006d6a:	e8df f003 	tbb	[pc, r3]
 8006d6e:	3a2d      	.short	0x3a2d
 8006d70:	5a38      	.short	0x5a38
 8006d72:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8006d76:	441d      	add	r5, r3
 8006d78:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8006d7c:	2b20      	cmp	r3, #32
 8006d7e:	bfc1      	itttt	gt
 8006d80:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8006d84:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 8006d88:	fa0b f303 	lslgt.w	r3, fp, r3
 8006d8c:	fa26 f000 	lsrgt.w	r0, r6, r0
 8006d90:	bfda      	itte	le
 8006d92:	f1c3 0320 	rsble	r3, r3, #32
 8006d96:	fa06 f003 	lslle.w	r0, r6, r3
 8006d9a:	4318      	orrgt	r0, r3
 8006d9c:	f7f9 fbb2 	bl	8000504 <__aeabi_ui2d>
 8006da0:	2301      	movs	r3, #1
 8006da2:	4606      	mov	r6, r0
 8006da4:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8006da8:	3d01      	subs	r5, #1
 8006daa:	930e      	str	r3, [sp, #56]	; 0x38
 8006dac:	e76c      	b.n	8006c88 <_dtoa_r+0xe8>
 8006dae:	2301      	movs	r3, #1
 8006db0:	e7b4      	b.n	8006d1c <_dtoa_r+0x17c>
 8006db2:	900b      	str	r0, [sp, #44]	; 0x2c
 8006db4:	e7b3      	b.n	8006d1e <_dtoa_r+0x17e>
 8006db6:	9b04      	ldr	r3, [sp, #16]
 8006db8:	9a00      	ldr	r2, [sp, #0]
 8006dba:	1a9b      	subs	r3, r3, r2
 8006dbc:	9304      	str	r3, [sp, #16]
 8006dbe:	4253      	negs	r3, r2
 8006dc0:	9307      	str	r3, [sp, #28]
 8006dc2:	2300      	movs	r3, #0
 8006dc4:	930a      	str	r3, [sp, #40]	; 0x28
 8006dc6:	e7c1      	b.n	8006d4c <_dtoa_r+0x1ac>
 8006dc8:	2300      	movs	r3, #0
 8006dca:	9308      	str	r3, [sp, #32]
 8006dcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006dce:	2b00      	cmp	r3, #0
 8006dd0:	dc37      	bgt.n	8006e42 <_dtoa_r+0x2a2>
 8006dd2:	2301      	movs	r3, #1
 8006dd4:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8006dd8:	461a      	mov	r2, r3
 8006dda:	9209      	str	r2, [sp, #36]	; 0x24
 8006ddc:	e00c      	b.n	8006df8 <_dtoa_r+0x258>
 8006dde:	2301      	movs	r3, #1
 8006de0:	e7f3      	b.n	8006dca <_dtoa_r+0x22a>
 8006de2:	2300      	movs	r3, #0
 8006de4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006de6:	9308      	str	r3, [sp, #32]
 8006de8:	9b00      	ldr	r3, [sp, #0]
 8006dea:	4413      	add	r3, r2
 8006dec:	9302      	str	r3, [sp, #8]
 8006dee:	3301      	adds	r3, #1
 8006df0:	2b01      	cmp	r3, #1
 8006df2:	9303      	str	r3, [sp, #12]
 8006df4:	bfb8      	it	lt
 8006df6:	2301      	movlt	r3, #1
 8006df8:	2200      	movs	r2, #0
 8006dfa:	6462      	str	r2, [r4, #68]	; 0x44
 8006dfc:	2204      	movs	r2, #4
 8006dfe:	f102 0014 	add.w	r0, r2, #20
 8006e02:	4298      	cmp	r0, r3
 8006e04:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8006e06:	d920      	bls.n	8006e4a <_dtoa_r+0x2aa>
 8006e08:	4620      	mov	r0, r4
 8006e0a:	f000 ffc1 	bl	8007d90 <_Balloc>
 8006e0e:	9001      	str	r0, [sp, #4]
 8006e10:	2800      	cmp	r0, #0
 8006e12:	d13d      	bne.n	8006e90 <_dtoa_r+0x2f0>
 8006e14:	4b1c      	ldr	r3, [pc, #112]	; (8006e88 <_dtoa_r+0x2e8>)
 8006e16:	4602      	mov	r2, r0
 8006e18:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8006e1c:	481b      	ldr	r0, [pc, #108]	; (8006e8c <_dtoa_r+0x2ec>)
 8006e1e:	f001 fca3 	bl	8008768 <__assert_func>
 8006e22:	2301      	movs	r3, #1
 8006e24:	e7de      	b.n	8006de4 <_dtoa_r+0x244>
 8006e26:	2501      	movs	r5, #1
 8006e28:	2300      	movs	r3, #0
 8006e2a:	9306      	str	r3, [sp, #24]
 8006e2c:	9508      	str	r5, [sp, #32]
 8006e2e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8006e32:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8006e36:	2200      	movs	r2, #0
 8006e38:	2312      	movs	r3, #18
 8006e3a:	e7ce      	b.n	8006dda <_dtoa_r+0x23a>
 8006e3c:	2301      	movs	r3, #1
 8006e3e:	9308      	str	r3, [sp, #32]
 8006e40:	e7f5      	b.n	8006e2e <_dtoa_r+0x28e>
 8006e42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006e44:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8006e48:	e7d6      	b.n	8006df8 <_dtoa_r+0x258>
 8006e4a:	3101      	adds	r1, #1
 8006e4c:	6461      	str	r1, [r4, #68]	; 0x44
 8006e4e:	0052      	lsls	r2, r2, #1
 8006e50:	e7d5      	b.n	8006dfe <_dtoa_r+0x25e>
 8006e52:	bf00      	nop
 8006e54:	f3af 8000 	nop.w
 8006e58:	636f4361 	.word	0x636f4361
 8006e5c:	3fd287a7 	.word	0x3fd287a7
 8006e60:	8b60c8b3 	.word	0x8b60c8b3
 8006e64:	3fc68a28 	.word	0x3fc68a28
 8006e68:	509f79fb 	.word	0x509f79fb
 8006e6c:	3fd34413 	.word	0x3fd34413
 8006e70:	7ff00000 	.word	0x7ff00000
 8006e74:	0800e368 	.word	0x0800e368
 8006e78:	0800e36c 	.word	0x0800e36c
 8006e7c:	0800e347 	.word	0x0800e347
 8006e80:	3ff80000 	.word	0x3ff80000
 8006e84:	0800e468 	.word	0x0800e468
 8006e88:	0800e375 	.word	0x0800e375
 8006e8c:	0800e386 	.word	0x0800e386
 8006e90:	9b01      	ldr	r3, [sp, #4]
 8006e92:	6423      	str	r3, [r4, #64]	; 0x40
 8006e94:	9b03      	ldr	r3, [sp, #12]
 8006e96:	2b0e      	cmp	r3, #14
 8006e98:	f200 809d 	bhi.w	8006fd6 <_dtoa_r+0x436>
 8006e9c:	2d00      	cmp	r5, #0
 8006e9e:	f000 809a 	beq.w	8006fd6 <_dtoa_r+0x436>
 8006ea2:	9b00      	ldr	r3, [sp, #0]
 8006ea4:	2b00      	cmp	r3, #0
 8006ea6:	dd32      	ble.n	8006f0e <_dtoa_r+0x36e>
 8006ea8:	4ab7      	ldr	r2, [pc, #732]	; (8007188 <_dtoa_r+0x5e8>)
 8006eaa:	f003 030f 	and.w	r3, r3, #15
 8006eae:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8006eb2:	e9d3 8900 	ldrd	r8, r9, [r3]
 8006eb6:	9b00      	ldr	r3, [sp, #0]
 8006eb8:	05d8      	lsls	r0, r3, #23
 8006eba:	ea4f 1723 	mov.w	r7, r3, asr #4
 8006ebe:	d516      	bpl.n	8006eee <_dtoa_r+0x34e>
 8006ec0:	4bb2      	ldr	r3, [pc, #712]	; (800718c <_dtoa_r+0x5ec>)
 8006ec2:	ec51 0b19 	vmov	r0, r1, d9
 8006ec6:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8006eca:	f7f9 fcbf 	bl	800084c <__aeabi_ddiv>
 8006ece:	f007 070f 	and.w	r7, r7, #15
 8006ed2:	4682      	mov	sl, r0
 8006ed4:	468b      	mov	fp, r1
 8006ed6:	2503      	movs	r5, #3
 8006ed8:	4eac      	ldr	r6, [pc, #688]	; (800718c <_dtoa_r+0x5ec>)
 8006eda:	b957      	cbnz	r7, 8006ef2 <_dtoa_r+0x352>
 8006edc:	4642      	mov	r2, r8
 8006ede:	464b      	mov	r3, r9
 8006ee0:	4650      	mov	r0, sl
 8006ee2:	4659      	mov	r1, fp
 8006ee4:	f7f9 fcb2 	bl	800084c <__aeabi_ddiv>
 8006ee8:	4682      	mov	sl, r0
 8006eea:	468b      	mov	fp, r1
 8006eec:	e028      	b.n	8006f40 <_dtoa_r+0x3a0>
 8006eee:	2502      	movs	r5, #2
 8006ef0:	e7f2      	b.n	8006ed8 <_dtoa_r+0x338>
 8006ef2:	07f9      	lsls	r1, r7, #31
 8006ef4:	d508      	bpl.n	8006f08 <_dtoa_r+0x368>
 8006ef6:	4640      	mov	r0, r8
 8006ef8:	4649      	mov	r1, r9
 8006efa:	e9d6 2300 	ldrd	r2, r3, [r6]
 8006efe:	f7f9 fb7b 	bl	80005f8 <__aeabi_dmul>
 8006f02:	3501      	adds	r5, #1
 8006f04:	4680      	mov	r8, r0
 8006f06:	4689      	mov	r9, r1
 8006f08:	107f      	asrs	r7, r7, #1
 8006f0a:	3608      	adds	r6, #8
 8006f0c:	e7e5      	b.n	8006eda <_dtoa_r+0x33a>
 8006f0e:	f000 809b 	beq.w	8007048 <_dtoa_r+0x4a8>
 8006f12:	9b00      	ldr	r3, [sp, #0]
 8006f14:	4f9d      	ldr	r7, [pc, #628]	; (800718c <_dtoa_r+0x5ec>)
 8006f16:	425e      	negs	r6, r3
 8006f18:	4b9b      	ldr	r3, [pc, #620]	; (8007188 <_dtoa_r+0x5e8>)
 8006f1a:	f006 020f 	and.w	r2, r6, #15
 8006f1e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006f22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f26:	ec51 0b19 	vmov	r0, r1, d9
 8006f2a:	f7f9 fb65 	bl	80005f8 <__aeabi_dmul>
 8006f2e:	1136      	asrs	r6, r6, #4
 8006f30:	4682      	mov	sl, r0
 8006f32:	468b      	mov	fp, r1
 8006f34:	2300      	movs	r3, #0
 8006f36:	2502      	movs	r5, #2
 8006f38:	2e00      	cmp	r6, #0
 8006f3a:	d17a      	bne.n	8007032 <_dtoa_r+0x492>
 8006f3c:	2b00      	cmp	r3, #0
 8006f3e:	d1d3      	bne.n	8006ee8 <_dtoa_r+0x348>
 8006f40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006f42:	2b00      	cmp	r3, #0
 8006f44:	f000 8082 	beq.w	800704c <_dtoa_r+0x4ac>
 8006f48:	4b91      	ldr	r3, [pc, #580]	; (8007190 <_dtoa_r+0x5f0>)
 8006f4a:	2200      	movs	r2, #0
 8006f4c:	4650      	mov	r0, sl
 8006f4e:	4659      	mov	r1, fp
 8006f50:	f7f9 fdc4 	bl	8000adc <__aeabi_dcmplt>
 8006f54:	2800      	cmp	r0, #0
 8006f56:	d079      	beq.n	800704c <_dtoa_r+0x4ac>
 8006f58:	9b03      	ldr	r3, [sp, #12]
 8006f5a:	2b00      	cmp	r3, #0
 8006f5c:	d076      	beq.n	800704c <_dtoa_r+0x4ac>
 8006f5e:	9b02      	ldr	r3, [sp, #8]
 8006f60:	2b00      	cmp	r3, #0
 8006f62:	dd36      	ble.n	8006fd2 <_dtoa_r+0x432>
 8006f64:	9b00      	ldr	r3, [sp, #0]
 8006f66:	4650      	mov	r0, sl
 8006f68:	4659      	mov	r1, fp
 8006f6a:	1e5f      	subs	r7, r3, #1
 8006f6c:	2200      	movs	r2, #0
 8006f6e:	4b89      	ldr	r3, [pc, #548]	; (8007194 <_dtoa_r+0x5f4>)
 8006f70:	f7f9 fb42 	bl	80005f8 <__aeabi_dmul>
 8006f74:	9e02      	ldr	r6, [sp, #8]
 8006f76:	4682      	mov	sl, r0
 8006f78:	468b      	mov	fp, r1
 8006f7a:	3501      	adds	r5, #1
 8006f7c:	4628      	mov	r0, r5
 8006f7e:	f7f9 fad1 	bl	8000524 <__aeabi_i2d>
 8006f82:	4652      	mov	r2, sl
 8006f84:	465b      	mov	r3, fp
 8006f86:	f7f9 fb37 	bl	80005f8 <__aeabi_dmul>
 8006f8a:	4b83      	ldr	r3, [pc, #524]	; (8007198 <_dtoa_r+0x5f8>)
 8006f8c:	2200      	movs	r2, #0
 8006f8e:	f7f9 f97d 	bl	800028c <__adddf3>
 8006f92:	46d0      	mov	r8, sl
 8006f94:	46d9      	mov	r9, fp
 8006f96:	4682      	mov	sl, r0
 8006f98:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 8006f9c:	2e00      	cmp	r6, #0
 8006f9e:	d158      	bne.n	8007052 <_dtoa_r+0x4b2>
 8006fa0:	4b7e      	ldr	r3, [pc, #504]	; (800719c <_dtoa_r+0x5fc>)
 8006fa2:	2200      	movs	r2, #0
 8006fa4:	4640      	mov	r0, r8
 8006fa6:	4649      	mov	r1, r9
 8006fa8:	f7f9 f96e 	bl	8000288 <__aeabi_dsub>
 8006fac:	4652      	mov	r2, sl
 8006fae:	465b      	mov	r3, fp
 8006fb0:	4680      	mov	r8, r0
 8006fb2:	4689      	mov	r9, r1
 8006fb4:	f7f9 fdb0 	bl	8000b18 <__aeabi_dcmpgt>
 8006fb8:	2800      	cmp	r0, #0
 8006fba:	f040 8296 	bne.w	80074ea <_dtoa_r+0x94a>
 8006fbe:	4652      	mov	r2, sl
 8006fc0:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8006fc4:	4640      	mov	r0, r8
 8006fc6:	4649      	mov	r1, r9
 8006fc8:	f7f9 fd88 	bl	8000adc <__aeabi_dcmplt>
 8006fcc:	2800      	cmp	r0, #0
 8006fce:	f040 828a 	bne.w	80074e6 <_dtoa_r+0x946>
 8006fd2:	ec5b ab19 	vmov	sl, fp, d9
 8006fd6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006fd8:	2b00      	cmp	r3, #0
 8006fda:	f2c0 8149 	blt.w	8007270 <_dtoa_r+0x6d0>
 8006fde:	9a00      	ldr	r2, [sp, #0]
 8006fe0:	2a0e      	cmp	r2, #14
 8006fe2:	f300 8145 	bgt.w	8007270 <_dtoa_r+0x6d0>
 8006fe6:	4b68      	ldr	r3, [pc, #416]	; (8007188 <_dtoa_r+0x5e8>)
 8006fe8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006fec:	e9d3 8900 	ldrd	r8, r9, [r3]
 8006ff0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006ff2:	2b00      	cmp	r3, #0
 8006ff4:	f280 80d6 	bge.w	80071a4 <_dtoa_r+0x604>
 8006ff8:	9b03      	ldr	r3, [sp, #12]
 8006ffa:	2b00      	cmp	r3, #0
 8006ffc:	f300 80d2 	bgt.w	80071a4 <_dtoa_r+0x604>
 8007000:	f040 8270 	bne.w	80074e4 <_dtoa_r+0x944>
 8007004:	4b65      	ldr	r3, [pc, #404]	; (800719c <_dtoa_r+0x5fc>)
 8007006:	2200      	movs	r2, #0
 8007008:	4640      	mov	r0, r8
 800700a:	4649      	mov	r1, r9
 800700c:	f7f9 faf4 	bl	80005f8 <__aeabi_dmul>
 8007010:	4652      	mov	r2, sl
 8007012:	465b      	mov	r3, fp
 8007014:	f7f9 fd76 	bl	8000b04 <__aeabi_dcmpge>
 8007018:	9e03      	ldr	r6, [sp, #12]
 800701a:	4637      	mov	r7, r6
 800701c:	2800      	cmp	r0, #0
 800701e:	f040 8246 	bne.w	80074ae <_dtoa_r+0x90e>
 8007022:	9d01      	ldr	r5, [sp, #4]
 8007024:	2331      	movs	r3, #49	; 0x31
 8007026:	f805 3b01 	strb.w	r3, [r5], #1
 800702a:	9b00      	ldr	r3, [sp, #0]
 800702c:	3301      	adds	r3, #1
 800702e:	9300      	str	r3, [sp, #0]
 8007030:	e241      	b.n	80074b6 <_dtoa_r+0x916>
 8007032:	07f2      	lsls	r2, r6, #31
 8007034:	d505      	bpl.n	8007042 <_dtoa_r+0x4a2>
 8007036:	e9d7 2300 	ldrd	r2, r3, [r7]
 800703a:	f7f9 fadd 	bl	80005f8 <__aeabi_dmul>
 800703e:	3501      	adds	r5, #1
 8007040:	2301      	movs	r3, #1
 8007042:	1076      	asrs	r6, r6, #1
 8007044:	3708      	adds	r7, #8
 8007046:	e777      	b.n	8006f38 <_dtoa_r+0x398>
 8007048:	2502      	movs	r5, #2
 800704a:	e779      	b.n	8006f40 <_dtoa_r+0x3a0>
 800704c:	9f00      	ldr	r7, [sp, #0]
 800704e:	9e03      	ldr	r6, [sp, #12]
 8007050:	e794      	b.n	8006f7c <_dtoa_r+0x3dc>
 8007052:	9901      	ldr	r1, [sp, #4]
 8007054:	4b4c      	ldr	r3, [pc, #304]	; (8007188 <_dtoa_r+0x5e8>)
 8007056:	4431      	add	r1, r6
 8007058:	910d      	str	r1, [sp, #52]	; 0x34
 800705a:	9908      	ldr	r1, [sp, #32]
 800705c:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8007060:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8007064:	2900      	cmp	r1, #0
 8007066:	d043      	beq.n	80070f0 <_dtoa_r+0x550>
 8007068:	494d      	ldr	r1, [pc, #308]	; (80071a0 <_dtoa_r+0x600>)
 800706a:	2000      	movs	r0, #0
 800706c:	f7f9 fbee 	bl	800084c <__aeabi_ddiv>
 8007070:	4652      	mov	r2, sl
 8007072:	465b      	mov	r3, fp
 8007074:	f7f9 f908 	bl	8000288 <__aeabi_dsub>
 8007078:	9d01      	ldr	r5, [sp, #4]
 800707a:	4682      	mov	sl, r0
 800707c:	468b      	mov	fp, r1
 800707e:	4649      	mov	r1, r9
 8007080:	4640      	mov	r0, r8
 8007082:	f7f9 fd69 	bl	8000b58 <__aeabi_d2iz>
 8007086:	4606      	mov	r6, r0
 8007088:	f7f9 fa4c 	bl	8000524 <__aeabi_i2d>
 800708c:	4602      	mov	r2, r0
 800708e:	460b      	mov	r3, r1
 8007090:	4640      	mov	r0, r8
 8007092:	4649      	mov	r1, r9
 8007094:	f7f9 f8f8 	bl	8000288 <__aeabi_dsub>
 8007098:	3630      	adds	r6, #48	; 0x30
 800709a:	f805 6b01 	strb.w	r6, [r5], #1
 800709e:	4652      	mov	r2, sl
 80070a0:	465b      	mov	r3, fp
 80070a2:	4680      	mov	r8, r0
 80070a4:	4689      	mov	r9, r1
 80070a6:	f7f9 fd19 	bl	8000adc <__aeabi_dcmplt>
 80070aa:	2800      	cmp	r0, #0
 80070ac:	d163      	bne.n	8007176 <_dtoa_r+0x5d6>
 80070ae:	4642      	mov	r2, r8
 80070b0:	464b      	mov	r3, r9
 80070b2:	4937      	ldr	r1, [pc, #220]	; (8007190 <_dtoa_r+0x5f0>)
 80070b4:	2000      	movs	r0, #0
 80070b6:	f7f9 f8e7 	bl	8000288 <__aeabi_dsub>
 80070ba:	4652      	mov	r2, sl
 80070bc:	465b      	mov	r3, fp
 80070be:	f7f9 fd0d 	bl	8000adc <__aeabi_dcmplt>
 80070c2:	2800      	cmp	r0, #0
 80070c4:	f040 80b6 	bne.w	8007234 <_dtoa_r+0x694>
 80070c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80070ca:	429d      	cmp	r5, r3
 80070cc:	d081      	beq.n	8006fd2 <_dtoa_r+0x432>
 80070ce:	4b31      	ldr	r3, [pc, #196]	; (8007194 <_dtoa_r+0x5f4>)
 80070d0:	2200      	movs	r2, #0
 80070d2:	4650      	mov	r0, sl
 80070d4:	4659      	mov	r1, fp
 80070d6:	f7f9 fa8f 	bl	80005f8 <__aeabi_dmul>
 80070da:	4b2e      	ldr	r3, [pc, #184]	; (8007194 <_dtoa_r+0x5f4>)
 80070dc:	4682      	mov	sl, r0
 80070de:	468b      	mov	fp, r1
 80070e0:	4640      	mov	r0, r8
 80070e2:	4649      	mov	r1, r9
 80070e4:	2200      	movs	r2, #0
 80070e6:	f7f9 fa87 	bl	80005f8 <__aeabi_dmul>
 80070ea:	4680      	mov	r8, r0
 80070ec:	4689      	mov	r9, r1
 80070ee:	e7c6      	b.n	800707e <_dtoa_r+0x4de>
 80070f0:	4650      	mov	r0, sl
 80070f2:	4659      	mov	r1, fp
 80070f4:	f7f9 fa80 	bl	80005f8 <__aeabi_dmul>
 80070f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80070fa:	9d01      	ldr	r5, [sp, #4]
 80070fc:	930f      	str	r3, [sp, #60]	; 0x3c
 80070fe:	4682      	mov	sl, r0
 8007100:	468b      	mov	fp, r1
 8007102:	4649      	mov	r1, r9
 8007104:	4640      	mov	r0, r8
 8007106:	f7f9 fd27 	bl	8000b58 <__aeabi_d2iz>
 800710a:	4606      	mov	r6, r0
 800710c:	f7f9 fa0a 	bl	8000524 <__aeabi_i2d>
 8007110:	3630      	adds	r6, #48	; 0x30
 8007112:	4602      	mov	r2, r0
 8007114:	460b      	mov	r3, r1
 8007116:	4640      	mov	r0, r8
 8007118:	4649      	mov	r1, r9
 800711a:	f7f9 f8b5 	bl	8000288 <__aeabi_dsub>
 800711e:	f805 6b01 	strb.w	r6, [r5], #1
 8007122:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007124:	429d      	cmp	r5, r3
 8007126:	4680      	mov	r8, r0
 8007128:	4689      	mov	r9, r1
 800712a:	f04f 0200 	mov.w	r2, #0
 800712e:	d124      	bne.n	800717a <_dtoa_r+0x5da>
 8007130:	4b1b      	ldr	r3, [pc, #108]	; (80071a0 <_dtoa_r+0x600>)
 8007132:	4650      	mov	r0, sl
 8007134:	4659      	mov	r1, fp
 8007136:	f7f9 f8a9 	bl	800028c <__adddf3>
 800713a:	4602      	mov	r2, r0
 800713c:	460b      	mov	r3, r1
 800713e:	4640      	mov	r0, r8
 8007140:	4649      	mov	r1, r9
 8007142:	f7f9 fce9 	bl	8000b18 <__aeabi_dcmpgt>
 8007146:	2800      	cmp	r0, #0
 8007148:	d174      	bne.n	8007234 <_dtoa_r+0x694>
 800714a:	4652      	mov	r2, sl
 800714c:	465b      	mov	r3, fp
 800714e:	4914      	ldr	r1, [pc, #80]	; (80071a0 <_dtoa_r+0x600>)
 8007150:	2000      	movs	r0, #0
 8007152:	f7f9 f899 	bl	8000288 <__aeabi_dsub>
 8007156:	4602      	mov	r2, r0
 8007158:	460b      	mov	r3, r1
 800715a:	4640      	mov	r0, r8
 800715c:	4649      	mov	r1, r9
 800715e:	f7f9 fcbd 	bl	8000adc <__aeabi_dcmplt>
 8007162:	2800      	cmp	r0, #0
 8007164:	f43f af35 	beq.w	8006fd2 <_dtoa_r+0x432>
 8007168:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800716a:	1e6b      	subs	r3, r5, #1
 800716c:	930f      	str	r3, [sp, #60]	; 0x3c
 800716e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8007172:	2b30      	cmp	r3, #48	; 0x30
 8007174:	d0f8      	beq.n	8007168 <_dtoa_r+0x5c8>
 8007176:	9700      	str	r7, [sp, #0]
 8007178:	e04a      	b.n	8007210 <_dtoa_r+0x670>
 800717a:	4b06      	ldr	r3, [pc, #24]	; (8007194 <_dtoa_r+0x5f4>)
 800717c:	f7f9 fa3c 	bl	80005f8 <__aeabi_dmul>
 8007180:	4680      	mov	r8, r0
 8007182:	4689      	mov	r9, r1
 8007184:	e7bd      	b.n	8007102 <_dtoa_r+0x562>
 8007186:	bf00      	nop
 8007188:	0800e468 	.word	0x0800e468
 800718c:	0800e440 	.word	0x0800e440
 8007190:	3ff00000 	.word	0x3ff00000
 8007194:	40240000 	.word	0x40240000
 8007198:	401c0000 	.word	0x401c0000
 800719c:	40140000 	.word	0x40140000
 80071a0:	3fe00000 	.word	0x3fe00000
 80071a4:	9d01      	ldr	r5, [sp, #4]
 80071a6:	4656      	mov	r6, sl
 80071a8:	465f      	mov	r7, fp
 80071aa:	4642      	mov	r2, r8
 80071ac:	464b      	mov	r3, r9
 80071ae:	4630      	mov	r0, r6
 80071b0:	4639      	mov	r1, r7
 80071b2:	f7f9 fb4b 	bl	800084c <__aeabi_ddiv>
 80071b6:	f7f9 fccf 	bl	8000b58 <__aeabi_d2iz>
 80071ba:	4682      	mov	sl, r0
 80071bc:	f7f9 f9b2 	bl	8000524 <__aeabi_i2d>
 80071c0:	4642      	mov	r2, r8
 80071c2:	464b      	mov	r3, r9
 80071c4:	f7f9 fa18 	bl	80005f8 <__aeabi_dmul>
 80071c8:	4602      	mov	r2, r0
 80071ca:	460b      	mov	r3, r1
 80071cc:	4630      	mov	r0, r6
 80071ce:	4639      	mov	r1, r7
 80071d0:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 80071d4:	f7f9 f858 	bl	8000288 <__aeabi_dsub>
 80071d8:	f805 6b01 	strb.w	r6, [r5], #1
 80071dc:	9e01      	ldr	r6, [sp, #4]
 80071de:	9f03      	ldr	r7, [sp, #12]
 80071e0:	1bae      	subs	r6, r5, r6
 80071e2:	42b7      	cmp	r7, r6
 80071e4:	4602      	mov	r2, r0
 80071e6:	460b      	mov	r3, r1
 80071e8:	d135      	bne.n	8007256 <_dtoa_r+0x6b6>
 80071ea:	f7f9 f84f 	bl	800028c <__adddf3>
 80071ee:	4642      	mov	r2, r8
 80071f0:	464b      	mov	r3, r9
 80071f2:	4606      	mov	r6, r0
 80071f4:	460f      	mov	r7, r1
 80071f6:	f7f9 fc8f 	bl	8000b18 <__aeabi_dcmpgt>
 80071fa:	b9d0      	cbnz	r0, 8007232 <_dtoa_r+0x692>
 80071fc:	4642      	mov	r2, r8
 80071fe:	464b      	mov	r3, r9
 8007200:	4630      	mov	r0, r6
 8007202:	4639      	mov	r1, r7
 8007204:	f7f9 fc60 	bl	8000ac8 <__aeabi_dcmpeq>
 8007208:	b110      	cbz	r0, 8007210 <_dtoa_r+0x670>
 800720a:	f01a 0f01 	tst.w	sl, #1
 800720e:	d110      	bne.n	8007232 <_dtoa_r+0x692>
 8007210:	4620      	mov	r0, r4
 8007212:	ee18 1a10 	vmov	r1, s16
 8007216:	f000 fde0 	bl	8007dda <_Bfree>
 800721a:	2300      	movs	r3, #0
 800721c:	9800      	ldr	r0, [sp, #0]
 800721e:	702b      	strb	r3, [r5, #0]
 8007220:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007222:	3001      	adds	r0, #1
 8007224:	6018      	str	r0, [r3, #0]
 8007226:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8007228:	2b00      	cmp	r3, #0
 800722a:	f43f acf2 	beq.w	8006c12 <_dtoa_r+0x72>
 800722e:	601d      	str	r5, [r3, #0]
 8007230:	e4ef      	b.n	8006c12 <_dtoa_r+0x72>
 8007232:	9f00      	ldr	r7, [sp, #0]
 8007234:	462b      	mov	r3, r5
 8007236:	461d      	mov	r5, r3
 8007238:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800723c:	2a39      	cmp	r2, #57	; 0x39
 800723e:	d106      	bne.n	800724e <_dtoa_r+0x6ae>
 8007240:	9a01      	ldr	r2, [sp, #4]
 8007242:	429a      	cmp	r2, r3
 8007244:	d1f7      	bne.n	8007236 <_dtoa_r+0x696>
 8007246:	9901      	ldr	r1, [sp, #4]
 8007248:	2230      	movs	r2, #48	; 0x30
 800724a:	3701      	adds	r7, #1
 800724c:	700a      	strb	r2, [r1, #0]
 800724e:	781a      	ldrb	r2, [r3, #0]
 8007250:	3201      	adds	r2, #1
 8007252:	701a      	strb	r2, [r3, #0]
 8007254:	e78f      	b.n	8007176 <_dtoa_r+0x5d6>
 8007256:	4ba6      	ldr	r3, [pc, #664]	; (80074f0 <_dtoa_r+0x950>)
 8007258:	2200      	movs	r2, #0
 800725a:	f7f9 f9cd 	bl	80005f8 <__aeabi_dmul>
 800725e:	2200      	movs	r2, #0
 8007260:	2300      	movs	r3, #0
 8007262:	4606      	mov	r6, r0
 8007264:	460f      	mov	r7, r1
 8007266:	f7f9 fc2f 	bl	8000ac8 <__aeabi_dcmpeq>
 800726a:	2800      	cmp	r0, #0
 800726c:	d09d      	beq.n	80071aa <_dtoa_r+0x60a>
 800726e:	e7cf      	b.n	8007210 <_dtoa_r+0x670>
 8007270:	9a08      	ldr	r2, [sp, #32]
 8007272:	2a00      	cmp	r2, #0
 8007274:	f000 80d7 	beq.w	8007426 <_dtoa_r+0x886>
 8007278:	9a06      	ldr	r2, [sp, #24]
 800727a:	2a01      	cmp	r2, #1
 800727c:	f300 80ba 	bgt.w	80073f4 <_dtoa_r+0x854>
 8007280:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007282:	2a00      	cmp	r2, #0
 8007284:	f000 80b2 	beq.w	80073ec <_dtoa_r+0x84c>
 8007288:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800728c:	9e07      	ldr	r6, [sp, #28]
 800728e:	9d04      	ldr	r5, [sp, #16]
 8007290:	9a04      	ldr	r2, [sp, #16]
 8007292:	441a      	add	r2, r3
 8007294:	9204      	str	r2, [sp, #16]
 8007296:	9a05      	ldr	r2, [sp, #20]
 8007298:	2101      	movs	r1, #1
 800729a:	441a      	add	r2, r3
 800729c:	4620      	mov	r0, r4
 800729e:	9205      	str	r2, [sp, #20]
 80072a0:	f000 fe3a 	bl	8007f18 <__i2b>
 80072a4:	4607      	mov	r7, r0
 80072a6:	2d00      	cmp	r5, #0
 80072a8:	dd0c      	ble.n	80072c4 <_dtoa_r+0x724>
 80072aa:	9b05      	ldr	r3, [sp, #20]
 80072ac:	2b00      	cmp	r3, #0
 80072ae:	dd09      	ble.n	80072c4 <_dtoa_r+0x724>
 80072b0:	42ab      	cmp	r3, r5
 80072b2:	9a04      	ldr	r2, [sp, #16]
 80072b4:	bfa8      	it	ge
 80072b6:	462b      	movge	r3, r5
 80072b8:	1ad2      	subs	r2, r2, r3
 80072ba:	9204      	str	r2, [sp, #16]
 80072bc:	9a05      	ldr	r2, [sp, #20]
 80072be:	1aed      	subs	r5, r5, r3
 80072c0:	1ad3      	subs	r3, r2, r3
 80072c2:	9305      	str	r3, [sp, #20]
 80072c4:	9b07      	ldr	r3, [sp, #28]
 80072c6:	b31b      	cbz	r3, 8007310 <_dtoa_r+0x770>
 80072c8:	9b08      	ldr	r3, [sp, #32]
 80072ca:	2b00      	cmp	r3, #0
 80072cc:	f000 80af 	beq.w	800742e <_dtoa_r+0x88e>
 80072d0:	2e00      	cmp	r6, #0
 80072d2:	dd13      	ble.n	80072fc <_dtoa_r+0x75c>
 80072d4:	4639      	mov	r1, r7
 80072d6:	4632      	mov	r2, r6
 80072d8:	4620      	mov	r0, r4
 80072da:	f000 fedd 	bl	8008098 <__pow5mult>
 80072de:	ee18 2a10 	vmov	r2, s16
 80072e2:	4601      	mov	r1, r0
 80072e4:	4607      	mov	r7, r0
 80072e6:	4620      	mov	r0, r4
 80072e8:	f000 fe2c 	bl	8007f44 <__multiply>
 80072ec:	ee18 1a10 	vmov	r1, s16
 80072f0:	4680      	mov	r8, r0
 80072f2:	4620      	mov	r0, r4
 80072f4:	f000 fd71 	bl	8007dda <_Bfree>
 80072f8:	ee08 8a10 	vmov	s16, r8
 80072fc:	9b07      	ldr	r3, [sp, #28]
 80072fe:	1b9a      	subs	r2, r3, r6
 8007300:	d006      	beq.n	8007310 <_dtoa_r+0x770>
 8007302:	ee18 1a10 	vmov	r1, s16
 8007306:	4620      	mov	r0, r4
 8007308:	f000 fec6 	bl	8008098 <__pow5mult>
 800730c:	ee08 0a10 	vmov	s16, r0
 8007310:	2101      	movs	r1, #1
 8007312:	4620      	mov	r0, r4
 8007314:	f000 fe00 	bl	8007f18 <__i2b>
 8007318:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800731a:	2b00      	cmp	r3, #0
 800731c:	4606      	mov	r6, r0
 800731e:	f340 8088 	ble.w	8007432 <_dtoa_r+0x892>
 8007322:	461a      	mov	r2, r3
 8007324:	4601      	mov	r1, r0
 8007326:	4620      	mov	r0, r4
 8007328:	f000 feb6 	bl	8008098 <__pow5mult>
 800732c:	9b06      	ldr	r3, [sp, #24]
 800732e:	2b01      	cmp	r3, #1
 8007330:	4606      	mov	r6, r0
 8007332:	f340 8081 	ble.w	8007438 <_dtoa_r+0x898>
 8007336:	f04f 0800 	mov.w	r8, #0
 800733a:	6933      	ldr	r3, [r6, #16]
 800733c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8007340:	6918      	ldr	r0, [r3, #16]
 8007342:	f000 fd99 	bl	8007e78 <__hi0bits>
 8007346:	f1c0 0020 	rsb	r0, r0, #32
 800734a:	9b05      	ldr	r3, [sp, #20]
 800734c:	4418      	add	r0, r3
 800734e:	f010 001f 	ands.w	r0, r0, #31
 8007352:	f000 8092 	beq.w	800747a <_dtoa_r+0x8da>
 8007356:	f1c0 0320 	rsb	r3, r0, #32
 800735a:	2b04      	cmp	r3, #4
 800735c:	f340 808a 	ble.w	8007474 <_dtoa_r+0x8d4>
 8007360:	f1c0 001c 	rsb	r0, r0, #28
 8007364:	9b04      	ldr	r3, [sp, #16]
 8007366:	4403      	add	r3, r0
 8007368:	9304      	str	r3, [sp, #16]
 800736a:	9b05      	ldr	r3, [sp, #20]
 800736c:	4403      	add	r3, r0
 800736e:	4405      	add	r5, r0
 8007370:	9305      	str	r3, [sp, #20]
 8007372:	9b04      	ldr	r3, [sp, #16]
 8007374:	2b00      	cmp	r3, #0
 8007376:	dd07      	ble.n	8007388 <_dtoa_r+0x7e8>
 8007378:	ee18 1a10 	vmov	r1, s16
 800737c:	461a      	mov	r2, r3
 800737e:	4620      	mov	r0, r4
 8007380:	f000 feca 	bl	8008118 <__lshift>
 8007384:	ee08 0a10 	vmov	s16, r0
 8007388:	9b05      	ldr	r3, [sp, #20]
 800738a:	2b00      	cmp	r3, #0
 800738c:	dd05      	ble.n	800739a <_dtoa_r+0x7fa>
 800738e:	4631      	mov	r1, r6
 8007390:	461a      	mov	r2, r3
 8007392:	4620      	mov	r0, r4
 8007394:	f000 fec0 	bl	8008118 <__lshift>
 8007398:	4606      	mov	r6, r0
 800739a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800739c:	2b00      	cmp	r3, #0
 800739e:	d06e      	beq.n	800747e <_dtoa_r+0x8de>
 80073a0:	ee18 0a10 	vmov	r0, s16
 80073a4:	4631      	mov	r1, r6
 80073a6:	f000 ff27 	bl	80081f8 <__mcmp>
 80073aa:	2800      	cmp	r0, #0
 80073ac:	da67      	bge.n	800747e <_dtoa_r+0x8de>
 80073ae:	9b00      	ldr	r3, [sp, #0]
 80073b0:	3b01      	subs	r3, #1
 80073b2:	ee18 1a10 	vmov	r1, s16
 80073b6:	9300      	str	r3, [sp, #0]
 80073b8:	220a      	movs	r2, #10
 80073ba:	2300      	movs	r3, #0
 80073bc:	4620      	mov	r0, r4
 80073be:	f000 fd15 	bl	8007dec <__multadd>
 80073c2:	9b08      	ldr	r3, [sp, #32]
 80073c4:	ee08 0a10 	vmov	s16, r0
 80073c8:	2b00      	cmp	r3, #0
 80073ca:	f000 81b0 	beq.w	800772e <_dtoa_r+0xb8e>
 80073ce:	2300      	movs	r3, #0
 80073d0:	4639      	mov	r1, r7
 80073d2:	220a      	movs	r2, #10
 80073d4:	4620      	mov	r0, r4
 80073d6:	f000 fd09 	bl	8007dec <__multadd>
 80073da:	9b02      	ldr	r3, [sp, #8]
 80073dc:	2b00      	cmp	r3, #0
 80073de:	4607      	mov	r7, r0
 80073e0:	f300 808e 	bgt.w	8007500 <_dtoa_r+0x960>
 80073e4:	9b06      	ldr	r3, [sp, #24]
 80073e6:	2b02      	cmp	r3, #2
 80073e8:	dc51      	bgt.n	800748e <_dtoa_r+0x8ee>
 80073ea:	e089      	b.n	8007500 <_dtoa_r+0x960>
 80073ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80073ee:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80073f2:	e74b      	b.n	800728c <_dtoa_r+0x6ec>
 80073f4:	9b03      	ldr	r3, [sp, #12]
 80073f6:	1e5e      	subs	r6, r3, #1
 80073f8:	9b07      	ldr	r3, [sp, #28]
 80073fa:	42b3      	cmp	r3, r6
 80073fc:	bfbf      	itttt	lt
 80073fe:	9b07      	ldrlt	r3, [sp, #28]
 8007400:	9607      	strlt	r6, [sp, #28]
 8007402:	1af2      	sublt	r2, r6, r3
 8007404:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8007406:	bfb6      	itet	lt
 8007408:	189b      	addlt	r3, r3, r2
 800740a:	1b9e      	subge	r6, r3, r6
 800740c:	930a      	strlt	r3, [sp, #40]	; 0x28
 800740e:	9b03      	ldr	r3, [sp, #12]
 8007410:	bfb8      	it	lt
 8007412:	2600      	movlt	r6, #0
 8007414:	2b00      	cmp	r3, #0
 8007416:	bfb7      	itett	lt
 8007418:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800741c:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 8007420:	1a9d      	sublt	r5, r3, r2
 8007422:	2300      	movlt	r3, #0
 8007424:	e734      	b.n	8007290 <_dtoa_r+0x6f0>
 8007426:	9e07      	ldr	r6, [sp, #28]
 8007428:	9d04      	ldr	r5, [sp, #16]
 800742a:	9f08      	ldr	r7, [sp, #32]
 800742c:	e73b      	b.n	80072a6 <_dtoa_r+0x706>
 800742e:	9a07      	ldr	r2, [sp, #28]
 8007430:	e767      	b.n	8007302 <_dtoa_r+0x762>
 8007432:	9b06      	ldr	r3, [sp, #24]
 8007434:	2b01      	cmp	r3, #1
 8007436:	dc18      	bgt.n	800746a <_dtoa_r+0x8ca>
 8007438:	f1ba 0f00 	cmp.w	sl, #0
 800743c:	d115      	bne.n	800746a <_dtoa_r+0x8ca>
 800743e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8007442:	b993      	cbnz	r3, 800746a <_dtoa_r+0x8ca>
 8007444:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8007448:	0d1b      	lsrs	r3, r3, #20
 800744a:	051b      	lsls	r3, r3, #20
 800744c:	b183      	cbz	r3, 8007470 <_dtoa_r+0x8d0>
 800744e:	9b04      	ldr	r3, [sp, #16]
 8007450:	3301      	adds	r3, #1
 8007452:	9304      	str	r3, [sp, #16]
 8007454:	9b05      	ldr	r3, [sp, #20]
 8007456:	3301      	adds	r3, #1
 8007458:	9305      	str	r3, [sp, #20]
 800745a:	f04f 0801 	mov.w	r8, #1
 800745e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007460:	2b00      	cmp	r3, #0
 8007462:	f47f af6a 	bne.w	800733a <_dtoa_r+0x79a>
 8007466:	2001      	movs	r0, #1
 8007468:	e76f      	b.n	800734a <_dtoa_r+0x7aa>
 800746a:	f04f 0800 	mov.w	r8, #0
 800746e:	e7f6      	b.n	800745e <_dtoa_r+0x8be>
 8007470:	4698      	mov	r8, r3
 8007472:	e7f4      	b.n	800745e <_dtoa_r+0x8be>
 8007474:	f43f af7d 	beq.w	8007372 <_dtoa_r+0x7d2>
 8007478:	4618      	mov	r0, r3
 800747a:	301c      	adds	r0, #28
 800747c:	e772      	b.n	8007364 <_dtoa_r+0x7c4>
 800747e:	9b03      	ldr	r3, [sp, #12]
 8007480:	2b00      	cmp	r3, #0
 8007482:	dc37      	bgt.n	80074f4 <_dtoa_r+0x954>
 8007484:	9b06      	ldr	r3, [sp, #24]
 8007486:	2b02      	cmp	r3, #2
 8007488:	dd34      	ble.n	80074f4 <_dtoa_r+0x954>
 800748a:	9b03      	ldr	r3, [sp, #12]
 800748c:	9302      	str	r3, [sp, #8]
 800748e:	9b02      	ldr	r3, [sp, #8]
 8007490:	b96b      	cbnz	r3, 80074ae <_dtoa_r+0x90e>
 8007492:	4631      	mov	r1, r6
 8007494:	2205      	movs	r2, #5
 8007496:	4620      	mov	r0, r4
 8007498:	f000 fca8 	bl	8007dec <__multadd>
 800749c:	4601      	mov	r1, r0
 800749e:	4606      	mov	r6, r0
 80074a0:	ee18 0a10 	vmov	r0, s16
 80074a4:	f000 fea8 	bl	80081f8 <__mcmp>
 80074a8:	2800      	cmp	r0, #0
 80074aa:	f73f adba 	bgt.w	8007022 <_dtoa_r+0x482>
 80074ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80074b0:	9d01      	ldr	r5, [sp, #4]
 80074b2:	43db      	mvns	r3, r3
 80074b4:	9300      	str	r3, [sp, #0]
 80074b6:	f04f 0800 	mov.w	r8, #0
 80074ba:	4631      	mov	r1, r6
 80074bc:	4620      	mov	r0, r4
 80074be:	f000 fc8c 	bl	8007dda <_Bfree>
 80074c2:	2f00      	cmp	r7, #0
 80074c4:	f43f aea4 	beq.w	8007210 <_dtoa_r+0x670>
 80074c8:	f1b8 0f00 	cmp.w	r8, #0
 80074cc:	d005      	beq.n	80074da <_dtoa_r+0x93a>
 80074ce:	45b8      	cmp	r8, r7
 80074d0:	d003      	beq.n	80074da <_dtoa_r+0x93a>
 80074d2:	4641      	mov	r1, r8
 80074d4:	4620      	mov	r0, r4
 80074d6:	f000 fc80 	bl	8007dda <_Bfree>
 80074da:	4639      	mov	r1, r7
 80074dc:	4620      	mov	r0, r4
 80074de:	f000 fc7c 	bl	8007dda <_Bfree>
 80074e2:	e695      	b.n	8007210 <_dtoa_r+0x670>
 80074e4:	2600      	movs	r6, #0
 80074e6:	4637      	mov	r7, r6
 80074e8:	e7e1      	b.n	80074ae <_dtoa_r+0x90e>
 80074ea:	9700      	str	r7, [sp, #0]
 80074ec:	4637      	mov	r7, r6
 80074ee:	e598      	b.n	8007022 <_dtoa_r+0x482>
 80074f0:	40240000 	.word	0x40240000
 80074f4:	9b08      	ldr	r3, [sp, #32]
 80074f6:	2b00      	cmp	r3, #0
 80074f8:	f000 80c9 	beq.w	800768e <_dtoa_r+0xaee>
 80074fc:	9b03      	ldr	r3, [sp, #12]
 80074fe:	9302      	str	r3, [sp, #8]
 8007500:	2d00      	cmp	r5, #0
 8007502:	dd05      	ble.n	8007510 <_dtoa_r+0x970>
 8007504:	4639      	mov	r1, r7
 8007506:	462a      	mov	r2, r5
 8007508:	4620      	mov	r0, r4
 800750a:	f000 fe05 	bl	8008118 <__lshift>
 800750e:	4607      	mov	r7, r0
 8007510:	f1b8 0f00 	cmp.w	r8, #0
 8007514:	d05a      	beq.n	80075cc <_dtoa_r+0xa2c>
 8007516:	6879      	ldr	r1, [r7, #4]
 8007518:	4620      	mov	r0, r4
 800751a:	f000 fc39 	bl	8007d90 <_Balloc>
 800751e:	4605      	mov	r5, r0
 8007520:	b920      	cbnz	r0, 800752c <_dtoa_r+0x98c>
 8007522:	4b87      	ldr	r3, [pc, #540]	; (8007740 <_dtoa_r+0xba0>)
 8007524:	4602      	mov	r2, r0
 8007526:	f240 21ea 	movw	r1, #746	; 0x2ea
 800752a:	e477      	b.n	8006e1c <_dtoa_r+0x27c>
 800752c:	693a      	ldr	r2, [r7, #16]
 800752e:	3202      	adds	r2, #2
 8007530:	0092      	lsls	r2, r2, #2
 8007532:	f107 010c 	add.w	r1, r7, #12
 8007536:	300c      	adds	r0, #12
 8007538:	f7fd fe5c 	bl	80051f4 <memcpy>
 800753c:	2201      	movs	r2, #1
 800753e:	4629      	mov	r1, r5
 8007540:	4620      	mov	r0, r4
 8007542:	f000 fde9 	bl	8008118 <__lshift>
 8007546:	9b01      	ldr	r3, [sp, #4]
 8007548:	f103 0901 	add.w	r9, r3, #1
 800754c:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8007550:	4413      	add	r3, r2
 8007552:	9305      	str	r3, [sp, #20]
 8007554:	f00a 0301 	and.w	r3, sl, #1
 8007558:	46b8      	mov	r8, r7
 800755a:	9304      	str	r3, [sp, #16]
 800755c:	4607      	mov	r7, r0
 800755e:	4631      	mov	r1, r6
 8007560:	ee18 0a10 	vmov	r0, s16
 8007564:	f7ff fa8e 	bl	8006a84 <quorem>
 8007568:	4641      	mov	r1, r8
 800756a:	9002      	str	r0, [sp, #8]
 800756c:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8007570:	ee18 0a10 	vmov	r0, s16
 8007574:	f000 fe40 	bl	80081f8 <__mcmp>
 8007578:	463a      	mov	r2, r7
 800757a:	9003      	str	r0, [sp, #12]
 800757c:	4631      	mov	r1, r6
 800757e:	4620      	mov	r0, r4
 8007580:	f000 fe56 	bl	8008230 <__mdiff>
 8007584:	68c2      	ldr	r2, [r0, #12]
 8007586:	f109 3bff 	add.w	fp, r9, #4294967295	; 0xffffffff
 800758a:	4605      	mov	r5, r0
 800758c:	bb02      	cbnz	r2, 80075d0 <_dtoa_r+0xa30>
 800758e:	4601      	mov	r1, r0
 8007590:	ee18 0a10 	vmov	r0, s16
 8007594:	f000 fe30 	bl	80081f8 <__mcmp>
 8007598:	4602      	mov	r2, r0
 800759a:	4629      	mov	r1, r5
 800759c:	4620      	mov	r0, r4
 800759e:	9207      	str	r2, [sp, #28]
 80075a0:	f000 fc1b 	bl	8007dda <_Bfree>
 80075a4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80075a8:	ea43 0102 	orr.w	r1, r3, r2
 80075ac:	9b04      	ldr	r3, [sp, #16]
 80075ae:	430b      	orrs	r3, r1
 80075b0:	464d      	mov	r5, r9
 80075b2:	d10f      	bne.n	80075d4 <_dtoa_r+0xa34>
 80075b4:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 80075b8:	d02a      	beq.n	8007610 <_dtoa_r+0xa70>
 80075ba:	9b03      	ldr	r3, [sp, #12]
 80075bc:	2b00      	cmp	r3, #0
 80075be:	dd02      	ble.n	80075c6 <_dtoa_r+0xa26>
 80075c0:	9b02      	ldr	r3, [sp, #8]
 80075c2:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 80075c6:	f88b a000 	strb.w	sl, [fp]
 80075ca:	e776      	b.n	80074ba <_dtoa_r+0x91a>
 80075cc:	4638      	mov	r0, r7
 80075ce:	e7ba      	b.n	8007546 <_dtoa_r+0x9a6>
 80075d0:	2201      	movs	r2, #1
 80075d2:	e7e2      	b.n	800759a <_dtoa_r+0x9fa>
 80075d4:	9b03      	ldr	r3, [sp, #12]
 80075d6:	2b00      	cmp	r3, #0
 80075d8:	db04      	blt.n	80075e4 <_dtoa_r+0xa44>
 80075da:	9906      	ldr	r1, [sp, #24]
 80075dc:	430b      	orrs	r3, r1
 80075de:	9904      	ldr	r1, [sp, #16]
 80075e0:	430b      	orrs	r3, r1
 80075e2:	d122      	bne.n	800762a <_dtoa_r+0xa8a>
 80075e4:	2a00      	cmp	r2, #0
 80075e6:	ddee      	ble.n	80075c6 <_dtoa_r+0xa26>
 80075e8:	ee18 1a10 	vmov	r1, s16
 80075ec:	2201      	movs	r2, #1
 80075ee:	4620      	mov	r0, r4
 80075f0:	f000 fd92 	bl	8008118 <__lshift>
 80075f4:	4631      	mov	r1, r6
 80075f6:	ee08 0a10 	vmov	s16, r0
 80075fa:	f000 fdfd 	bl	80081f8 <__mcmp>
 80075fe:	2800      	cmp	r0, #0
 8007600:	dc03      	bgt.n	800760a <_dtoa_r+0xa6a>
 8007602:	d1e0      	bne.n	80075c6 <_dtoa_r+0xa26>
 8007604:	f01a 0f01 	tst.w	sl, #1
 8007608:	d0dd      	beq.n	80075c6 <_dtoa_r+0xa26>
 800760a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800760e:	d1d7      	bne.n	80075c0 <_dtoa_r+0xa20>
 8007610:	2339      	movs	r3, #57	; 0x39
 8007612:	f88b 3000 	strb.w	r3, [fp]
 8007616:	462b      	mov	r3, r5
 8007618:	461d      	mov	r5, r3
 800761a:	3b01      	subs	r3, #1
 800761c:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8007620:	2a39      	cmp	r2, #57	; 0x39
 8007622:	d071      	beq.n	8007708 <_dtoa_r+0xb68>
 8007624:	3201      	adds	r2, #1
 8007626:	701a      	strb	r2, [r3, #0]
 8007628:	e747      	b.n	80074ba <_dtoa_r+0x91a>
 800762a:	2a00      	cmp	r2, #0
 800762c:	dd07      	ble.n	800763e <_dtoa_r+0xa9e>
 800762e:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8007632:	d0ed      	beq.n	8007610 <_dtoa_r+0xa70>
 8007634:	f10a 0301 	add.w	r3, sl, #1
 8007638:	f88b 3000 	strb.w	r3, [fp]
 800763c:	e73d      	b.n	80074ba <_dtoa_r+0x91a>
 800763e:	9b05      	ldr	r3, [sp, #20]
 8007640:	f809 ac01 	strb.w	sl, [r9, #-1]
 8007644:	4599      	cmp	r9, r3
 8007646:	d047      	beq.n	80076d8 <_dtoa_r+0xb38>
 8007648:	ee18 1a10 	vmov	r1, s16
 800764c:	2300      	movs	r3, #0
 800764e:	220a      	movs	r2, #10
 8007650:	4620      	mov	r0, r4
 8007652:	f000 fbcb 	bl	8007dec <__multadd>
 8007656:	45b8      	cmp	r8, r7
 8007658:	ee08 0a10 	vmov	s16, r0
 800765c:	f04f 0300 	mov.w	r3, #0
 8007660:	f04f 020a 	mov.w	r2, #10
 8007664:	4641      	mov	r1, r8
 8007666:	4620      	mov	r0, r4
 8007668:	d106      	bne.n	8007678 <_dtoa_r+0xad8>
 800766a:	f000 fbbf 	bl	8007dec <__multadd>
 800766e:	4680      	mov	r8, r0
 8007670:	4607      	mov	r7, r0
 8007672:	f109 0901 	add.w	r9, r9, #1
 8007676:	e772      	b.n	800755e <_dtoa_r+0x9be>
 8007678:	f000 fbb8 	bl	8007dec <__multadd>
 800767c:	4639      	mov	r1, r7
 800767e:	4680      	mov	r8, r0
 8007680:	2300      	movs	r3, #0
 8007682:	220a      	movs	r2, #10
 8007684:	4620      	mov	r0, r4
 8007686:	f000 fbb1 	bl	8007dec <__multadd>
 800768a:	4607      	mov	r7, r0
 800768c:	e7f1      	b.n	8007672 <_dtoa_r+0xad2>
 800768e:	9b03      	ldr	r3, [sp, #12]
 8007690:	9302      	str	r3, [sp, #8]
 8007692:	9d01      	ldr	r5, [sp, #4]
 8007694:	ee18 0a10 	vmov	r0, s16
 8007698:	4631      	mov	r1, r6
 800769a:	f7ff f9f3 	bl	8006a84 <quorem>
 800769e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 80076a2:	9b01      	ldr	r3, [sp, #4]
 80076a4:	f805 ab01 	strb.w	sl, [r5], #1
 80076a8:	1aea      	subs	r2, r5, r3
 80076aa:	9b02      	ldr	r3, [sp, #8]
 80076ac:	4293      	cmp	r3, r2
 80076ae:	dd09      	ble.n	80076c4 <_dtoa_r+0xb24>
 80076b0:	ee18 1a10 	vmov	r1, s16
 80076b4:	2300      	movs	r3, #0
 80076b6:	220a      	movs	r2, #10
 80076b8:	4620      	mov	r0, r4
 80076ba:	f000 fb97 	bl	8007dec <__multadd>
 80076be:	ee08 0a10 	vmov	s16, r0
 80076c2:	e7e7      	b.n	8007694 <_dtoa_r+0xaf4>
 80076c4:	9b02      	ldr	r3, [sp, #8]
 80076c6:	2b00      	cmp	r3, #0
 80076c8:	bfc8      	it	gt
 80076ca:	461d      	movgt	r5, r3
 80076cc:	9b01      	ldr	r3, [sp, #4]
 80076ce:	bfd8      	it	le
 80076d0:	2501      	movle	r5, #1
 80076d2:	441d      	add	r5, r3
 80076d4:	f04f 0800 	mov.w	r8, #0
 80076d8:	ee18 1a10 	vmov	r1, s16
 80076dc:	2201      	movs	r2, #1
 80076de:	4620      	mov	r0, r4
 80076e0:	f000 fd1a 	bl	8008118 <__lshift>
 80076e4:	4631      	mov	r1, r6
 80076e6:	ee08 0a10 	vmov	s16, r0
 80076ea:	f000 fd85 	bl	80081f8 <__mcmp>
 80076ee:	2800      	cmp	r0, #0
 80076f0:	dc91      	bgt.n	8007616 <_dtoa_r+0xa76>
 80076f2:	d102      	bne.n	80076fa <_dtoa_r+0xb5a>
 80076f4:	f01a 0f01 	tst.w	sl, #1
 80076f8:	d18d      	bne.n	8007616 <_dtoa_r+0xa76>
 80076fa:	462b      	mov	r3, r5
 80076fc:	461d      	mov	r5, r3
 80076fe:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8007702:	2a30      	cmp	r2, #48	; 0x30
 8007704:	d0fa      	beq.n	80076fc <_dtoa_r+0xb5c>
 8007706:	e6d8      	b.n	80074ba <_dtoa_r+0x91a>
 8007708:	9a01      	ldr	r2, [sp, #4]
 800770a:	429a      	cmp	r2, r3
 800770c:	d184      	bne.n	8007618 <_dtoa_r+0xa78>
 800770e:	9b00      	ldr	r3, [sp, #0]
 8007710:	3301      	adds	r3, #1
 8007712:	9300      	str	r3, [sp, #0]
 8007714:	2331      	movs	r3, #49	; 0x31
 8007716:	7013      	strb	r3, [r2, #0]
 8007718:	e6cf      	b.n	80074ba <_dtoa_r+0x91a>
 800771a:	4b0a      	ldr	r3, [pc, #40]	; (8007744 <_dtoa_r+0xba4>)
 800771c:	f7ff ba97 	b.w	8006c4e <_dtoa_r+0xae>
 8007720:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8007722:	2b00      	cmp	r3, #0
 8007724:	f47f aa7b 	bne.w	8006c1e <_dtoa_r+0x7e>
 8007728:	4b07      	ldr	r3, [pc, #28]	; (8007748 <_dtoa_r+0xba8>)
 800772a:	f7ff ba90 	b.w	8006c4e <_dtoa_r+0xae>
 800772e:	9b02      	ldr	r3, [sp, #8]
 8007730:	2b00      	cmp	r3, #0
 8007732:	dcae      	bgt.n	8007692 <_dtoa_r+0xaf2>
 8007734:	9b06      	ldr	r3, [sp, #24]
 8007736:	2b02      	cmp	r3, #2
 8007738:	f73f aea9 	bgt.w	800748e <_dtoa_r+0x8ee>
 800773c:	e7a9      	b.n	8007692 <_dtoa_r+0xaf2>
 800773e:	bf00      	nop
 8007740:	0800e375 	.word	0x0800e375
 8007744:	0800e346 	.word	0x0800e346
 8007748:	0800e36c 	.word	0x0800e36c

0800774c <std>:
 800774c:	2300      	movs	r3, #0
 800774e:	b510      	push	{r4, lr}
 8007750:	4604      	mov	r4, r0
 8007752:	e9c0 3300 	strd	r3, r3, [r0]
 8007756:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800775a:	6083      	str	r3, [r0, #8]
 800775c:	8181      	strh	r1, [r0, #12]
 800775e:	6643      	str	r3, [r0, #100]	; 0x64
 8007760:	81c2      	strh	r2, [r0, #14]
 8007762:	6183      	str	r3, [r0, #24]
 8007764:	4619      	mov	r1, r3
 8007766:	2208      	movs	r2, #8
 8007768:	305c      	adds	r0, #92	; 0x5c
 800776a:	f7fd fd51 	bl	8005210 <memset>
 800776e:	4b07      	ldr	r3, [pc, #28]	; (800778c <std+0x40>)
 8007770:	6223      	str	r3, [r4, #32]
 8007772:	4b07      	ldr	r3, [pc, #28]	; (8007790 <std+0x44>)
 8007774:	6263      	str	r3, [r4, #36]	; 0x24
 8007776:	4b07      	ldr	r3, [pc, #28]	; (8007794 <std+0x48>)
 8007778:	62a3      	str	r3, [r4, #40]	; 0x28
 800777a:	4b07      	ldr	r3, [pc, #28]	; (8007798 <std+0x4c>)
 800777c:	61e4      	str	r4, [r4, #28]
 800777e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8007780:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8007784:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007788:	f000 bae4 	b.w	8007d54 <__retarget_lock_init_recursive>
 800778c:	0800846d 	.word	0x0800846d
 8007790:	0800848f 	.word	0x0800848f
 8007794:	080084c7 	.word	0x080084c7
 8007798:	080084eb 	.word	0x080084eb

0800779c <_cleanup_r>:
 800779c:	4901      	ldr	r1, [pc, #4]	; (80077a4 <_cleanup_r+0x8>)
 800779e:	f000 bab5 	b.w	8007d0c <_fwalk_reent>
 80077a2:	bf00      	nop
 80077a4:	08008831 	.word	0x08008831

080077a8 <__sfp_lock_acquire>:
 80077a8:	4801      	ldr	r0, [pc, #4]	; (80077b0 <__sfp_lock_acquire+0x8>)
 80077aa:	f000 bad5 	b.w	8007d58 <__retarget_lock_acquire_recursive>
 80077ae:	bf00      	nop
 80077b0:	2000154a 	.word	0x2000154a

080077b4 <__sfp_lock_release>:
 80077b4:	4801      	ldr	r0, [pc, #4]	; (80077bc <__sfp_lock_release+0x8>)
 80077b6:	f000 bad0 	b.w	8007d5a <__retarget_lock_release_recursive>
 80077ba:	bf00      	nop
 80077bc:	2000154a 	.word	0x2000154a

080077c0 <__sinit_lock_acquire>:
 80077c0:	4801      	ldr	r0, [pc, #4]	; (80077c8 <__sinit_lock_acquire+0x8>)
 80077c2:	f000 bac9 	b.w	8007d58 <__retarget_lock_acquire_recursive>
 80077c6:	bf00      	nop
 80077c8:	2000154b 	.word	0x2000154b

080077cc <__sinit_lock_release>:
 80077cc:	4801      	ldr	r0, [pc, #4]	; (80077d4 <__sinit_lock_release+0x8>)
 80077ce:	f000 bac4 	b.w	8007d5a <__retarget_lock_release_recursive>
 80077d2:	bf00      	nop
 80077d4:	2000154b 	.word	0x2000154b

080077d8 <__sinit>:
 80077d8:	b510      	push	{r4, lr}
 80077da:	4604      	mov	r4, r0
 80077dc:	f7ff fff0 	bl	80077c0 <__sinit_lock_acquire>
 80077e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80077e2:	b11a      	cbz	r2, 80077ec <__sinit+0x14>
 80077e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80077e8:	f7ff bff0 	b.w	80077cc <__sinit_lock_release>
 80077ec:	4b0d      	ldr	r3, [pc, #52]	; (8007824 <__sinit+0x4c>)
 80077ee:	63e3      	str	r3, [r4, #60]	; 0x3c
 80077f0:	2303      	movs	r3, #3
 80077f2:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
 80077f6:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
 80077fa:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 80077fe:	6860      	ldr	r0, [r4, #4]
 8007800:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
 8007804:	2104      	movs	r1, #4
 8007806:	f7ff ffa1 	bl	800774c <std>
 800780a:	68a0      	ldr	r0, [r4, #8]
 800780c:	2201      	movs	r2, #1
 800780e:	2109      	movs	r1, #9
 8007810:	f7ff ff9c 	bl	800774c <std>
 8007814:	68e0      	ldr	r0, [r4, #12]
 8007816:	2202      	movs	r2, #2
 8007818:	2112      	movs	r1, #18
 800781a:	f7ff ff97 	bl	800774c <std>
 800781e:	2301      	movs	r3, #1
 8007820:	63a3      	str	r3, [r4, #56]	; 0x38
 8007822:	e7df      	b.n	80077e4 <__sinit+0xc>
 8007824:	0800779d 	.word	0x0800779d

08007828 <__libc_fini_array>:
 8007828:	b538      	push	{r3, r4, r5, lr}
 800782a:	4d07      	ldr	r5, [pc, #28]	; (8007848 <__libc_fini_array+0x20>)
 800782c:	4c07      	ldr	r4, [pc, #28]	; (800784c <__libc_fini_array+0x24>)
 800782e:	1b64      	subs	r4, r4, r5
 8007830:	10a4      	asrs	r4, r4, #2
 8007832:	b91c      	cbnz	r4, 800783c <__libc_fini_array+0x14>
 8007834:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007838:	f002 b858 	b.w	80098ec <_fini>
 800783c:	3c01      	subs	r4, #1
 800783e:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8007842:	4798      	blx	r3
 8007844:	e7f5      	b.n	8007832 <__libc_fini_array+0xa>
 8007846:	bf00      	nop
 8007848:	0800e6b4 	.word	0x0800e6b4
 800784c:	0800e6b8 	.word	0x0800e6b8

08007850 <_malloc_trim_r>:
 8007850:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007854:	4606      	mov	r6, r0
 8007856:	2008      	movs	r0, #8
 8007858:	460c      	mov	r4, r1
 800785a:	f7ff f8f5 	bl	8006a48 <sysconf>
 800785e:	4f23      	ldr	r7, [pc, #140]	; (80078ec <_malloc_trim_r+0x9c>)
 8007860:	4680      	mov	r8, r0
 8007862:	4630      	mov	r0, r6
 8007864:	f7fd fcdc 	bl	8005220 <__malloc_lock>
 8007868:	68bb      	ldr	r3, [r7, #8]
 800786a:	685d      	ldr	r5, [r3, #4]
 800786c:	f025 0503 	bic.w	r5, r5, #3
 8007870:	1b2c      	subs	r4, r5, r4
 8007872:	3c11      	subs	r4, #17
 8007874:	4444      	add	r4, r8
 8007876:	fbb4 f4f8 	udiv	r4, r4, r8
 800787a:	3c01      	subs	r4, #1
 800787c:	fb08 f404 	mul.w	r4, r8, r4
 8007880:	45a0      	cmp	r8, r4
 8007882:	dd05      	ble.n	8007890 <_malloc_trim_r+0x40>
 8007884:	4630      	mov	r0, r6
 8007886:	f7fd fcd1 	bl	800522c <__malloc_unlock>
 800788a:	2000      	movs	r0, #0
 800788c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007890:	2100      	movs	r1, #0
 8007892:	4630      	mov	r0, r6
 8007894:	f7fd fec2 	bl	800561c <_sbrk_r>
 8007898:	68bb      	ldr	r3, [r7, #8]
 800789a:	442b      	add	r3, r5
 800789c:	4298      	cmp	r0, r3
 800789e:	d1f1      	bne.n	8007884 <_malloc_trim_r+0x34>
 80078a0:	4261      	negs	r1, r4
 80078a2:	4630      	mov	r0, r6
 80078a4:	f7fd feba 	bl	800561c <_sbrk_r>
 80078a8:	3001      	adds	r0, #1
 80078aa:	d110      	bne.n	80078ce <_malloc_trim_r+0x7e>
 80078ac:	2100      	movs	r1, #0
 80078ae:	4630      	mov	r0, r6
 80078b0:	f7fd feb4 	bl	800561c <_sbrk_r>
 80078b4:	68ba      	ldr	r2, [r7, #8]
 80078b6:	1a83      	subs	r3, r0, r2
 80078b8:	2b0f      	cmp	r3, #15
 80078ba:	dde3      	ble.n	8007884 <_malloc_trim_r+0x34>
 80078bc:	490c      	ldr	r1, [pc, #48]	; (80078f0 <_malloc_trim_r+0xa0>)
 80078be:	6809      	ldr	r1, [r1, #0]
 80078c0:	1a40      	subs	r0, r0, r1
 80078c2:	490c      	ldr	r1, [pc, #48]	; (80078f4 <_malloc_trim_r+0xa4>)
 80078c4:	f043 0301 	orr.w	r3, r3, #1
 80078c8:	6008      	str	r0, [r1, #0]
 80078ca:	6053      	str	r3, [r2, #4]
 80078cc:	e7da      	b.n	8007884 <_malloc_trim_r+0x34>
 80078ce:	68bb      	ldr	r3, [r7, #8]
 80078d0:	4a08      	ldr	r2, [pc, #32]	; (80078f4 <_malloc_trim_r+0xa4>)
 80078d2:	1b2d      	subs	r5, r5, r4
 80078d4:	f045 0501 	orr.w	r5, r5, #1
 80078d8:	605d      	str	r5, [r3, #4]
 80078da:	6813      	ldr	r3, [r2, #0]
 80078dc:	4630      	mov	r0, r6
 80078de:	1b1b      	subs	r3, r3, r4
 80078e0:	6013      	str	r3, [r2, #0]
 80078e2:	f7fd fca3 	bl	800522c <__malloc_unlock>
 80078e6:	2001      	movs	r0, #1
 80078e8:	e7d0      	b.n	800788c <_malloc_trim_r+0x3c>
 80078ea:	bf00      	nop
 80078ec:	20000b68 	.word	0x20000b68
 80078f0:	20000f70 	.word	0x20000f70
 80078f4:	20001514 	.word	0x20001514

080078f8 <_free_r>:
 80078f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80078fa:	4605      	mov	r5, r0
 80078fc:	460f      	mov	r7, r1
 80078fe:	2900      	cmp	r1, #0
 8007900:	f000 80b1 	beq.w	8007a66 <_free_r+0x16e>
 8007904:	f7fd fc8c 	bl	8005220 <__malloc_lock>
 8007908:	f857 2c04 	ldr.w	r2, [r7, #-4]
 800790c:	4856      	ldr	r0, [pc, #344]	; (8007a68 <_free_r+0x170>)
 800790e:	f022 0401 	bic.w	r4, r2, #1
 8007912:	f1a7 0308 	sub.w	r3, r7, #8
 8007916:	eb03 0c04 	add.w	ip, r3, r4
 800791a:	6881      	ldr	r1, [r0, #8]
 800791c:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8007920:	4561      	cmp	r1, ip
 8007922:	f026 0603 	bic.w	r6, r6, #3
 8007926:	f002 0201 	and.w	r2, r2, #1
 800792a:	d11b      	bne.n	8007964 <_free_r+0x6c>
 800792c:	4434      	add	r4, r6
 800792e:	b93a      	cbnz	r2, 8007940 <_free_r+0x48>
 8007930:	f857 2c08 	ldr.w	r2, [r7, #-8]
 8007934:	1a9b      	subs	r3, r3, r2
 8007936:	4414      	add	r4, r2
 8007938:	e9d3 1202 	ldrd	r1, r2, [r3, #8]
 800793c:	60ca      	str	r2, [r1, #12]
 800793e:	6091      	str	r1, [r2, #8]
 8007940:	f044 0201 	orr.w	r2, r4, #1
 8007944:	605a      	str	r2, [r3, #4]
 8007946:	6083      	str	r3, [r0, #8]
 8007948:	4b48      	ldr	r3, [pc, #288]	; (8007a6c <_free_r+0x174>)
 800794a:	681b      	ldr	r3, [r3, #0]
 800794c:	42a3      	cmp	r3, r4
 800794e:	d804      	bhi.n	800795a <_free_r+0x62>
 8007950:	4b47      	ldr	r3, [pc, #284]	; (8007a70 <_free_r+0x178>)
 8007952:	4628      	mov	r0, r5
 8007954:	6819      	ldr	r1, [r3, #0]
 8007956:	f7ff ff7b 	bl	8007850 <_malloc_trim_r>
 800795a:	4628      	mov	r0, r5
 800795c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8007960:	f7fd bc64 	b.w	800522c <__malloc_unlock>
 8007964:	f8cc 6004 	str.w	r6, [ip, #4]
 8007968:	2a00      	cmp	r2, #0
 800796a:	d138      	bne.n	80079de <_free_r+0xe6>
 800796c:	f857 1c08 	ldr.w	r1, [r7, #-8]
 8007970:	1a5b      	subs	r3, r3, r1
 8007972:	440c      	add	r4, r1
 8007974:	6899      	ldr	r1, [r3, #8]
 8007976:	f100 0708 	add.w	r7, r0, #8
 800797a:	42b9      	cmp	r1, r7
 800797c:	d031      	beq.n	80079e2 <_free_r+0xea>
 800797e:	68df      	ldr	r7, [r3, #12]
 8007980:	60cf      	str	r7, [r1, #12]
 8007982:	60b9      	str	r1, [r7, #8]
 8007984:	eb0c 0106 	add.w	r1, ip, r6
 8007988:	6849      	ldr	r1, [r1, #4]
 800798a:	07c9      	lsls	r1, r1, #31
 800798c:	d40b      	bmi.n	80079a6 <_free_r+0xae>
 800798e:	f8dc 1008 	ldr.w	r1, [ip, #8]
 8007992:	4434      	add	r4, r6
 8007994:	bb3a      	cbnz	r2, 80079e6 <_free_r+0xee>
 8007996:	4e37      	ldr	r6, [pc, #220]	; (8007a74 <_free_r+0x17c>)
 8007998:	42b1      	cmp	r1, r6
 800799a:	d124      	bne.n	80079e6 <_free_r+0xee>
 800799c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80079a0:	e9c3 1102 	strd	r1, r1, [r3, #8]
 80079a4:	2201      	movs	r2, #1
 80079a6:	f044 0101 	orr.w	r1, r4, #1
 80079aa:	6059      	str	r1, [r3, #4]
 80079ac:	511c      	str	r4, [r3, r4]
 80079ae:	2a00      	cmp	r2, #0
 80079b0:	d1d3      	bne.n	800795a <_free_r+0x62>
 80079b2:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 80079b6:	d21b      	bcs.n	80079f0 <_free_r+0xf8>
 80079b8:	0961      	lsrs	r1, r4, #5
 80079ba:	08e2      	lsrs	r2, r4, #3
 80079bc:	2401      	movs	r4, #1
 80079be:	408c      	lsls	r4, r1
 80079c0:	6841      	ldr	r1, [r0, #4]
 80079c2:	3201      	adds	r2, #1
 80079c4:	430c      	orrs	r4, r1
 80079c6:	6044      	str	r4, [r0, #4]
 80079c8:	eb00 01c2 	add.w	r1, r0, r2, lsl #3
 80079cc:	f850 4032 	ldr.w	r4, [r0, r2, lsl #3]
 80079d0:	3908      	subs	r1, #8
 80079d2:	e9c3 4102 	strd	r4, r1, [r3, #8]
 80079d6:	f840 3032 	str.w	r3, [r0, r2, lsl #3]
 80079da:	60e3      	str	r3, [r4, #12]
 80079dc:	e7bd      	b.n	800795a <_free_r+0x62>
 80079de:	2200      	movs	r2, #0
 80079e0:	e7d0      	b.n	8007984 <_free_r+0x8c>
 80079e2:	2201      	movs	r2, #1
 80079e4:	e7ce      	b.n	8007984 <_free_r+0x8c>
 80079e6:	f8dc 600c 	ldr.w	r6, [ip, #12]
 80079ea:	60ce      	str	r6, [r1, #12]
 80079ec:	60b1      	str	r1, [r6, #8]
 80079ee:	e7da      	b.n	80079a6 <_free_r+0xae>
 80079f0:	f5b4 6f20 	cmp.w	r4, #2560	; 0xa00
 80079f4:	ea4f 2254 	mov.w	r2, r4, lsr #9
 80079f8:	d214      	bcs.n	8007a24 <_free_r+0x12c>
 80079fa:	09a2      	lsrs	r2, r4, #6
 80079fc:	3238      	adds	r2, #56	; 0x38
 80079fe:	1c51      	adds	r1, r2, #1
 8007a00:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 8007a04:	f850 1031 	ldr.w	r1, [r0, r1, lsl #3]
 8007a08:	428e      	cmp	r6, r1
 8007a0a:	d125      	bne.n	8007a58 <_free_r+0x160>
 8007a0c:	2401      	movs	r4, #1
 8007a0e:	1092      	asrs	r2, r2, #2
 8007a10:	fa04 f202 	lsl.w	r2, r4, r2
 8007a14:	6844      	ldr	r4, [r0, #4]
 8007a16:	4322      	orrs	r2, r4
 8007a18:	6042      	str	r2, [r0, #4]
 8007a1a:	e9c3 1602 	strd	r1, r6, [r3, #8]
 8007a1e:	60b3      	str	r3, [r6, #8]
 8007a20:	60cb      	str	r3, [r1, #12]
 8007a22:	e79a      	b.n	800795a <_free_r+0x62>
 8007a24:	2a14      	cmp	r2, #20
 8007a26:	d801      	bhi.n	8007a2c <_free_r+0x134>
 8007a28:	325b      	adds	r2, #91	; 0x5b
 8007a2a:	e7e8      	b.n	80079fe <_free_r+0x106>
 8007a2c:	2a54      	cmp	r2, #84	; 0x54
 8007a2e:	d802      	bhi.n	8007a36 <_free_r+0x13e>
 8007a30:	0b22      	lsrs	r2, r4, #12
 8007a32:	326e      	adds	r2, #110	; 0x6e
 8007a34:	e7e3      	b.n	80079fe <_free_r+0x106>
 8007a36:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8007a3a:	d802      	bhi.n	8007a42 <_free_r+0x14a>
 8007a3c:	0be2      	lsrs	r2, r4, #15
 8007a3e:	3277      	adds	r2, #119	; 0x77
 8007a40:	e7dd      	b.n	80079fe <_free_r+0x106>
 8007a42:	f240 5154 	movw	r1, #1364	; 0x554
 8007a46:	428a      	cmp	r2, r1
 8007a48:	bf9a      	itte	ls
 8007a4a:	0ca2      	lsrls	r2, r4, #18
 8007a4c:	327c      	addls	r2, #124	; 0x7c
 8007a4e:	227e      	movhi	r2, #126	; 0x7e
 8007a50:	e7d5      	b.n	80079fe <_free_r+0x106>
 8007a52:	6889      	ldr	r1, [r1, #8]
 8007a54:	428e      	cmp	r6, r1
 8007a56:	d004      	beq.n	8007a62 <_free_r+0x16a>
 8007a58:	684a      	ldr	r2, [r1, #4]
 8007a5a:	f022 0203 	bic.w	r2, r2, #3
 8007a5e:	42a2      	cmp	r2, r4
 8007a60:	d8f7      	bhi.n	8007a52 <_free_r+0x15a>
 8007a62:	68ce      	ldr	r6, [r1, #12]
 8007a64:	e7d9      	b.n	8007a1a <_free_r+0x122>
 8007a66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007a68:	20000b68 	.word	0x20000b68
 8007a6c:	20000f74 	.word	0x20000f74
 8007a70:	20001544 	.word	0x20001544
 8007a74:	20000b70 	.word	0x20000b70

08007a78 <__sfvwrite_r>:
 8007a78:	6893      	ldr	r3, [r2, #8]
 8007a7a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a7e:	4606      	mov	r6, r0
 8007a80:	460c      	mov	r4, r1
 8007a82:	4690      	mov	r8, r2
 8007a84:	b91b      	cbnz	r3, 8007a8e <__sfvwrite_r+0x16>
 8007a86:	2000      	movs	r0, #0
 8007a88:	b003      	add	sp, #12
 8007a8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a8e:	898b      	ldrh	r3, [r1, #12]
 8007a90:	0718      	lsls	r0, r3, #28
 8007a92:	d550      	bpl.n	8007b36 <__sfvwrite_r+0xbe>
 8007a94:	690b      	ldr	r3, [r1, #16]
 8007a96:	2b00      	cmp	r3, #0
 8007a98:	d04d      	beq.n	8007b36 <__sfvwrite_r+0xbe>
 8007a9a:	89a3      	ldrh	r3, [r4, #12]
 8007a9c:	f8d8 7000 	ldr.w	r7, [r8]
 8007aa0:	f013 0902 	ands.w	r9, r3, #2
 8007aa4:	d16c      	bne.n	8007b80 <__sfvwrite_r+0x108>
 8007aa6:	f013 0301 	ands.w	r3, r3, #1
 8007aaa:	f000 809c 	beq.w	8007be6 <__sfvwrite_r+0x16e>
 8007aae:	4648      	mov	r0, r9
 8007ab0:	46ca      	mov	sl, r9
 8007ab2:	46cb      	mov	fp, r9
 8007ab4:	f1bb 0f00 	cmp.w	fp, #0
 8007ab8:	f000 8103 	beq.w	8007cc2 <__sfvwrite_r+0x24a>
 8007abc:	b950      	cbnz	r0, 8007ad4 <__sfvwrite_r+0x5c>
 8007abe:	465a      	mov	r2, fp
 8007ac0:	210a      	movs	r1, #10
 8007ac2:	4650      	mov	r0, sl
 8007ac4:	f7f8 fb8c 	bl	80001e0 <memchr>
 8007ac8:	2800      	cmp	r0, #0
 8007aca:	f000 80ff 	beq.w	8007ccc <__sfvwrite_r+0x254>
 8007ace:	3001      	adds	r0, #1
 8007ad0:	eba0 090a 	sub.w	r9, r0, sl
 8007ad4:	6820      	ldr	r0, [r4, #0]
 8007ad6:	6921      	ldr	r1, [r4, #16]
 8007ad8:	6963      	ldr	r3, [r4, #20]
 8007ada:	45d9      	cmp	r9, fp
 8007adc:	464a      	mov	r2, r9
 8007ade:	bf28      	it	cs
 8007ae0:	465a      	movcs	r2, fp
 8007ae2:	4288      	cmp	r0, r1
 8007ae4:	f240 80f5 	bls.w	8007cd2 <__sfvwrite_r+0x25a>
 8007ae8:	68a5      	ldr	r5, [r4, #8]
 8007aea:	441d      	add	r5, r3
 8007aec:	42aa      	cmp	r2, r5
 8007aee:	f340 80f0 	ble.w	8007cd2 <__sfvwrite_r+0x25a>
 8007af2:	4651      	mov	r1, sl
 8007af4:	462a      	mov	r2, r5
 8007af6:	f000 f931 	bl	8007d5c <memmove>
 8007afa:	6823      	ldr	r3, [r4, #0]
 8007afc:	442b      	add	r3, r5
 8007afe:	6023      	str	r3, [r4, #0]
 8007b00:	4621      	mov	r1, r4
 8007b02:	4630      	mov	r0, r6
 8007b04:	f000 ff7a 	bl	80089fc <_fflush_r>
 8007b08:	2800      	cmp	r0, #0
 8007b0a:	d167      	bne.n	8007bdc <__sfvwrite_r+0x164>
 8007b0c:	ebb9 0905 	subs.w	r9, r9, r5
 8007b10:	f040 80f7 	bne.w	8007d02 <__sfvwrite_r+0x28a>
 8007b14:	4621      	mov	r1, r4
 8007b16:	4630      	mov	r0, r6
 8007b18:	f000 ff70 	bl	80089fc <_fflush_r>
 8007b1c:	2800      	cmp	r0, #0
 8007b1e:	d15d      	bne.n	8007bdc <__sfvwrite_r+0x164>
 8007b20:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8007b24:	44aa      	add	sl, r5
 8007b26:	ebab 0b05 	sub.w	fp, fp, r5
 8007b2a:	1b55      	subs	r5, r2, r5
 8007b2c:	f8c8 5008 	str.w	r5, [r8, #8]
 8007b30:	2d00      	cmp	r5, #0
 8007b32:	d1bf      	bne.n	8007ab4 <__sfvwrite_r+0x3c>
 8007b34:	e7a7      	b.n	8007a86 <__sfvwrite_r+0xe>
 8007b36:	4621      	mov	r1, r4
 8007b38:	4630      	mov	r0, r6
 8007b3a:	f000 fd7b 	bl	8008634 <__swsetup_r>
 8007b3e:	2800      	cmp	r0, #0
 8007b40:	d0ab      	beq.n	8007a9a <__sfvwrite_r+0x22>
 8007b42:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8007b46:	e79f      	b.n	8007a88 <__sfvwrite_r+0x10>
 8007b48:	e9d7 b900 	ldrd	fp, r9, [r7]
 8007b4c:	3708      	adds	r7, #8
 8007b4e:	f1b9 0f00 	cmp.w	r9, #0
 8007b52:	d0f9      	beq.n	8007b48 <__sfvwrite_r+0xd0>
 8007b54:	45d1      	cmp	r9, sl
 8007b56:	464b      	mov	r3, r9
 8007b58:	69e1      	ldr	r1, [r4, #28]
 8007b5a:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8007b5c:	bf28      	it	cs
 8007b5e:	4653      	movcs	r3, sl
 8007b60:	465a      	mov	r2, fp
 8007b62:	4630      	mov	r0, r6
 8007b64:	47a8      	blx	r5
 8007b66:	2800      	cmp	r0, #0
 8007b68:	dd38      	ble.n	8007bdc <__sfvwrite_r+0x164>
 8007b6a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8007b6e:	4483      	add	fp, r0
 8007b70:	eba9 0900 	sub.w	r9, r9, r0
 8007b74:	1a18      	subs	r0, r3, r0
 8007b76:	f8c8 0008 	str.w	r0, [r8, #8]
 8007b7a:	2800      	cmp	r0, #0
 8007b7c:	d1e7      	bne.n	8007b4e <__sfvwrite_r+0xd6>
 8007b7e:	e782      	b.n	8007a86 <__sfvwrite_r+0xe>
 8007b80:	f04f 0b00 	mov.w	fp, #0
 8007b84:	f8df a180 	ldr.w	sl, [pc, #384]	; 8007d08 <__sfvwrite_r+0x290>
 8007b88:	46d9      	mov	r9, fp
 8007b8a:	e7e0      	b.n	8007b4e <__sfvwrite_r+0xd6>
 8007b8c:	e9d7 9a00 	ldrd	r9, sl, [r7]
 8007b90:	3708      	adds	r7, #8
 8007b92:	f1ba 0f00 	cmp.w	sl, #0
 8007b96:	d0f9      	beq.n	8007b8c <__sfvwrite_r+0x114>
 8007b98:	89a3      	ldrh	r3, [r4, #12]
 8007b9a:	6820      	ldr	r0, [r4, #0]
 8007b9c:	68a2      	ldr	r2, [r4, #8]
 8007b9e:	0599      	lsls	r1, r3, #22
 8007ba0:	d563      	bpl.n	8007c6a <__sfvwrite_r+0x1f2>
 8007ba2:	4552      	cmp	r2, sl
 8007ba4:	d836      	bhi.n	8007c14 <__sfvwrite_r+0x19c>
 8007ba6:	f413 6f90 	tst.w	r3, #1152	; 0x480
 8007baa:	d033      	beq.n	8007c14 <__sfvwrite_r+0x19c>
 8007bac:	6921      	ldr	r1, [r4, #16]
 8007bae:	6965      	ldr	r5, [r4, #20]
 8007bb0:	eba0 0b01 	sub.w	fp, r0, r1
 8007bb4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8007bb8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8007bbc:	f10b 0201 	add.w	r2, fp, #1
 8007bc0:	106d      	asrs	r5, r5, #1
 8007bc2:	4452      	add	r2, sl
 8007bc4:	4295      	cmp	r5, r2
 8007bc6:	bf38      	it	cc
 8007bc8:	4615      	movcc	r5, r2
 8007bca:	055b      	lsls	r3, r3, #21
 8007bcc:	d53d      	bpl.n	8007c4a <__sfvwrite_r+0x1d2>
 8007bce:	4629      	mov	r1, r5
 8007bd0:	4630      	mov	r0, r6
 8007bd2:	f7fd f8d3 	bl	8004d7c <_malloc_r>
 8007bd6:	b948      	cbnz	r0, 8007bec <__sfvwrite_r+0x174>
 8007bd8:	230c      	movs	r3, #12
 8007bda:	6033      	str	r3, [r6, #0]
 8007bdc:	89a3      	ldrh	r3, [r4, #12]
 8007bde:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007be2:	81a3      	strh	r3, [r4, #12]
 8007be4:	e7ad      	b.n	8007b42 <__sfvwrite_r+0xca>
 8007be6:	4699      	mov	r9, r3
 8007be8:	469a      	mov	sl, r3
 8007bea:	e7d2      	b.n	8007b92 <__sfvwrite_r+0x11a>
 8007bec:	465a      	mov	r2, fp
 8007bee:	6921      	ldr	r1, [r4, #16]
 8007bf0:	9001      	str	r0, [sp, #4]
 8007bf2:	f7fd faff 	bl	80051f4 <memcpy>
 8007bf6:	89a2      	ldrh	r2, [r4, #12]
 8007bf8:	9b01      	ldr	r3, [sp, #4]
 8007bfa:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8007bfe:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8007c02:	81a2      	strh	r2, [r4, #12]
 8007c04:	6123      	str	r3, [r4, #16]
 8007c06:	6165      	str	r5, [r4, #20]
 8007c08:	445b      	add	r3, fp
 8007c0a:	eba5 050b 	sub.w	r5, r5, fp
 8007c0e:	6023      	str	r3, [r4, #0]
 8007c10:	4652      	mov	r2, sl
 8007c12:	60a5      	str	r5, [r4, #8]
 8007c14:	4552      	cmp	r2, sl
 8007c16:	bf28      	it	cs
 8007c18:	4652      	movcs	r2, sl
 8007c1a:	6820      	ldr	r0, [r4, #0]
 8007c1c:	9201      	str	r2, [sp, #4]
 8007c1e:	4649      	mov	r1, r9
 8007c20:	f000 f89c 	bl	8007d5c <memmove>
 8007c24:	68a3      	ldr	r3, [r4, #8]
 8007c26:	9a01      	ldr	r2, [sp, #4]
 8007c28:	1a9b      	subs	r3, r3, r2
 8007c2a:	60a3      	str	r3, [r4, #8]
 8007c2c:	6823      	ldr	r3, [r4, #0]
 8007c2e:	441a      	add	r2, r3
 8007c30:	4655      	mov	r5, sl
 8007c32:	6022      	str	r2, [r4, #0]
 8007c34:	f8d8 0008 	ldr.w	r0, [r8, #8]
 8007c38:	44a9      	add	r9, r5
 8007c3a:	ebaa 0a05 	sub.w	sl, sl, r5
 8007c3e:	1b45      	subs	r5, r0, r5
 8007c40:	f8c8 5008 	str.w	r5, [r8, #8]
 8007c44:	2d00      	cmp	r5, #0
 8007c46:	d1a4      	bne.n	8007b92 <__sfvwrite_r+0x11a>
 8007c48:	e71d      	b.n	8007a86 <__sfvwrite_r+0xe>
 8007c4a:	462a      	mov	r2, r5
 8007c4c:	4630      	mov	r0, r6
 8007c4e:	f7fd fb41 	bl	80052d4 <_realloc_r>
 8007c52:	4603      	mov	r3, r0
 8007c54:	2800      	cmp	r0, #0
 8007c56:	d1d5      	bne.n	8007c04 <__sfvwrite_r+0x18c>
 8007c58:	6921      	ldr	r1, [r4, #16]
 8007c5a:	4630      	mov	r0, r6
 8007c5c:	f7ff fe4c 	bl	80078f8 <_free_r>
 8007c60:	89a3      	ldrh	r3, [r4, #12]
 8007c62:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007c66:	81a3      	strh	r3, [r4, #12]
 8007c68:	e7b6      	b.n	8007bd8 <__sfvwrite_r+0x160>
 8007c6a:	6923      	ldr	r3, [r4, #16]
 8007c6c:	4283      	cmp	r3, r0
 8007c6e:	d302      	bcc.n	8007c76 <__sfvwrite_r+0x1fe>
 8007c70:	6961      	ldr	r1, [r4, #20]
 8007c72:	4551      	cmp	r1, sl
 8007c74:	d915      	bls.n	8007ca2 <__sfvwrite_r+0x22a>
 8007c76:	4552      	cmp	r2, sl
 8007c78:	bf28      	it	cs
 8007c7a:	4652      	movcs	r2, sl
 8007c7c:	4649      	mov	r1, r9
 8007c7e:	4615      	mov	r5, r2
 8007c80:	f000 f86c 	bl	8007d5c <memmove>
 8007c84:	68a3      	ldr	r3, [r4, #8]
 8007c86:	6822      	ldr	r2, [r4, #0]
 8007c88:	1b5b      	subs	r3, r3, r5
 8007c8a:	442a      	add	r2, r5
 8007c8c:	60a3      	str	r3, [r4, #8]
 8007c8e:	6022      	str	r2, [r4, #0]
 8007c90:	2b00      	cmp	r3, #0
 8007c92:	d1cf      	bne.n	8007c34 <__sfvwrite_r+0x1bc>
 8007c94:	4621      	mov	r1, r4
 8007c96:	4630      	mov	r0, r6
 8007c98:	f000 feb0 	bl	80089fc <_fflush_r>
 8007c9c:	2800      	cmp	r0, #0
 8007c9e:	d0c9      	beq.n	8007c34 <__sfvwrite_r+0x1bc>
 8007ca0:	e79c      	b.n	8007bdc <__sfvwrite_r+0x164>
 8007ca2:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8007ca6:	459a      	cmp	sl, r3
 8007ca8:	bf38      	it	cc
 8007caa:	4653      	movcc	r3, sl
 8007cac:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8007cae:	fb93 f3f1 	sdiv	r3, r3, r1
 8007cb2:	464a      	mov	r2, r9
 8007cb4:	434b      	muls	r3, r1
 8007cb6:	4630      	mov	r0, r6
 8007cb8:	69e1      	ldr	r1, [r4, #28]
 8007cba:	47a8      	blx	r5
 8007cbc:	1e05      	subs	r5, r0, #0
 8007cbe:	dcb9      	bgt.n	8007c34 <__sfvwrite_r+0x1bc>
 8007cc0:	e78c      	b.n	8007bdc <__sfvwrite_r+0x164>
 8007cc2:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8007cc6:	2000      	movs	r0, #0
 8007cc8:	3708      	adds	r7, #8
 8007cca:	e6f3      	b.n	8007ab4 <__sfvwrite_r+0x3c>
 8007ccc:	f10b 0901 	add.w	r9, fp, #1
 8007cd0:	e700      	b.n	8007ad4 <__sfvwrite_r+0x5c>
 8007cd2:	4293      	cmp	r3, r2
 8007cd4:	dc08      	bgt.n	8007ce8 <__sfvwrite_r+0x270>
 8007cd6:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8007cd8:	69e1      	ldr	r1, [r4, #28]
 8007cda:	4652      	mov	r2, sl
 8007cdc:	4630      	mov	r0, r6
 8007cde:	47a8      	blx	r5
 8007ce0:	1e05      	subs	r5, r0, #0
 8007ce2:	f73f af13 	bgt.w	8007b0c <__sfvwrite_r+0x94>
 8007ce6:	e779      	b.n	8007bdc <__sfvwrite_r+0x164>
 8007ce8:	4651      	mov	r1, sl
 8007cea:	9201      	str	r2, [sp, #4]
 8007cec:	f000 f836 	bl	8007d5c <memmove>
 8007cf0:	9a01      	ldr	r2, [sp, #4]
 8007cf2:	68a3      	ldr	r3, [r4, #8]
 8007cf4:	1a9b      	subs	r3, r3, r2
 8007cf6:	60a3      	str	r3, [r4, #8]
 8007cf8:	6823      	ldr	r3, [r4, #0]
 8007cfa:	4413      	add	r3, r2
 8007cfc:	6023      	str	r3, [r4, #0]
 8007cfe:	4615      	mov	r5, r2
 8007d00:	e704      	b.n	8007b0c <__sfvwrite_r+0x94>
 8007d02:	2001      	movs	r0, #1
 8007d04:	e70c      	b.n	8007b20 <__sfvwrite_r+0xa8>
 8007d06:	bf00      	nop
 8007d08:	7ffffc00 	.word	0x7ffffc00

08007d0c <_fwalk_reent>:
 8007d0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007d10:	4606      	mov	r6, r0
 8007d12:	4688      	mov	r8, r1
 8007d14:	f500 7438 	add.w	r4, r0, #736	; 0x2e0
 8007d18:	2700      	movs	r7, #0
 8007d1a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8007d1e:	f1b9 0901 	subs.w	r9, r9, #1
 8007d22:	d505      	bpl.n	8007d30 <_fwalk_reent+0x24>
 8007d24:	6824      	ldr	r4, [r4, #0]
 8007d26:	2c00      	cmp	r4, #0
 8007d28:	d1f7      	bne.n	8007d1a <_fwalk_reent+0xe>
 8007d2a:	4638      	mov	r0, r7
 8007d2c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007d30:	89ab      	ldrh	r3, [r5, #12]
 8007d32:	2b01      	cmp	r3, #1
 8007d34:	d907      	bls.n	8007d46 <_fwalk_reent+0x3a>
 8007d36:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8007d3a:	3301      	adds	r3, #1
 8007d3c:	d003      	beq.n	8007d46 <_fwalk_reent+0x3a>
 8007d3e:	4629      	mov	r1, r5
 8007d40:	4630      	mov	r0, r6
 8007d42:	47c0      	blx	r8
 8007d44:	4307      	orrs	r7, r0
 8007d46:	3568      	adds	r5, #104	; 0x68
 8007d48:	e7e9      	b.n	8007d1e <_fwalk_reent+0x12>
	...

08007d4c <_localeconv_r>:
 8007d4c:	4800      	ldr	r0, [pc, #0]	; (8007d50 <_localeconv_r+0x4>)
 8007d4e:	4770      	bx	lr
 8007d50:	2000106c 	.word	0x2000106c

08007d54 <__retarget_lock_init_recursive>:
 8007d54:	4770      	bx	lr

08007d56 <__retarget_lock_close_recursive>:
 8007d56:	4770      	bx	lr

08007d58 <__retarget_lock_acquire_recursive>:
 8007d58:	4770      	bx	lr

08007d5a <__retarget_lock_release_recursive>:
 8007d5a:	4770      	bx	lr

08007d5c <memmove>:
 8007d5c:	4288      	cmp	r0, r1
 8007d5e:	b510      	push	{r4, lr}
 8007d60:	eb01 0402 	add.w	r4, r1, r2
 8007d64:	d902      	bls.n	8007d6c <memmove+0x10>
 8007d66:	4284      	cmp	r4, r0
 8007d68:	4623      	mov	r3, r4
 8007d6a:	d807      	bhi.n	8007d7c <memmove+0x20>
 8007d6c:	1e43      	subs	r3, r0, #1
 8007d6e:	42a1      	cmp	r1, r4
 8007d70:	d008      	beq.n	8007d84 <memmove+0x28>
 8007d72:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007d76:	f803 2f01 	strb.w	r2, [r3, #1]!
 8007d7a:	e7f8      	b.n	8007d6e <memmove+0x12>
 8007d7c:	4402      	add	r2, r0
 8007d7e:	4601      	mov	r1, r0
 8007d80:	428a      	cmp	r2, r1
 8007d82:	d100      	bne.n	8007d86 <memmove+0x2a>
 8007d84:	bd10      	pop	{r4, pc}
 8007d86:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8007d8a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8007d8e:	e7f7      	b.n	8007d80 <memmove+0x24>

08007d90 <_Balloc>:
 8007d90:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8007d92:	b570      	push	{r4, r5, r6, lr}
 8007d94:	4605      	mov	r5, r0
 8007d96:	460c      	mov	r4, r1
 8007d98:	b17b      	cbz	r3, 8007dba <_Balloc+0x2a>
 8007d9a:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8007d9c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8007da0:	b9a0      	cbnz	r0, 8007dcc <_Balloc+0x3c>
 8007da2:	2101      	movs	r1, #1
 8007da4:	fa01 f604 	lsl.w	r6, r1, r4
 8007da8:	1d72      	adds	r2, r6, #5
 8007daa:	0092      	lsls	r2, r2, #2
 8007dac:	4628      	mov	r0, r5
 8007dae:	f000 fcf9 	bl	80087a4 <_calloc_r>
 8007db2:	b148      	cbz	r0, 8007dc8 <_Balloc+0x38>
 8007db4:	e9c0 4601 	strd	r4, r6, [r0, #4]
 8007db8:	e00b      	b.n	8007dd2 <_Balloc+0x42>
 8007dba:	2221      	movs	r2, #33	; 0x21
 8007dbc:	2104      	movs	r1, #4
 8007dbe:	f000 fcf1 	bl	80087a4 <_calloc_r>
 8007dc2:	64e8      	str	r0, [r5, #76]	; 0x4c
 8007dc4:	2800      	cmp	r0, #0
 8007dc6:	d1e8      	bne.n	8007d9a <_Balloc+0xa>
 8007dc8:	2000      	movs	r0, #0
 8007dca:	bd70      	pop	{r4, r5, r6, pc}
 8007dcc:	6802      	ldr	r2, [r0, #0]
 8007dce:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8007dd2:	2300      	movs	r3, #0
 8007dd4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8007dd8:	e7f7      	b.n	8007dca <_Balloc+0x3a>

08007dda <_Bfree>:
 8007dda:	b131      	cbz	r1, 8007dea <_Bfree+0x10>
 8007ddc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8007dde:	684a      	ldr	r2, [r1, #4]
 8007de0:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8007de4:	6008      	str	r0, [r1, #0]
 8007de6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007dea:	4770      	bx	lr

08007dec <__multadd>:
 8007dec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007df0:	690d      	ldr	r5, [r1, #16]
 8007df2:	4607      	mov	r7, r0
 8007df4:	460c      	mov	r4, r1
 8007df6:	461e      	mov	r6, r3
 8007df8:	f101 0c14 	add.w	ip, r1, #20
 8007dfc:	2000      	movs	r0, #0
 8007dfe:	f8dc 3000 	ldr.w	r3, [ip]
 8007e02:	b299      	uxth	r1, r3
 8007e04:	fb02 6101 	mla	r1, r2, r1, r6
 8007e08:	0c1e      	lsrs	r6, r3, #16
 8007e0a:	0c0b      	lsrs	r3, r1, #16
 8007e0c:	fb02 3306 	mla	r3, r2, r6, r3
 8007e10:	b289      	uxth	r1, r1
 8007e12:	3001      	adds	r0, #1
 8007e14:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8007e18:	4285      	cmp	r5, r0
 8007e1a:	f84c 1b04 	str.w	r1, [ip], #4
 8007e1e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8007e22:	dcec      	bgt.n	8007dfe <__multadd+0x12>
 8007e24:	b30e      	cbz	r6, 8007e6a <__multadd+0x7e>
 8007e26:	68a3      	ldr	r3, [r4, #8]
 8007e28:	42ab      	cmp	r3, r5
 8007e2a:	dc19      	bgt.n	8007e60 <__multadd+0x74>
 8007e2c:	6861      	ldr	r1, [r4, #4]
 8007e2e:	4638      	mov	r0, r7
 8007e30:	3101      	adds	r1, #1
 8007e32:	f7ff ffad 	bl	8007d90 <_Balloc>
 8007e36:	4680      	mov	r8, r0
 8007e38:	b928      	cbnz	r0, 8007e46 <__multadd+0x5a>
 8007e3a:	4602      	mov	r2, r0
 8007e3c:	4b0c      	ldr	r3, [pc, #48]	; (8007e70 <__multadd+0x84>)
 8007e3e:	480d      	ldr	r0, [pc, #52]	; (8007e74 <__multadd+0x88>)
 8007e40:	21b5      	movs	r1, #181	; 0xb5
 8007e42:	f000 fc91 	bl	8008768 <__assert_func>
 8007e46:	6922      	ldr	r2, [r4, #16]
 8007e48:	3202      	adds	r2, #2
 8007e4a:	f104 010c 	add.w	r1, r4, #12
 8007e4e:	0092      	lsls	r2, r2, #2
 8007e50:	300c      	adds	r0, #12
 8007e52:	f7fd f9cf 	bl	80051f4 <memcpy>
 8007e56:	4621      	mov	r1, r4
 8007e58:	4638      	mov	r0, r7
 8007e5a:	f7ff ffbe 	bl	8007dda <_Bfree>
 8007e5e:	4644      	mov	r4, r8
 8007e60:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8007e64:	3501      	adds	r5, #1
 8007e66:	615e      	str	r6, [r3, #20]
 8007e68:	6125      	str	r5, [r4, #16]
 8007e6a:	4620      	mov	r0, r4
 8007e6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007e70:	0800e375 	.word	0x0800e375
 8007e74:	0800e3e1 	.word	0x0800e3e1

08007e78 <__hi0bits>:
 8007e78:	0c03      	lsrs	r3, r0, #16
 8007e7a:	041b      	lsls	r3, r3, #16
 8007e7c:	b9d3      	cbnz	r3, 8007eb4 <__hi0bits+0x3c>
 8007e7e:	0400      	lsls	r0, r0, #16
 8007e80:	2310      	movs	r3, #16
 8007e82:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8007e86:	bf04      	itt	eq
 8007e88:	0200      	lsleq	r0, r0, #8
 8007e8a:	3308      	addeq	r3, #8
 8007e8c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8007e90:	bf04      	itt	eq
 8007e92:	0100      	lsleq	r0, r0, #4
 8007e94:	3304      	addeq	r3, #4
 8007e96:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8007e9a:	bf04      	itt	eq
 8007e9c:	0080      	lsleq	r0, r0, #2
 8007e9e:	3302      	addeq	r3, #2
 8007ea0:	2800      	cmp	r0, #0
 8007ea2:	db05      	blt.n	8007eb0 <__hi0bits+0x38>
 8007ea4:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8007ea8:	f103 0301 	add.w	r3, r3, #1
 8007eac:	bf08      	it	eq
 8007eae:	2320      	moveq	r3, #32
 8007eb0:	4618      	mov	r0, r3
 8007eb2:	4770      	bx	lr
 8007eb4:	2300      	movs	r3, #0
 8007eb6:	e7e4      	b.n	8007e82 <__hi0bits+0xa>

08007eb8 <__lo0bits>:
 8007eb8:	6803      	ldr	r3, [r0, #0]
 8007eba:	f013 0207 	ands.w	r2, r3, #7
 8007ebe:	4601      	mov	r1, r0
 8007ec0:	d00b      	beq.n	8007eda <__lo0bits+0x22>
 8007ec2:	07da      	lsls	r2, r3, #31
 8007ec4:	d423      	bmi.n	8007f0e <__lo0bits+0x56>
 8007ec6:	0798      	lsls	r0, r3, #30
 8007ec8:	bf49      	itett	mi
 8007eca:	085b      	lsrmi	r3, r3, #1
 8007ecc:	089b      	lsrpl	r3, r3, #2
 8007ece:	2001      	movmi	r0, #1
 8007ed0:	600b      	strmi	r3, [r1, #0]
 8007ed2:	bf5c      	itt	pl
 8007ed4:	600b      	strpl	r3, [r1, #0]
 8007ed6:	2002      	movpl	r0, #2
 8007ed8:	4770      	bx	lr
 8007eda:	b298      	uxth	r0, r3
 8007edc:	b9a8      	cbnz	r0, 8007f0a <__lo0bits+0x52>
 8007ede:	0c1b      	lsrs	r3, r3, #16
 8007ee0:	2010      	movs	r0, #16
 8007ee2:	b2da      	uxtb	r2, r3
 8007ee4:	b90a      	cbnz	r2, 8007eea <__lo0bits+0x32>
 8007ee6:	3008      	adds	r0, #8
 8007ee8:	0a1b      	lsrs	r3, r3, #8
 8007eea:	071a      	lsls	r2, r3, #28
 8007eec:	bf04      	itt	eq
 8007eee:	091b      	lsreq	r3, r3, #4
 8007ef0:	3004      	addeq	r0, #4
 8007ef2:	079a      	lsls	r2, r3, #30
 8007ef4:	bf04      	itt	eq
 8007ef6:	089b      	lsreq	r3, r3, #2
 8007ef8:	3002      	addeq	r0, #2
 8007efa:	07da      	lsls	r2, r3, #31
 8007efc:	d403      	bmi.n	8007f06 <__lo0bits+0x4e>
 8007efe:	085b      	lsrs	r3, r3, #1
 8007f00:	f100 0001 	add.w	r0, r0, #1
 8007f04:	d005      	beq.n	8007f12 <__lo0bits+0x5a>
 8007f06:	600b      	str	r3, [r1, #0]
 8007f08:	4770      	bx	lr
 8007f0a:	4610      	mov	r0, r2
 8007f0c:	e7e9      	b.n	8007ee2 <__lo0bits+0x2a>
 8007f0e:	2000      	movs	r0, #0
 8007f10:	4770      	bx	lr
 8007f12:	2020      	movs	r0, #32
 8007f14:	4770      	bx	lr
	...

08007f18 <__i2b>:
 8007f18:	b510      	push	{r4, lr}
 8007f1a:	460c      	mov	r4, r1
 8007f1c:	2101      	movs	r1, #1
 8007f1e:	f7ff ff37 	bl	8007d90 <_Balloc>
 8007f22:	4602      	mov	r2, r0
 8007f24:	b928      	cbnz	r0, 8007f32 <__i2b+0x1a>
 8007f26:	4b05      	ldr	r3, [pc, #20]	; (8007f3c <__i2b+0x24>)
 8007f28:	4805      	ldr	r0, [pc, #20]	; (8007f40 <__i2b+0x28>)
 8007f2a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007f2e:	f000 fc1b 	bl	8008768 <__assert_func>
 8007f32:	2301      	movs	r3, #1
 8007f34:	6144      	str	r4, [r0, #20]
 8007f36:	6103      	str	r3, [r0, #16]
 8007f38:	bd10      	pop	{r4, pc}
 8007f3a:	bf00      	nop
 8007f3c:	0800e375 	.word	0x0800e375
 8007f40:	0800e3e1 	.word	0x0800e3e1

08007f44 <__multiply>:
 8007f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f48:	4691      	mov	r9, r2
 8007f4a:	690a      	ldr	r2, [r1, #16]
 8007f4c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8007f50:	429a      	cmp	r2, r3
 8007f52:	bfb8      	it	lt
 8007f54:	460b      	movlt	r3, r1
 8007f56:	460c      	mov	r4, r1
 8007f58:	bfbc      	itt	lt
 8007f5a:	464c      	movlt	r4, r9
 8007f5c:	4699      	movlt	r9, r3
 8007f5e:	6927      	ldr	r7, [r4, #16]
 8007f60:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8007f64:	68a3      	ldr	r3, [r4, #8]
 8007f66:	6861      	ldr	r1, [r4, #4]
 8007f68:	eb07 060a 	add.w	r6, r7, sl
 8007f6c:	42b3      	cmp	r3, r6
 8007f6e:	b085      	sub	sp, #20
 8007f70:	bfb8      	it	lt
 8007f72:	3101      	addlt	r1, #1
 8007f74:	f7ff ff0c 	bl	8007d90 <_Balloc>
 8007f78:	b930      	cbnz	r0, 8007f88 <__multiply+0x44>
 8007f7a:	4602      	mov	r2, r0
 8007f7c:	4b44      	ldr	r3, [pc, #272]	; (8008090 <__multiply+0x14c>)
 8007f7e:	4845      	ldr	r0, [pc, #276]	; (8008094 <__multiply+0x150>)
 8007f80:	f240 115d 	movw	r1, #349	; 0x15d
 8007f84:	f000 fbf0 	bl	8008768 <__assert_func>
 8007f88:	f100 0514 	add.w	r5, r0, #20
 8007f8c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8007f90:	462b      	mov	r3, r5
 8007f92:	2200      	movs	r2, #0
 8007f94:	4543      	cmp	r3, r8
 8007f96:	d321      	bcc.n	8007fdc <__multiply+0x98>
 8007f98:	f104 0314 	add.w	r3, r4, #20
 8007f9c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8007fa0:	f109 0314 	add.w	r3, r9, #20
 8007fa4:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8007fa8:	9202      	str	r2, [sp, #8]
 8007faa:	1b3a      	subs	r2, r7, r4
 8007fac:	3a15      	subs	r2, #21
 8007fae:	f022 0203 	bic.w	r2, r2, #3
 8007fb2:	3204      	adds	r2, #4
 8007fb4:	f104 0115 	add.w	r1, r4, #21
 8007fb8:	428f      	cmp	r7, r1
 8007fba:	bf38      	it	cc
 8007fbc:	2204      	movcc	r2, #4
 8007fbe:	9201      	str	r2, [sp, #4]
 8007fc0:	9a02      	ldr	r2, [sp, #8]
 8007fc2:	9303      	str	r3, [sp, #12]
 8007fc4:	429a      	cmp	r2, r3
 8007fc6:	d80c      	bhi.n	8007fe2 <__multiply+0x9e>
 8007fc8:	2e00      	cmp	r6, #0
 8007fca:	dd03      	ble.n	8007fd4 <__multiply+0x90>
 8007fcc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8007fd0:	2b00      	cmp	r3, #0
 8007fd2:	d05a      	beq.n	800808a <__multiply+0x146>
 8007fd4:	6106      	str	r6, [r0, #16]
 8007fd6:	b005      	add	sp, #20
 8007fd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007fdc:	f843 2b04 	str.w	r2, [r3], #4
 8007fe0:	e7d8      	b.n	8007f94 <__multiply+0x50>
 8007fe2:	f8b3 a000 	ldrh.w	sl, [r3]
 8007fe6:	f1ba 0f00 	cmp.w	sl, #0
 8007fea:	d024      	beq.n	8008036 <__multiply+0xf2>
 8007fec:	f104 0e14 	add.w	lr, r4, #20
 8007ff0:	46a9      	mov	r9, r5
 8007ff2:	f04f 0c00 	mov.w	ip, #0
 8007ff6:	f85e 2b04 	ldr.w	r2, [lr], #4
 8007ffa:	f8d9 1000 	ldr.w	r1, [r9]
 8007ffe:	fa1f fb82 	uxth.w	fp, r2
 8008002:	b289      	uxth	r1, r1
 8008004:	fb0a 110b 	mla	r1, sl, fp, r1
 8008008:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800800c:	f8d9 2000 	ldr.w	r2, [r9]
 8008010:	4461      	add	r1, ip
 8008012:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8008016:	fb0a c20b 	mla	r2, sl, fp, ip
 800801a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800801e:	b289      	uxth	r1, r1
 8008020:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8008024:	4577      	cmp	r7, lr
 8008026:	f849 1b04 	str.w	r1, [r9], #4
 800802a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800802e:	d8e2      	bhi.n	8007ff6 <__multiply+0xb2>
 8008030:	9a01      	ldr	r2, [sp, #4]
 8008032:	f845 c002 	str.w	ip, [r5, r2]
 8008036:	9a03      	ldr	r2, [sp, #12]
 8008038:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800803c:	3304      	adds	r3, #4
 800803e:	f1b9 0f00 	cmp.w	r9, #0
 8008042:	d020      	beq.n	8008086 <__multiply+0x142>
 8008044:	6829      	ldr	r1, [r5, #0]
 8008046:	f104 0c14 	add.w	ip, r4, #20
 800804a:	46ae      	mov	lr, r5
 800804c:	f04f 0a00 	mov.w	sl, #0
 8008050:	f8bc b000 	ldrh.w	fp, [ip]
 8008054:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8008058:	fb09 220b 	mla	r2, r9, fp, r2
 800805c:	4492      	add	sl, r2
 800805e:	b289      	uxth	r1, r1
 8008060:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8008064:	f84e 1b04 	str.w	r1, [lr], #4
 8008068:	f85c 2b04 	ldr.w	r2, [ip], #4
 800806c:	f8be 1000 	ldrh.w	r1, [lr]
 8008070:	0c12      	lsrs	r2, r2, #16
 8008072:	fb09 1102 	mla	r1, r9, r2, r1
 8008076:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800807a:	4567      	cmp	r7, ip
 800807c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8008080:	d8e6      	bhi.n	8008050 <__multiply+0x10c>
 8008082:	9a01      	ldr	r2, [sp, #4]
 8008084:	50a9      	str	r1, [r5, r2]
 8008086:	3504      	adds	r5, #4
 8008088:	e79a      	b.n	8007fc0 <__multiply+0x7c>
 800808a:	3e01      	subs	r6, #1
 800808c:	e79c      	b.n	8007fc8 <__multiply+0x84>
 800808e:	bf00      	nop
 8008090:	0800e375 	.word	0x0800e375
 8008094:	0800e3e1 	.word	0x0800e3e1

08008098 <__pow5mult>:
 8008098:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800809c:	4615      	mov	r5, r2
 800809e:	f012 0203 	ands.w	r2, r2, #3
 80080a2:	4606      	mov	r6, r0
 80080a4:	460f      	mov	r7, r1
 80080a6:	d007      	beq.n	80080b8 <__pow5mult+0x20>
 80080a8:	4c1a      	ldr	r4, [pc, #104]	; (8008114 <__pow5mult+0x7c>)
 80080aa:	3a01      	subs	r2, #1
 80080ac:	2300      	movs	r3, #0
 80080ae:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80080b2:	f7ff fe9b 	bl	8007dec <__multadd>
 80080b6:	4607      	mov	r7, r0
 80080b8:	10ad      	asrs	r5, r5, #2
 80080ba:	d027      	beq.n	800810c <__pow5mult+0x74>
 80080bc:	6cb4      	ldr	r4, [r6, #72]	; 0x48
 80080be:	b944      	cbnz	r4, 80080d2 <__pow5mult+0x3a>
 80080c0:	f240 2171 	movw	r1, #625	; 0x271
 80080c4:	4630      	mov	r0, r6
 80080c6:	f7ff ff27 	bl	8007f18 <__i2b>
 80080ca:	2300      	movs	r3, #0
 80080cc:	64b0      	str	r0, [r6, #72]	; 0x48
 80080ce:	4604      	mov	r4, r0
 80080d0:	6003      	str	r3, [r0, #0]
 80080d2:	f04f 0900 	mov.w	r9, #0
 80080d6:	07eb      	lsls	r3, r5, #31
 80080d8:	d50a      	bpl.n	80080f0 <__pow5mult+0x58>
 80080da:	4639      	mov	r1, r7
 80080dc:	4622      	mov	r2, r4
 80080de:	4630      	mov	r0, r6
 80080e0:	f7ff ff30 	bl	8007f44 <__multiply>
 80080e4:	4639      	mov	r1, r7
 80080e6:	4680      	mov	r8, r0
 80080e8:	4630      	mov	r0, r6
 80080ea:	f7ff fe76 	bl	8007dda <_Bfree>
 80080ee:	4647      	mov	r7, r8
 80080f0:	106d      	asrs	r5, r5, #1
 80080f2:	d00b      	beq.n	800810c <__pow5mult+0x74>
 80080f4:	6820      	ldr	r0, [r4, #0]
 80080f6:	b938      	cbnz	r0, 8008108 <__pow5mult+0x70>
 80080f8:	4622      	mov	r2, r4
 80080fa:	4621      	mov	r1, r4
 80080fc:	4630      	mov	r0, r6
 80080fe:	f7ff ff21 	bl	8007f44 <__multiply>
 8008102:	6020      	str	r0, [r4, #0]
 8008104:	f8c0 9000 	str.w	r9, [r0]
 8008108:	4604      	mov	r4, r0
 800810a:	e7e4      	b.n	80080d6 <__pow5mult+0x3e>
 800810c:	4638      	mov	r0, r7
 800810e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008112:	bf00      	nop
 8008114:	0800e530 	.word	0x0800e530

08008118 <__lshift>:
 8008118:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800811c:	460c      	mov	r4, r1
 800811e:	6849      	ldr	r1, [r1, #4]
 8008120:	6923      	ldr	r3, [r4, #16]
 8008122:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8008126:	68a3      	ldr	r3, [r4, #8]
 8008128:	4607      	mov	r7, r0
 800812a:	4691      	mov	r9, r2
 800812c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8008130:	f108 0601 	add.w	r6, r8, #1
 8008134:	42b3      	cmp	r3, r6
 8008136:	db0b      	blt.n	8008150 <__lshift+0x38>
 8008138:	4638      	mov	r0, r7
 800813a:	f7ff fe29 	bl	8007d90 <_Balloc>
 800813e:	4605      	mov	r5, r0
 8008140:	b948      	cbnz	r0, 8008156 <__lshift+0x3e>
 8008142:	4602      	mov	r2, r0
 8008144:	4b2a      	ldr	r3, [pc, #168]	; (80081f0 <__lshift+0xd8>)
 8008146:	482b      	ldr	r0, [pc, #172]	; (80081f4 <__lshift+0xdc>)
 8008148:	f240 11d9 	movw	r1, #473	; 0x1d9
 800814c:	f000 fb0c 	bl	8008768 <__assert_func>
 8008150:	3101      	adds	r1, #1
 8008152:	005b      	lsls	r3, r3, #1
 8008154:	e7ee      	b.n	8008134 <__lshift+0x1c>
 8008156:	2300      	movs	r3, #0
 8008158:	f100 0114 	add.w	r1, r0, #20
 800815c:	f100 0210 	add.w	r2, r0, #16
 8008160:	4618      	mov	r0, r3
 8008162:	4553      	cmp	r3, sl
 8008164:	db37      	blt.n	80081d6 <__lshift+0xbe>
 8008166:	6920      	ldr	r0, [r4, #16]
 8008168:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800816c:	f104 0314 	add.w	r3, r4, #20
 8008170:	f019 091f 	ands.w	r9, r9, #31
 8008174:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8008178:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800817c:	d02f      	beq.n	80081de <__lshift+0xc6>
 800817e:	f1c9 0e20 	rsb	lr, r9, #32
 8008182:	468a      	mov	sl, r1
 8008184:	f04f 0c00 	mov.w	ip, #0
 8008188:	681a      	ldr	r2, [r3, #0]
 800818a:	fa02 f209 	lsl.w	r2, r2, r9
 800818e:	ea42 020c 	orr.w	r2, r2, ip
 8008192:	f84a 2b04 	str.w	r2, [sl], #4
 8008196:	f853 2b04 	ldr.w	r2, [r3], #4
 800819a:	4298      	cmp	r0, r3
 800819c:	fa22 fc0e 	lsr.w	ip, r2, lr
 80081a0:	d8f2      	bhi.n	8008188 <__lshift+0x70>
 80081a2:	1b03      	subs	r3, r0, r4
 80081a4:	3b15      	subs	r3, #21
 80081a6:	f023 0303 	bic.w	r3, r3, #3
 80081aa:	3304      	adds	r3, #4
 80081ac:	f104 0215 	add.w	r2, r4, #21
 80081b0:	4290      	cmp	r0, r2
 80081b2:	bf38      	it	cc
 80081b4:	2304      	movcc	r3, #4
 80081b6:	f841 c003 	str.w	ip, [r1, r3]
 80081ba:	f1bc 0f00 	cmp.w	ip, #0
 80081be:	d001      	beq.n	80081c4 <__lshift+0xac>
 80081c0:	f108 0602 	add.w	r6, r8, #2
 80081c4:	3e01      	subs	r6, #1
 80081c6:	4638      	mov	r0, r7
 80081c8:	612e      	str	r6, [r5, #16]
 80081ca:	4621      	mov	r1, r4
 80081cc:	f7ff fe05 	bl	8007dda <_Bfree>
 80081d0:	4628      	mov	r0, r5
 80081d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80081d6:	f842 0f04 	str.w	r0, [r2, #4]!
 80081da:	3301      	adds	r3, #1
 80081dc:	e7c1      	b.n	8008162 <__lshift+0x4a>
 80081de:	3904      	subs	r1, #4
 80081e0:	f853 2b04 	ldr.w	r2, [r3], #4
 80081e4:	f841 2f04 	str.w	r2, [r1, #4]!
 80081e8:	4298      	cmp	r0, r3
 80081ea:	d8f9      	bhi.n	80081e0 <__lshift+0xc8>
 80081ec:	e7ea      	b.n	80081c4 <__lshift+0xac>
 80081ee:	bf00      	nop
 80081f0:	0800e375 	.word	0x0800e375
 80081f4:	0800e3e1 	.word	0x0800e3e1

080081f8 <__mcmp>:
 80081f8:	b530      	push	{r4, r5, lr}
 80081fa:	6902      	ldr	r2, [r0, #16]
 80081fc:	690c      	ldr	r4, [r1, #16]
 80081fe:	1b12      	subs	r2, r2, r4
 8008200:	d10e      	bne.n	8008220 <__mcmp+0x28>
 8008202:	f100 0314 	add.w	r3, r0, #20
 8008206:	3114      	adds	r1, #20
 8008208:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800820c:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8008210:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8008214:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8008218:	42a5      	cmp	r5, r4
 800821a:	d003      	beq.n	8008224 <__mcmp+0x2c>
 800821c:	d305      	bcc.n	800822a <__mcmp+0x32>
 800821e:	2201      	movs	r2, #1
 8008220:	4610      	mov	r0, r2
 8008222:	bd30      	pop	{r4, r5, pc}
 8008224:	4283      	cmp	r3, r0
 8008226:	d3f3      	bcc.n	8008210 <__mcmp+0x18>
 8008228:	e7fa      	b.n	8008220 <__mcmp+0x28>
 800822a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800822e:	e7f7      	b.n	8008220 <__mcmp+0x28>

08008230 <__mdiff>:
 8008230:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008234:	460c      	mov	r4, r1
 8008236:	4606      	mov	r6, r0
 8008238:	4611      	mov	r1, r2
 800823a:	4620      	mov	r0, r4
 800823c:	4690      	mov	r8, r2
 800823e:	f7ff ffdb 	bl	80081f8 <__mcmp>
 8008242:	1e05      	subs	r5, r0, #0
 8008244:	d110      	bne.n	8008268 <__mdiff+0x38>
 8008246:	4629      	mov	r1, r5
 8008248:	4630      	mov	r0, r6
 800824a:	f7ff fda1 	bl	8007d90 <_Balloc>
 800824e:	b930      	cbnz	r0, 800825e <__mdiff+0x2e>
 8008250:	4b3a      	ldr	r3, [pc, #232]	; (800833c <__mdiff+0x10c>)
 8008252:	4602      	mov	r2, r0
 8008254:	f240 2132 	movw	r1, #562	; 0x232
 8008258:	4839      	ldr	r0, [pc, #228]	; (8008340 <__mdiff+0x110>)
 800825a:	f000 fa85 	bl	8008768 <__assert_func>
 800825e:	2301      	movs	r3, #1
 8008260:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8008264:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008268:	bfa4      	itt	ge
 800826a:	4643      	movge	r3, r8
 800826c:	46a0      	movge	r8, r4
 800826e:	4630      	mov	r0, r6
 8008270:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8008274:	bfa6      	itte	ge
 8008276:	461c      	movge	r4, r3
 8008278:	2500      	movge	r5, #0
 800827a:	2501      	movlt	r5, #1
 800827c:	f7ff fd88 	bl	8007d90 <_Balloc>
 8008280:	b920      	cbnz	r0, 800828c <__mdiff+0x5c>
 8008282:	4b2e      	ldr	r3, [pc, #184]	; (800833c <__mdiff+0x10c>)
 8008284:	4602      	mov	r2, r0
 8008286:	f44f 7110 	mov.w	r1, #576	; 0x240
 800828a:	e7e5      	b.n	8008258 <__mdiff+0x28>
 800828c:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8008290:	6926      	ldr	r6, [r4, #16]
 8008292:	60c5      	str	r5, [r0, #12]
 8008294:	f104 0914 	add.w	r9, r4, #20
 8008298:	f108 0514 	add.w	r5, r8, #20
 800829c:	f100 0e14 	add.w	lr, r0, #20
 80082a0:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 80082a4:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 80082a8:	f108 0210 	add.w	r2, r8, #16
 80082ac:	46f2      	mov	sl, lr
 80082ae:	2100      	movs	r1, #0
 80082b0:	f859 3b04 	ldr.w	r3, [r9], #4
 80082b4:	f852 bf04 	ldr.w	fp, [r2, #4]!
 80082b8:	fa1f f883 	uxth.w	r8, r3
 80082bc:	fa11 f18b 	uxtah	r1, r1, fp
 80082c0:	0c1b      	lsrs	r3, r3, #16
 80082c2:	eba1 0808 	sub.w	r8, r1, r8
 80082c6:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80082ca:	eb03 4328 	add.w	r3, r3, r8, asr #16
 80082ce:	fa1f f888 	uxth.w	r8, r8
 80082d2:	1419      	asrs	r1, r3, #16
 80082d4:	454e      	cmp	r6, r9
 80082d6:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 80082da:	f84a 3b04 	str.w	r3, [sl], #4
 80082de:	d8e7      	bhi.n	80082b0 <__mdiff+0x80>
 80082e0:	1b33      	subs	r3, r6, r4
 80082e2:	3b15      	subs	r3, #21
 80082e4:	f023 0303 	bic.w	r3, r3, #3
 80082e8:	3304      	adds	r3, #4
 80082ea:	3415      	adds	r4, #21
 80082ec:	42a6      	cmp	r6, r4
 80082ee:	bf38      	it	cc
 80082f0:	2304      	movcc	r3, #4
 80082f2:	441d      	add	r5, r3
 80082f4:	4473      	add	r3, lr
 80082f6:	469e      	mov	lr, r3
 80082f8:	462e      	mov	r6, r5
 80082fa:	4566      	cmp	r6, ip
 80082fc:	d30e      	bcc.n	800831c <__mdiff+0xec>
 80082fe:	f10c 0203 	add.w	r2, ip, #3
 8008302:	1b52      	subs	r2, r2, r5
 8008304:	f022 0203 	bic.w	r2, r2, #3
 8008308:	3d03      	subs	r5, #3
 800830a:	45ac      	cmp	ip, r5
 800830c:	bf38      	it	cc
 800830e:	2200      	movcc	r2, #0
 8008310:	441a      	add	r2, r3
 8008312:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8008316:	b17b      	cbz	r3, 8008338 <__mdiff+0x108>
 8008318:	6107      	str	r7, [r0, #16]
 800831a:	e7a3      	b.n	8008264 <__mdiff+0x34>
 800831c:	f856 8b04 	ldr.w	r8, [r6], #4
 8008320:	fa11 f288 	uxtah	r2, r1, r8
 8008324:	1414      	asrs	r4, r2, #16
 8008326:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800832a:	b292      	uxth	r2, r2
 800832c:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8008330:	f84e 2b04 	str.w	r2, [lr], #4
 8008334:	1421      	asrs	r1, r4, #16
 8008336:	e7e0      	b.n	80082fa <__mdiff+0xca>
 8008338:	3f01      	subs	r7, #1
 800833a:	e7ea      	b.n	8008312 <__mdiff+0xe2>
 800833c:	0800e375 	.word	0x0800e375
 8008340:	0800e3e1 	.word	0x0800e3e1

08008344 <__d2b>:
 8008344:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008348:	4689      	mov	r9, r1
 800834a:	2101      	movs	r1, #1
 800834c:	ec57 6b10 	vmov	r6, r7, d0
 8008350:	4690      	mov	r8, r2
 8008352:	f7ff fd1d 	bl	8007d90 <_Balloc>
 8008356:	4604      	mov	r4, r0
 8008358:	b930      	cbnz	r0, 8008368 <__d2b+0x24>
 800835a:	4602      	mov	r2, r0
 800835c:	4b25      	ldr	r3, [pc, #148]	; (80083f4 <__d2b+0xb0>)
 800835e:	4826      	ldr	r0, [pc, #152]	; (80083f8 <__d2b+0xb4>)
 8008360:	f240 310a 	movw	r1, #778	; 0x30a
 8008364:	f000 fa00 	bl	8008768 <__assert_func>
 8008368:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800836c:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8008370:	bb35      	cbnz	r5, 80083c0 <__d2b+0x7c>
 8008372:	2e00      	cmp	r6, #0
 8008374:	9301      	str	r3, [sp, #4]
 8008376:	d028      	beq.n	80083ca <__d2b+0x86>
 8008378:	4668      	mov	r0, sp
 800837a:	9600      	str	r6, [sp, #0]
 800837c:	f7ff fd9c 	bl	8007eb8 <__lo0bits>
 8008380:	9900      	ldr	r1, [sp, #0]
 8008382:	b300      	cbz	r0, 80083c6 <__d2b+0x82>
 8008384:	9a01      	ldr	r2, [sp, #4]
 8008386:	f1c0 0320 	rsb	r3, r0, #32
 800838a:	fa02 f303 	lsl.w	r3, r2, r3
 800838e:	430b      	orrs	r3, r1
 8008390:	40c2      	lsrs	r2, r0
 8008392:	6163      	str	r3, [r4, #20]
 8008394:	9201      	str	r2, [sp, #4]
 8008396:	9b01      	ldr	r3, [sp, #4]
 8008398:	61a3      	str	r3, [r4, #24]
 800839a:	2b00      	cmp	r3, #0
 800839c:	bf14      	ite	ne
 800839e:	2202      	movne	r2, #2
 80083a0:	2201      	moveq	r2, #1
 80083a2:	6122      	str	r2, [r4, #16]
 80083a4:	b1d5      	cbz	r5, 80083dc <__d2b+0x98>
 80083a6:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80083aa:	4405      	add	r5, r0
 80083ac:	f8c9 5000 	str.w	r5, [r9]
 80083b0:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80083b4:	f8c8 0000 	str.w	r0, [r8]
 80083b8:	4620      	mov	r0, r4
 80083ba:	b003      	add	sp, #12
 80083bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80083c0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80083c4:	e7d5      	b.n	8008372 <__d2b+0x2e>
 80083c6:	6161      	str	r1, [r4, #20]
 80083c8:	e7e5      	b.n	8008396 <__d2b+0x52>
 80083ca:	a801      	add	r0, sp, #4
 80083cc:	f7ff fd74 	bl	8007eb8 <__lo0bits>
 80083d0:	9b01      	ldr	r3, [sp, #4]
 80083d2:	6163      	str	r3, [r4, #20]
 80083d4:	2201      	movs	r2, #1
 80083d6:	6122      	str	r2, [r4, #16]
 80083d8:	3020      	adds	r0, #32
 80083da:	e7e3      	b.n	80083a4 <__d2b+0x60>
 80083dc:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80083e0:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80083e4:	f8c9 0000 	str.w	r0, [r9]
 80083e8:	6918      	ldr	r0, [r3, #16]
 80083ea:	f7ff fd45 	bl	8007e78 <__hi0bits>
 80083ee:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80083f2:	e7df      	b.n	80083b4 <__d2b+0x70>
 80083f4:	0800e375 	.word	0x0800e375
 80083f8:	0800e3e1 	.word	0x0800e3e1

080083fc <frexp>:
 80083fc:	b570      	push	{r4, r5, r6, lr}
 80083fe:	2100      	movs	r1, #0
 8008400:	ec55 4b10 	vmov	r4, r5, d0
 8008404:	6001      	str	r1, [r0, #0]
 8008406:	4916      	ldr	r1, [pc, #88]	; (8008460 <frexp+0x64>)
 8008408:	f025 4200 	bic.w	r2, r5, #2147483648	; 0x80000000
 800840c:	428a      	cmp	r2, r1
 800840e:	4606      	mov	r6, r0
 8008410:	462b      	mov	r3, r5
 8008412:	dc22      	bgt.n	800845a <frexp+0x5e>
 8008414:	ee10 1a10 	vmov	r1, s0
 8008418:	4311      	orrs	r1, r2
 800841a:	d01e      	beq.n	800845a <frexp+0x5e>
 800841c:	4911      	ldr	r1, [pc, #68]	; (8008464 <frexp+0x68>)
 800841e:	4029      	ands	r1, r5
 8008420:	b969      	cbnz	r1, 800843e <frexp+0x42>
 8008422:	4b11      	ldr	r3, [pc, #68]	; (8008468 <frexp+0x6c>)
 8008424:	2200      	movs	r2, #0
 8008426:	ee10 0a10 	vmov	r0, s0
 800842a:	4629      	mov	r1, r5
 800842c:	f7f8 f8e4 	bl	80005f8 <__aeabi_dmul>
 8008430:	460b      	mov	r3, r1
 8008432:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 8008436:	f06f 0135 	mvn.w	r1, #53	; 0x35
 800843a:	4604      	mov	r4, r0
 800843c:	6031      	str	r1, [r6, #0]
 800843e:	6831      	ldr	r1, [r6, #0]
 8008440:	1512      	asrs	r2, r2, #20
 8008442:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8008446:	f2a2 32fe 	subw	r2, r2, #1022	; 0x3fe
 800844a:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800844e:	440a      	add	r2, r1
 8008450:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
 8008454:	6032      	str	r2, [r6, #0]
 8008456:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
 800845a:	ec45 4b10 	vmov	d0, r4, r5
 800845e:	bd70      	pop	{r4, r5, r6, pc}
 8008460:	7fefffff 	.word	0x7fefffff
 8008464:	7ff00000 	.word	0x7ff00000
 8008468:	43500000 	.word	0x43500000

0800846c <__sread>:
 800846c:	b510      	push	{r4, lr}
 800846e:	460c      	mov	r4, r1
 8008470:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008474:	f000 fb90 	bl	8008b98 <_read_r>
 8008478:	2800      	cmp	r0, #0
 800847a:	bfab      	itete	ge
 800847c:	6d23      	ldrge	r3, [r4, #80]	; 0x50
 800847e:	89a3      	ldrhlt	r3, [r4, #12]
 8008480:	181b      	addge	r3, r3, r0
 8008482:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8008486:	bfac      	ite	ge
 8008488:	6523      	strge	r3, [r4, #80]	; 0x50
 800848a:	81a3      	strhlt	r3, [r4, #12]
 800848c:	bd10      	pop	{r4, pc}

0800848e <__swrite>:
 800848e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008492:	461f      	mov	r7, r3
 8008494:	898b      	ldrh	r3, [r1, #12]
 8008496:	05db      	lsls	r3, r3, #23
 8008498:	4605      	mov	r5, r0
 800849a:	460c      	mov	r4, r1
 800849c:	4616      	mov	r6, r2
 800849e:	d505      	bpl.n	80084ac <__swrite+0x1e>
 80084a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80084a4:	2302      	movs	r3, #2
 80084a6:	2200      	movs	r2, #0
 80084a8:	f000 fae6 	bl	8008a78 <_lseek_r>
 80084ac:	89a3      	ldrh	r3, [r4, #12]
 80084ae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80084b2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80084b6:	81a3      	strh	r3, [r4, #12]
 80084b8:	4632      	mov	r2, r6
 80084ba:	463b      	mov	r3, r7
 80084bc:	4628      	mov	r0, r5
 80084be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80084c2:	f000 b8a5 	b.w	8008610 <_write_r>

080084c6 <__sseek>:
 80084c6:	b510      	push	{r4, lr}
 80084c8:	460c      	mov	r4, r1
 80084ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80084ce:	f000 fad3 	bl	8008a78 <_lseek_r>
 80084d2:	1c43      	adds	r3, r0, #1
 80084d4:	89a3      	ldrh	r3, [r4, #12]
 80084d6:	bf15      	itete	ne
 80084d8:	6520      	strne	r0, [r4, #80]	; 0x50
 80084da:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80084de:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80084e2:	81a3      	strheq	r3, [r4, #12]
 80084e4:	bf18      	it	ne
 80084e6:	81a3      	strhne	r3, [r4, #12]
 80084e8:	bd10      	pop	{r4, pc}

080084ea <__sclose>:
 80084ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80084ee:	f000 b98f 	b.w	8008810 <_close_r>

080084f2 <strncpy>:
 80084f2:	b510      	push	{r4, lr}
 80084f4:	3901      	subs	r1, #1
 80084f6:	4603      	mov	r3, r0
 80084f8:	b132      	cbz	r2, 8008508 <strncpy+0x16>
 80084fa:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80084fe:	f803 4b01 	strb.w	r4, [r3], #1
 8008502:	3a01      	subs	r2, #1
 8008504:	2c00      	cmp	r4, #0
 8008506:	d1f7      	bne.n	80084f8 <strncpy+0x6>
 8008508:	441a      	add	r2, r3
 800850a:	2100      	movs	r1, #0
 800850c:	4293      	cmp	r3, r2
 800850e:	d100      	bne.n	8008512 <strncpy+0x20>
 8008510:	bd10      	pop	{r4, pc}
 8008512:	f803 1b01 	strb.w	r1, [r3], #1
 8008516:	e7f9      	b.n	800850c <strncpy+0x1a>

08008518 <__ssprint_r>:
 8008518:	6893      	ldr	r3, [r2, #8]
 800851a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800851e:	4680      	mov	r8, r0
 8008520:	460c      	mov	r4, r1
 8008522:	4617      	mov	r7, r2
 8008524:	2b00      	cmp	r3, #0
 8008526:	d061      	beq.n	80085ec <__ssprint_r+0xd4>
 8008528:	2300      	movs	r3, #0
 800852a:	f8d2 a000 	ldr.w	sl, [r2]
 800852e:	9301      	str	r3, [sp, #4]
 8008530:	469b      	mov	fp, r3
 8008532:	f1bb 0f00 	cmp.w	fp, #0
 8008536:	d02b      	beq.n	8008590 <__ssprint_r+0x78>
 8008538:	68a6      	ldr	r6, [r4, #8]
 800853a:	455e      	cmp	r6, fp
 800853c:	d844      	bhi.n	80085c8 <__ssprint_r+0xb0>
 800853e:	89a2      	ldrh	r2, [r4, #12]
 8008540:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8008544:	d03e      	beq.n	80085c4 <__ssprint_r+0xac>
 8008546:	6820      	ldr	r0, [r4, #0]
 8008548:	6921      	ldr	r1, [r4, #16]
 800854a:	6965      	ldr	r5, [r4, #20]
 800854c:	eba0 0901 	sub.w	r9, r0, r1
 8008550:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8008554:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8008558:	f109 0001 	add.w	r0, r9, #1
 800855c:	106d      	asrs	r5, r5, #1
 800855e:	4458      	add	r0, fp
 8008560:	4285      	cmp	r5, r0
 8008562:	bf38      	it	cc
 8008564:	4605      	movcc	r5, r0
 8008566:	0553      	lsls	r3, r2, #21
 8008568:	d545      	bpl.n	80085f6 <__ssprint_r+0xde>
 800856a:	4629      	mov	r1, r5
 800856c:	4640      	mov	r0, r8
 800856e:	f7fc fc05 	bl	8004d7c <_malloc_r>
 8008572:	4606      	mov	r6, r0
 8008574:	b9a0      	cbnz	r0, 80085a0 <__ssprint_r+0x88>
 8008576:	230c      	movs	r3, #12
 8008578:	f8c8 3000 	str.w	r3, [r8]
 800857c:	89a3      	ldrh	r3, [r4, #12]
 800857e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008582:	81a3      	strh	r3, [r4, #12]
 8008584:	2300      	movs	r3, #0
 8008586:	e9c7 3301 	strd	r3, r3, [r7, #4]
 800858a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800858e:	e02f      	b.n	80085f0 <__ssprint_r+0xd8>
 8008590:	f8da 3000 	ldr.w	r3, [sl]
 8008594:	f8da b004 	ldr.w	fp, [sl, #4]
 8008598:	9301      	str	r3, [sp, #4]
 800859a:	f10a 0a08 	add.w	sl, sl, #8
 800859e:	e7c8      	b.n	8008532 <__ssprint_r+0x1a>
 80085a0:	464a      	mov	r2, r9
 80085a2:	6921      	ldr	r1, [r4, #16]
 80085a4:	f7fc fe26 	bl	80051f4 <memcpy>
 80085a8:	89a2      	ldrh	r2, [r4, #12]
 80085aa:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 80085ae:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80085b2:	81a2      	strh	r2, [r4, #12]
 80085b4:	6126      	str	r6, [r4, #16]
 80085b6:	6165      	str	r5, [r4, #20]
 80085b8:	444e      	add	r6, r9
 80085ba:	eba5 0509 	sub.w	r5, r5, r9
 80085be:	6026      	str	r6, [r4, #0]
 80085c0:	60a5      	str	r5, [r4, #8]
 80085c2:	465e      	mov	r6, fp
 80085c4:	455e      	cmp	r6, fp
 80085c6:	d900      	bls.n	80085ca <__ssprint_r+0xb2>
 80085c8:	465e      	mov	r6, fp
 80085ca:	4632      	mov	r2, r6
 80085cc:	9901      	ldr	r1, [sp, #4]
 80085ce:	6820      	ldr	r0, [r4, #0]
 80085d0:	f7ff fbc4 	bl	8007d5c <memmove>
 80085d4:	68a2      	ldr	r2, [r4, #8]
 80085d6:	1b92      	subs	r2, r2, r6
 80085d8:	60a2      	str	r2, [r4, #8]
 80085da:	6822      	ldr	r2, [r4, #0]
 80085dc:	4432      	add	r2, r6
 80085de:	6022      	str	r2, [r4, #0]
 80085e0:	68ba      	ldr	r2, [r7, #8]
 80085e2:	eba2 030b 	sub.w	r3, r2, fp
 80085e6:	60bb      	str	r3, [r7, #8]
 80085e8:	2b00      	cmp	r3, #0
 80085ea:	d1d1      	bne.n	8008590 <__ssprint_r+0x78>
 80085ec:	2000      	movs	r0, #0
 80085ee:	6078      	str	r0, [r7, #4]
 80085f0:	b003      	add	sp, #12
 80085f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80085f6:	462a      	mov	r2, r5
 80085f8:	4640      	mov	r0, r8
 80085fa:	f7fc fe6b 	bl	80052d4 <_realloc_r>
 80085fe:	4606      	mov	r6, r0
 8008600:	2800      	cmp	r0, #0
 8008602:	d1d7      	bne.n	80085b4 <__ssprint_r+0x9c>
 8008604:	6921      	ldr	r1, [r4, #16]
 8008606:	4640      	mov	r0, r8
 8008608:	f7ff f976 	bl	80078f8 <_free_r>
 800860c:	e7b3      	b.n	8008576 <__ssprint_r+0x5e>
	...

08008610 <_write_r>:
 8008610:	b538      	push	{r3, r4, r5, lr}
 8008612:	4d07      	ldr	r5, [pc, #28]	; (8008630 <_write_r+0x20>)
 8008614:	4604      	mov	r4, r0
 8008616:	4608      	mov	r0, r1
 8008618:	4611      	mov	r1, r2
 800861a:	2200      	movs	r2, #0
 800861c:	602a      	str	r2, [r5, #0]
 800861e:	461a      	mov	r2, r3
 8008620:	f001 f954 	bl	80098cc <_write>
 8008624:	1c43      	adds	r3, r0, #1
 8008626:	d102      	bne.n	800862e <_write_r+0x1e>
 8008628:	682b      	ldr	r3, [r5, #0]
 800862a:	b103      	cbz	r3, 800862e <_write_r+0x1e>
 800862c:	6023      	str	r3, [r4, #0]
 800862e:	bd38      	pop	{r3, r4, r5, pc}
 8008630:	2000154c 	.word	0x2000154c

08008634 <__swsetup_r>:
 8008634:	b538      	push	{r3, r4, r5, lr}
 8008636:	4b2a      	ldr	r3, [pc, #168]	; (80086e0 <__swsetup_r+0xac>)
 8008638:	4605      	mov	r5, r0
 800863a:	6818      	ldr	r0, [r3, #0]
 800863c:	460c      	mov	r4, r1
 800863e:	b118      	cbz	r0, 8008648 <__swsetup_r+0x14>
 8008640:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8008642:	b90b      	cbnz	r3, 8008648 <__swsetup_r+0x14>
 8008644:	f7ff f8c8 	bl	80077d8 <__sinit>
 8008648:	89a3      	ldrh	r3, [r4, #12]
 800864a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800864e:	0718      	lsls	r0, r3, #28
 8008650:	d422      	bmi.n	8008698 <__swsetup_r+0x64>
 8008652:	06d9      	lsls	r1, r3, #27
 8008654:	d407      	bmi.n	8008666 <__swsetup_r+0x32>
 8008656:	2309      	movs	r3, #9
 8008658:	602b      	str	r3, [r5, #0]
 800865a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800865e:	81a3      	strh	r3, [r4, #12]
 8008660:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008664:	e034      	b.n	80086d0 <__swsetup_r+0x9c>
 8008666:	0758      	lsls	r0, r3, #29
 8008668:	d512      	bpl.n	8008690 <__swsetup_r+0x5c>
 800866a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800866c:	b141      	cbz	r1, 8008680 <__swsetup_r+0x4c>
 800866e:	f104 0340 	add.w	r3, r4, #64	; 0x40
 8008672:	4299      	cmp	r1, r3
 8008674:	d002      	beq.n	800867c <__swsetup_r+0x48>
 8008676:	4628      	mov	r0, r5
 8008678:	f7ff f93e 	bl	80078f8 <_free_r>
 800867c:	2300      	movs	r3, #0
 800867e:	6323      	str	r3, [r4, #48]	; 0x30
 8008680:	89a3      	ldrh	r3, [r4, #12]
 8008682:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8008686:	81a3      	strh	r3, [r4, #12]
 8008688:	2300      	movs	r3, #0
 800868a:	6063      	str	r3, [r4, #4]
 800868c:	6923      	ldr	r3, [r4, #16]
 800868e:	6023      	str	r3, [r4, #0]
 8008690:	89a3      	ldrh	r3, [r4, #12]
 8008692:	f043 0308 	orr.w	r3, r3, #8
 8008696:	81a3      	strh	r3, [r4, #12]
 8008698:	6923      	ldr	r3, [r4, #16]
 800869a:	b94b      	cbnz	r3, 80086b0 <__swsetup_r+0x7c>
 800869c:	89a3      	ldrh	r3, [r4, #12]
 800869e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80086a2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80086a6:	d003      	beq.n	80086b0 <__swsetup_r+0x7c>
 80086a8:	4621      	mov	r1, r4
 80086aa:	4628      	mov	r0, r5
 80086ac:	f000 fa22 	bl	8008af4 <__smakebuf_r>
 80086b0:	89a0      	ldrh	r0, [r4, #12]
 80086b2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80086b6:	f010 0301 	ands.w	r3, r0, #1
 80086ba:	d00a      	beq.n	80086d2 <__swsetup_r+0x9e>
 80086bc:	2300      	movs	r3, #0
 80086be:	60a3      	str	r3, [r4, #8]
 80086c0:	6963      	ldr	r3, [r4, #20]
 80086c2:	425b      	negs	r3, r3
 80086c4:	61a3      	str	r3, [r4, #24]
 80086c6:	6923      	ldr	r3, [r4, #16]
 80086c8:	b943      	cbnz	r3, 80086dc <__swsetup_r+0xa8>
 80086ca:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80086ce:	d1c4      	bne.n	800865a <__swsetup_r+0x26>
 80086d0:	bd38      	pop	{r3, r4, r5, pc}
 80086d2:	0781      	lsls	r1, r0, #30
 80086d4:	bf58      	it	pl
 80086d6:	6963      	ldrpl	r3, [r4, #20]
 80086d8:	60a3      	str	r3, [r4, #8]
 80086da:	e7f4      	b.n	80086c6 <__swsetup_r+0x92>
 80086dc:	2000      	movs	r0, #0
 80086de:	e7f7      	b.n	80086d0 <__swsetup_r+0x9c>
 80086e0:	20000738 	.word	0x20000738

080086e4 <__register_exitproc>:
 80086e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80086e8:	f8df a078 	ldr.w	sl, [pc, #120]	; 8008764 <__register_exitproc+0x80>
 80086ec:	4606      	mov	r6, r0
 80086ee:	f8da 0000 	ldr.w	r0, [sl]
 80086f2:	4698      	mov	r8, r3
 80086f4:	460f      	mov	r7, r1
 80086f6:	4691      	mov	r9, r2
 80086f8:	f7ff fb2e 	bl	8007d58 <__retarget_lock_acquire_recursive>
 80086fc:	4b18      	ldr	r3, [pc, #96]	; (8008760 <__register_exitproc+0x7c>)
 80086fe:	681b      	ldr	r3, [r3, #0]
 8008700:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
 8008704:	b91c      	cbnz	r4, 800870e <__register_exitproc+0x2a>
 8008706:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 800870a:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
 800870e:	6865      	ldr	r5, [r4, #4]
 8008710:	f8da 0000 	ldr.w	r0, [sl]
 8008714:	2d1f      	cmp	r5, #31
 8008716:	dd05      	ble.n	8008724 <__register_exitproc+0x40>
 8008718:	f7ff fb1f 	bl	8007d5a <__retarget_lock_release_recursive>
 800871c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008720:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008724:	b19e      	cbz	r6, 800874e <__register_exitproc+0x6a>
 8008726:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 800872a:	2201      	movs	r2, #1
 800872c:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 8008730:	f8d4 3188 	ldr.w	r3, [r4, #392]	; 0x188
 8008734:	40aa      	lsls	r2, r5
 8008736:	4313      	orrs	r3, r2
 8008738:	f8c4 3188 	str.w	r3, [r4, #392]	; 0x188
 800873c:	2e02      	cmp	r6, #2
 800873e:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 8008742:	bf02      	ittt	eq
 8008744:	f8d4 318c 	ldreq.w	r3, [r4, #396]	; 0x18c
 8008748:	4313      	orreq	r3, r2
 800874a:	f8c4 318c 	streq.w	r3, [r4, #396]	; 0x18c
 800874e:	1c6b      	adds	r3, r5, #1
 8008750:	3502      	adds	r5, #2
 8008752:	6063      	str	r3, [r4, #4]
 8008754:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 8008758:	f7ff faff 	bl	8007d5a <__retarget_lock_release_recursive>
 800875c:	2000      	movs	r0, #0
 800875e:	e7df      	b.n	8008720 <__register_exitproc+0x3c>
 8008760:	0800e310 	.word	0x0800e310
 8008764:	20000f78 	.word	0x20000f78

08008768 <__assert_func>:
 8008768:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800876a:	4614      	mov	r4, r2
 800876c:	461a      	mov	r2, r3
 800876e:	4b09      	ldr	r3, [pc, #36]	; (8008794 <__assert_func+0x2c>)
 8008770:	681b      	ldr	r3, [r3, #0]
 8008772:	4605      	mov	r5, r0
 8008774:	68d8      	ldr	r0, [r3, #12]
 8008776:	b14c      	cbz	r4, 800878c <__assert_func+0x24>
 8008778:	4b07      	ldr	r3, [pc, #28]	; (8008798 <__assert_func+0x30>)
 800877a:	9100      	str	r1, [sp, #0]
 800877c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8008780:	4906      	ldr	r1, [pc, #24]	; (800879c <__assert_func+0x34>)
 8008782:	462b      	mov	r3, r5
 8008784:	f000 f960 	bl	8008a48 <fiprintf>
 8008788:	f000 ff2d 	bl	80095e6 <abort>
 800878c:	4b04      	ldr	r3, [pc, #16]	; (80087a0 <__assert_func+0x38>)
 800878e:	461c      	mov	r4, r3
 8008790:	e7f3      	b.n	800877a <__assert_func+0x12>
 8008792:	bf00      	nop
 8008794:	20000738 	.word	0x20000738
 8008798:	0800e53c 	.word	0x0800e53c
 800879c:	0800e549 	.word	0x0800e549
 80087a0:	0800e577 	.word	0x0800e577

080087a4 <_calloc_r>:
 80087a4:	b538      	push	{r3, r4, r5, lr}
 80087a6:	fba1 1502 	umull	r1, r5, r1, r2
 80087aa:	b92d      	cbnz	r5, 80087b8 <_calloc_r+0x14>
 80087ac:	f7fc fae6 	bl	8004d7c <_malloc_r>
 80087b0:	4604      	mov	r4, r0
 80087b2:	b938      	cbnz	r0, 80087c4 <_calloc_r+0x20>
 80087b4:	4620      	mov	r0, r4
 80087b6:	bd38      	pop	{r3, r4, r5, pc}
 80087b8:	f7fc fab6 	bl	8004d28 <__errno>
 80087bc:	230c      	movs	r3, #12
 80087be:	6003      	str	r3, [r0, #0]
 80087c0:	2400      	movs	r4, #0
 80087c2:	e7f7      	b.n	80087b4 <_calloc_r+0x10>
 80087c4:	f850 2c04 	ldr.w	r2, [r0, #-4]
 80087c8:	f022 0203 	bic.w	r2, r2, #3
 80087cc:	3a04      	subs	r2, #4
 80087ce:	2a24      	cmp	r2, #36	; 0x24
 80087d0:	d819      	bhi.n	8008806 <_calloc_r+0x62>
 80087d2:	2a13      	cmp	r2, #19
 80087d4:	d915      	bls.n	8008802 <_calloc_r+0x5e>
 80087d6:	2a1b      	cmp	r2, #27
 80087d8:	e9c0 5500 	strd	r5, r5, [r0]
 80087dc:	d806      	bhi.n	80087ec <_calloc_r+0x48>
 80087de:	f100 0308 	add.w	r3, r0, #8
 80087e2:	2200      	movs	r2, #0
 80087e4:	e9c3 2200 	strd	r2, r2, [r3]
 80087e8:	609a      	str	r2, [r3, #8]
 80087ea:	e7e3      	b.n	80087b4 <_calloc_r+0x10>
 80087ec:	2a24      	cmp	r2, #36	; 0x24
 80087ee:	e9c0 5502 	strd	r5, r5, [r0, #8]
 80087f2:	bf11      	iteee	ne
 80087f4:	f100 0310 	addne.w	r3, r0, #16
 80087f8:	6105      	streq	r5, [r0, #16]
 80087fa:	f100 0318 	addeq.w	r3, r0, #24
 80087fe:	6145      	streq	r5, [r0, #20]
 8008800:	e7ef      	b.n	80087e2 <_calloc_r+0x3e>
 8008802:	4603      	mov	r3, r0
 8008804:	e7ed      	b.n	80087e2 <_calloc_r+0x3e>
 8008806:	4629      	mov	r1, r5
 8008808:	f7fc fd02 	bl	8005210 <memset>
 800880c:	e7d2      	b.n	80087b4 <_calloc_r+0x10>
	...

08008810 <_close_r>:
 8008810:	b538      	push	{r3, r4, r5, lr}
 8008812:	4d06      	ldr	r5, [pc, #24]	; (800882c <_close_r+0x1c>)
 8008814:	2300      	movs	r3, #0
 8008816:	4604      	mov	r4, r0
 8008818:	4608      	mov	r0, r1
 800881a:	602b      	str	r3, [r5, #0]
 800881c:	f001 f81e 	bl	800985c <_close>
 8008820:	1c43      	adds	r3, r0, #1
 8008822:	d102      	bne.n	800882a <_close_r+0x1a>
 8008824:	682b      	ldr	r3, [r5, #0]
 8008826:	b103      	cbz	r3, 800882a <_close_r+0x1a>
 8008828:	6023      	str	r3, [r4, #0]
 800882a:	bd38      	pop	{r3, r4, r5, pc}
 800882c:	2000154c 	.word	0x2000154c

08008830 <_fclose_r>:
 8008830:	b570      	push	{r4, r5, r6, lr}
 8008832:	4606      	mov	r6, r0
 8008834:	460c      	mov	r4, r1
 8008836:	b911      	cbnz	r1, 800883e <_fclose_r+0xe>
 8008838:	2500      	movs	r5, #0
 800883a:	4628      	mov	r0, r5
 800883c:	bd70      	pop	{r4, r5, r6, pc}
 800883e:	b118      	cbz	r0, 8008848 <_fclose_r+0x18>
 8008840:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8008842:	b90b      	cbnz	r3, 8008848 <_fclose_r+0x18>
 8008844:	f7fe ffc8 	bl	80077d8 <__sinit>
 8008848:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800884a:	07d8      	lsls	r0, r3, #31
 800884c:	d405      	bmi.n	800885a <_fclose_r+0x2a>
 800884e:	89a3      	ldrh	r3, [r4, #12]
 8008850:	0599      	lsls	r1, r3, #22
 8008852:	d402      	bmi.n	800885a <_fclose_r+0x2a>
 8008854:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008856:	f7ff fa7f 	bl	8007d58 <__retarget_lock_acquire_recursive>
 800885a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800885e:	b93b      	cbnz	r3, 8008870 <_fclose_r+0x40>
 8008860:	6e65      	ldr	r5, [r4, #100]	; 0x64
 8008862:	f015 0501 	ands.w	r5, r5, #1
 8008866:	d1e7      	bne.n	8008838 <_fclose_r+0x8>
 8008868:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800886a:	f7ff fa76 	bl	8007d5a <__retarget_lock_release_recursive>
 800886e:	e7e4      	b.n	800883a <_fclose_r+0xa>
 8008870:	4621      	mov	r1, r4
 8008872:	4630      	mov	r0, r6
 8008874:	f000 f834 	bl	80088e0 <__sflush_r>
 8008878:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800887a:	4605      	mov	r5, r0
 800887c:	b133      	cbz	r3, 800888c <_fclose_r+0x5c>
 800887e:	69e1      	ldr	r1, [r4, #28]
 8008880:	4630      	mov	r0, r6
 8008882:	4798      	blx	r3
 8008884:	2800      	cmp	r0, #0
 8008886:	bfb8      	it	lt
 8008888:	f04f 35ff 	movlt.w	r5, #4294967295	; 0xffffffff
 800888c:	89a3      	ldrh	r3, [r4, #12]
 800888e:	061a      	lsls	r2, r3, #24
 8008890:	d503      	bpl.n	800889a <_fclose_r+0x6a>
 8008892:	6921      	ldr	r1, [r4, #16]
 8008894:	4630      	mov	r0, r6
 8008896:	f7ff f82f 	bl	80078f8 <_free_r>
 800889a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800889c:	b141      	cbz	r1, 80088b0 <_fclose_r+0x80>
 800889e:	f104 0340 	add.w	r3, r4, #64	; 0x40
 80088a2:	4299      	cmp	r1, r3
 80088a4:	d002      	beq.n	80088ac <_fclose_r+0x7c>
 80088a6:	4630      	mov	r0, r6
 80088a8:	f7ff f826 	bl	80078f8 <_free_r>
 80088ac:	2300      	movs	r3, #0
 80088ae:	6323      	str	r3, [r4, #48]	; 0x30
 80088b0:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80088b2:	b121      	cbz	r1, 80088be <_fclose_r+0x8e>
 80088b4:	4630      	mov	r0, r6
 80088b6:	f7ff f81f 	bl	80078f8 <_free_r>
 80088ba:	2300      	movs	r3, #0
 80088bc:	6463      	str	r3, [r4, #68]	; 0x44
 80088be:	f7fe ff73 	bl	80077a8 <__sfp_lock_acquire>
 80088c2:	2300      	movs	r3, #0
 80088c4:	81a3      	strh	r3, [r4, #12]
 80088c6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80088c8:	07db      	lsls	r3, r3, #31
 80088ca:	d402      	bmi.n	80088d2 <_fclose_r+0xa2>
 80088cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80088ce:	f7ff fa44 	bl	8007d5a <__retarget_lock_release_recursive>
 80088d2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80088d4:	f7ff fa3f 	bl	8007d56 <__retarget_lock_close_recursive>
 80088d8:	f7fe ff6c 	bl	80077b4 <__sfp_lock_release>
 80088dc:	e7ad      	b.n	800883a <_fclose_r+0xa>
	...

080088e0 <__sflush_r>:
 80088e0:	898b      	ldrh	r3, [r1, #12]
 80088e2:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80088e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80088ea:	4605      	mov	r5, r0
 80088ec:	0718      	lsls	r0, r3, #28
 80088ee:	460c      	mov	r4, r1
 80088f0:	d45f      	bmi.n	80089b2 <__sflush_r+0xd2>
 80088f2:	684b      	ldr	r3, [r1, #4]
 80088f4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80088f8:	2b00      	cmp	r3, #0
 80088fa:	818a      	strh	r2, [r1, #12]
 80088fc:	dc05      	bgt.n	800890a <__sflush_r+0x2a>
 80088fe:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8008900:	2b00      	cmp	r3, #0
 8008902:	dc02      	bgt.n	800890a <__sflush_r+0x2a>
 8008904:	2000      	movs	r0, #0
 8008906:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800890a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800890c:	2e00      	cmp	r6, #0
 800890e:	d0f9      	beq.n	8008904 <__sflush_r+0x24>
 8008910:	2300      	movs	r3, #0
 8008912:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8008916:	682f      	ldr	r7, [r5, #0]
 8008918:	602b      	str	r3, [r5, #0]
 800891a:	d036      	beq.n	800898a <__sflush_r+0xaa>
 800891c:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800891e:	89a3      	ldrh	r3, [r4, #12]
 8008920:	075a      	lsls	r2, r3, #29
 8008922:	d505      	bpl.n	8008930 <__sflush_r+0x50>
 8008924:	6863      	ldr	r3, [r4, #4]
 8008926:	1ac0      	subs	r0, r0, r3
 8008928:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800892a:	b10b      	cbz	r3, 8008930 <__sflush_r+0x50>
 800892c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800892e:	1ac0      	subs	r0, r0, r3
 8008930:	2300      	movs	r3, #0
 8008932:	4602      	mov	r2, r0
 8008934:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8008936:	69e1      	ldr	r1, [r4, #28]
 8008938:	4628      	mov	r0, r5
 800893a:	47b0      	blx	r6
 800893c:	1c43      	adds	r3, r0, #1
 800893e:	89a3      	ldrh	r3, [r4, #12]
 8008940:	d106      	bne.n	8008950 <__sflush_r+0x70>
 8008942:	6829      	ldr	r1, [r5, #0]
 8008944:	291d      	cmp	r1, #29
 8008946:	d830      	bhi.n	80089aa <__sflush_r+0xca>
 8008948:	4a2b      	ldr	r2, [pc, #172]	; (80089f8 <__sflush_r+0x118>)
 800894a:	40ca      	lsrs	r2, r1
 800894c:	07d6      	lsls	r6, r2, #31
 800894e:	d52c      	bpl.n	80089aa <__sflush_r+0xca>
 8008950:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008954:	b21b      	sxth	r3, r3
 8008956:	2200      	movs	r2, #0
 8008958:	6062      	str	r2, [r4, #4]
 800895a:	04d9      	lsls	r1, r3, #19
 800895c:	6922      	ldr	r2, [r4, #16]
 800895e:	81a3      	strh	r3, [r4, #12]
 8008960:	6022      	str	r2, [r4, #0]
 8008962:	d504      	bpl.n	800896e <__sflush_r+0x8e>
 8008964:	1c42      	adds	r2, r0, #1
 8008966:	d101      	bne.n	800896c <__sflush_r+0x8c>
 8008968:	682b      	ldr	r3, [r5, #0]
 800896a:	b903      	cbnz	r3, 800896e <__sflush_r+0x8e>
 800896c:	6520      	str	r0, [r4, #80]	; 0x50
 800896e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8008970:	602f      	str	r7, [r5, #0]
 8008972:	2900      	cmp	r1, #0
 8008974:	d0c6      	beq.n	8008904 <__sflush_r+0x24>
 8008976:	f104 0340 	add.w	r3, r4, #64	; 0x40
 800897a:	4299      	cmp	r1, r3
 800897c:	d002      	beq.n	8008984 <__sflush_r+0xa4>
 800897e:	4628      	mov	r0, r5
 8008980:	f7fe ffba 	bl	80078f8 <_free_r>
 8008984:	2000      	movs	r0, #0
 8008986:	6320      	str	r0, [r4, #48]	; 0x30
 8008988:	e7bd      	b.n	8008906 <__sflush_r+0x26>
 800898a:	69e1      	ldr	r1, [r4, #28]
 800898c:	2301      	movs	r3, #1
 800898e:	4628      	mov	r0, r5
 8008990:	47b0      	blx	r6
 8008992:	1c41      	adds	r1, r0, #1
 8008994:	d1c3      	bne.n	800891e <__sflush_r+0x3e>
 8008996:	682b      	ldr	r3, [r5, #0]
 8008998:	2b00      	cmp	r3, #0
 800899a:	d0c0      	beq.n	800891e <__sflush_r+0x3e>
 800899c:	2b1d      	cmp	r3, #29
 800899e:	d001      	beq.n	80089a4 <__sflush_r+0xc4>
 80089a0:	2b16      	cmp	r3, #22
 80089a2:	d101      	bne.n	80089a8 <__sflush_r+0xc8>
 80089a4:	602f      	str	r7, [r5, #0]
 80089a6:	e7ad      	b.n	8008904 <__sflush_r+0x24>
 80089a8:	89a3      	ldrh	r3, [r4, #12]
 80089aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80089ae:	81a3      	strh	r3, [r4, #12]
 80089b0:	e7a9      	b.n	8008906 <__sflush_r+0x26>
 80089b2:	690f      	ldr	r7, [r1, #16]
 80089b4:	2f00      	cmp	r7, #0
 80089b6:	d0a5      	beq.n	8008904 <__sflush_r+0x24>
 80089b8:	079b      	lsls	r3, r3, #30
 80089ba:	680e      	ldr	r6, [r1, #0]
 80089bc:	bf08      	it	eq
 80089be:	694b      	ldreq	r3, [r1, #20]
 80089c0:	600f      	str	r7, [r1, #0]
 80089c2:	bf18      	it	ne
 80089c4:	2300      	movne	r3, #0
 80089c6:	eba6 0807 	sub.w	r8, r6, r7
 80089ca:	608b      	str	r3, [r1, #8]
 80089cc:	f1b8 0f00 	cmp.w	r8, #0
 80089d0:	dd98      	ble.n	8008904 <__sflush_r+0x24>
 80089d2:	69e1      	ldr	r1, [r4, #28]
 80089d4:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80089d6:	4643      	mov	r3, r8
 80089d8:	463a      	mov	r2, r7
 80089da:	4628      	mov	r0, r5
 80089dc:	47b0      	blx	r6
 80089de:	2800      	cmp	r0, #0
 80089e0:	dc06      	bgt.n	80089f0 <__sflush_r+0x110>
 80089e2:	89a3      	ldrh	r3, [r4, #12]
 80089e4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80089e8:	81a3      	strh	r3, [r4, #12]
 80089ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80089ee:	e78a      	b.n	8008906 <__sflush_r+0x26>
 80089f0:	4407      	add	r7, r0
 80089f2:	eba8 0800 	sub.w	r8, r8, r0
 80089f6:	e7e9      	b.n	80089cc <__sflush_r+0xec>
 80089f8:	20400001 	.word	0x20400001

080089fc <_fflush_r>:
 80089fc:	b538      	push	{r3, r4, r5, lr}
 80089fe:	460c      	mov	r4, r1
 8008a00:	4605      	mov	r5, r0
 8008a02:	b118      	cbz	r0, 8008a0c <_fflush_r+0x10>
 8008a04:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8008a06:	b90b      	cbnz	r3, 8008a0c <_fflush_r+0x10>
 8008a08:	f7fe fee6 	bl	80077d8 <__sinit>
 8008a0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008a10:	b1bb      	cbz	r3, 8008a42 <_fflush_r+0x46>
 8008a12:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8008a14:	07d0      	lsls	r0, r2, #31
 8008a16:	d404      	bmi.n	8008a22 <_fflush_r+0x26>
 8008a18:	0599      	lsls	r1, r3, #22
 8008a1a:	d402      	bmi.n	8008a22 <_fflush_r+0x26>
 8008a1c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008a1e:	f7ff f99b 	bl	8007d58 <__retarget_lock_acquire_recursive>
 8008a22:	4628      	mov	r0, r5
 8008a24:	4621      	mov	r1, r4
 8008a26:	f7ff ff5b 	bl	80088e0 <__sflush_r>
 8008a2a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008a2c:	07da      	lsls	r2, r3, #31
 8008a2e:	4605      	mov	r5, r0
 8008a30:	d405      	bmi.n	8008a3e <_fflush_r+0x42>
 8008a32:	89a3      	ldrh	r3, [r4, #12]
 8008a34:	059b      	lsls	r3, r3, #22
 8008a36:	d402      	bmi.n	8008a3e <_fflush_r+0x42>
 8008a38:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008a3a:	f7ff f98e 	bl	8007d5a <__retarget_lock_release_recursive>
 8008a3e:	4628      	mov	r0, r5
 8008a40:	bd38      	pop	{r3, r4, r5, pc}
 8008a42:	461d      	mov	r5, r3
 8008a44:	e7fb      	b.n	8008a3e <_fflush_r+0x42>
	...

08008a48 <fiprintf>:
 8008a48:	b40e      	push	{r1, r2, r3}
 8008a4a:	b503      	push	{r0, r1, lr}
 8008a4c:	4601      	mov	r1, r0
 8008a4e:	ab03      	add	r3, sp, #12
 8008a50:	4805      	ldr	r0, [pc, #20]	; (8008a68 <fiprintf+0x20>)
 8008a52:	f853 2b04 	ldr.w	r2, [r3], #4
 8008a56:	6800      	ldr	r0, [r0, #0]
 8008a58:	9301      	str	r3, [sp, #4]
 8008a5a:	f000 f8e1 	bl	8008c20 <_vfiprintf_r>
 8008a5e:	b002      	add	sp, #8
 8008a60:	f85d eb04 	ldr.w	lr, [sp], #4
 8008a64:	b003      	add	sp, #12
 8008a66:	4770      	bx	lr
 8008a68:	20000738 	.word	0x20000738

08008a6c <__locale_mb_cur_max>:
 8008a6c:	4b01      	ldr	r3, [pc, #4]	; (8008a74 <__locale_mb_cur_max+0x8>)
 8008a6e:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
 8008a72:	4770      	bx	lr
 8008a74:	20000f7c 	.word	0x20000f7c

08008a78 <_lseek_r>:
 8008a78:	b538      	push	{r3, r4, r5, lr}
 8008a7a:	4d07      	ldr	r5, [pc, #28]	; (8008a98 <_lseek_r+0x20>)
 8008a7c:	4604      	mov	r4, r0
 8008a7e:	4608      	mov	r0, r1
 8008a80:	4611      	mov	r1, r2
 8008a82:	2200      	movs	r2, #0
 8008a84:	602a      	str	r2, [r5, #0]
 8008a86:	461a      	mov	r2, r3
 8008a88:	f000 ff10 	bl	80098ac <_lseek>
 8008a8c:	1c43      	adds	r3, r0, #1
 8008a8e:	d102      	bne.n	8008a96 <_lseek_r+0x1e>
 8008a90:	682b      	ldr	r3, [r5, #0]
 8008a92:	b103      	cbz	r3, 8008a96 <_lseek_r+0x1e>
 8008a94:	6023      	str	r3, [r4, #0]
 8008a96:	bd38      	pop	{r3, r4, r5, pc}
 8008a98:	2000154c 	.word	0x2000154c

08008a9c <__swhatbuf_r>:
 8008a9c:	b570      	push	{r4, r5, r6, lr}
 8008a9e:	460e      	mov	r6, r1
 8008aa0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008aa4:	2900      	cmp	r1, #0
 8008aa6:	b096      	sub	sp, #88	; 0x58
 8008aa8:	4614      	mov	r4, r2
 8008aaa:	461d      	mov	r5, r3
 8008aac:	da0a      	bge.n	8008ac4 <__swhatbuf_r+0x28>
 8008aae:	f9b6 100c 	ldrsh.w	r1, [r6, #12]
 8008ab2:	2300      	movs	r3, #0
 8008ab4:	f011 0080 	ands.w	r0, r1, #128	; 0x80
 8008ab8:	602b      	str	r3, [r5, #0]
 8008aba:	d116      	bne.n	8008aea <__swhatbuf_r+0x4e>
 8008abc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008ac0:	6023      	str	r3, [r4, #0]
 8008ac2:	e015      	b.n	8008af0 <__swhatbuf_r+0x54>
 8008ac4:	466a      	mov	r2, sp
 8008ac6:	f000 fe01 	bl	80096cc <_fstat_r>
 8008aca:	2800      	cmp	r0, #0
 8008acc:	dbef      	blt.n	8008aae <__swhatbuf_r+0x12>
 8008ace:	9a01      	ldr	r2, [sp, #4]
 8008ad0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8008ad4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8008ad8:	425a      	negs	r2, r3
 8008ada:	415a      	adcs	r2, r3
 8008adc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008ae0:	602a      	str	r2, [r5, #0]
 8008ae2:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8008ae6:	6023      	str	r3, [r4, #0]
 8008ae8:	e002      	b.n	8008af0 <__swhatbuf_r+0x54>
 8008aea:	2240      	movs	r2, #64	; 0x40
 8008aec:	6022      	str	r2, [r4, #0]
 8008aee:	4618      	mov	r0, r3
 8008af0:	b016      	add	sp, #88	; 0x58
 8008af2:	bd70      	pop	{r4, r5, r6, pc}

08008af4 <__smakebuf_r>:
 8008af4:	898b      	ldrh	r3, [r1, #12]
 8008af6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008af8:	079d      	lsls	r5, r3, #30
 8008afa:	4606      	mov	r6, r0
 8008afc:	460c      	mov	r4, r1
 8008afe:	d507      	bpl.n	8008b10 <__smakebuf_r+0x1c>
 8008b00:	f104 0343 	add.w	r3, r4, #67	; 0x43
 8008b04:	6023      	str	r3, [r4, #0]
 8008b06:	6123      	str	r3, [r4, #16]
 8008b08:	2301      	movs	r3, #1
 8008b0a:	6163      	str	r3, [r4, #20]
 8008b0c:	b002      	add	sp, #8
 8008b0e:	bd70      	pop	{r4, r5, r6, pc}
 8008b10:	ab01      	add	r3, sp, #4
 8008b12:	466a      	mov	r2, sp
 8008b14:	f7ff ffc2 	bl	8008a9c <__swhatbuf_r>
 8008b18:	9900      	ldr	r1, [sp, #0]
 8008b1a:	4605      	mov	r5, r0
 8008b1c:	4630      	mov	r0, r6
 8008b1e:	f7fc f92d 	bl	8004d7c <_malloc_r>
 8008b22:	b948      	cbnz	r0, 8008b38 <__smakebuf_r+0x44>
 8008b24:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008b28:	059a      	lsls	r2, r3, #22
 8008b2a:	d4ef      	bmi.n	8008b0c <__smakebuf_r+0x18>
 8008b2c:	f023 0303 	bic.w	r3, r3, #3
 8008b30:	f043 0302 	orr.w	r3, r3, #2
 8008b34:	81a3      	strh	r3, [r4, #12]
 8008b36:	e7e3      	b.n	8008b00 <__smakebuf_r+0xc>
 8008b38:	4b0d      	ldr	r3, [pc, #52]	; (8008b70 <__smakebuf_r+0x7c>)
 8008b3a:	63f3      	str	r3, [r6, #60]	; 0x3c
 8008b3c:	89a3      	ldrh	r3, [r4, #12]
 8008b3e:	6020      	str	r0, [r4, #0]
 8008b40:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008b44:	81a3      	strh	r3, [r4, #12]
 8008b46:	9b00      	ldr	r3, [sp, #0]
 8008b48:	6163      	str	r3, [r4, #20]
 8008b4a:	9b01      	ldr	r3, [sp, #4]
 8008b4c:	6120      	str	r0, [r4, #16]
 8008b4e:	b15b      	cbz	r3, 8008b68 <__smakebuf_r+0x74>
 8008b50:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008b54:	4630      	mov	r0, r6
 8008b56:	f000 fdcb 	bl	80096f0 <_isatty_r>
 8008b5a:	b128      	cbz	r0, 8008b68 <__smakebuf_r+0x74>
 8008b5c:	89a3      	ldrh	r3, [r4, #12]
 8008b5e:	f023 0303 	bic.w	r3, r3, #3
 8008b62:	f043 0301 	orr.w	r3, r3, #1
 8008b66:	81a3      	strh	r3, [r4, #12]
 8008b68:	89a0      	ldrh	r0, [r4, #12]
 8008b6a:	4305      	orrs	r5, r0
 8008b6c:	81a5      	strh	r5, [r4, #12]
 8008b6e:	e7cd      	b.n	8008b0c <__smakebuf_r+0x18>
 8008b70:	0800779d 	.word	0x0800779d

08008b74 <__ascii_mbtowc>:
 8008b74:	b082      	sub	sp, #8
 8008b76:	b901      	cbnz	r1, 8008b7a <__ascii_mbtowc+0x6>
 8008b78:	a901      	add	r1, sp, #4
 8008b7a:	b142      	cbz	r2, 8008b8e <__ascii_mbtowc+0x1a>
 8008b7c:	b14b      	cbz	r3, 8008b92 <__ascii_mbtowc+0x1e>
 8008b7e:	7813      	ldrb	r3, [r2, #0]
 8008b80:	600b      	str	r3, [r1, #0]
 8008b82:	7812      	ldrb	r2, [r2, #0]
 8008b84:	1e10      	subs	r0, r2, #0
 8008b86:	bf18      	it	ne
 8008b88:	2001      	movne	r0, #1
 8008b8a:	b002      	add	sp, #8
 8008b8c:	4770      	bx	lr
 8008b8e:	4610      	mov	r0, r2
 8008b90:	e7fb      	b.n	8008b8a <__ascii_mbtowc+0x16>
 8008b92:	f06f 0001 	mvn.w	r0, #1
 8008b96:	e7f8      	b.n	8008b8a <__ascii_mbtowc+0x16>

08008b98 <_read_r>:
 8008b98:	b538      	push	{r3, r4, r5, lr}
 8008b9a:	4d07      	ldr	r5, [pc, #28]	; (8008bb8 <_read_r+0x20>)
 8008b9c:	4604      	mov	r4, r0
 8008b9e:	4608      	mov	r0, r1
 8008ba0:	4611      	mov	r1, r2
 8008ba2:	2200      	movs	r2, #0
 8008ba4:	602a      	str	r2, [r5, #0]
 8008ba6:	461a      	mov	r2, r3
 8008ba8:	f000 fe88 	bl	80098bc <_read>
 8008bac:	1c43      	adds	r3, r0, #1
 8008bae:	d102      	bne.n	8008bb6 <_read_r+0x1e>
 8008bb0:	682b      	ldr	r3, [r5, #0]
 8008bb2:	b103      	cbz	r3, 8008bb6 <_read_r+0x1e>
 8008bb4:	6023      	str	r3, [r4, #0]
 8008bb6:	bd38      	pop	{r3, r4, r5, pc}
 8008bb8:	2000154c 	.word	0x2000154c

08008bbc <__sprint_r>:
 8008bbc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008bc0:	6893      	ldr	r3, [r2, #8]
 8008bc2:	4680      	mov	r8, r0
 8008bc4:	460f      	mov	r7, r1
 8008bc6:	4614      	mov	r4, r2
 8008bc8:	b91b      	cbnz	r3, 8008bd2 <__sprint_r+0x16>
 8008bca:	6053      	str	r3, [r2, #4]
 8008bcc:	4618      	mov	r0, r3
 8008bce:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008bd2:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 8008bd4:	049d      	lsls	r5, r3, #18
 8008bd6:	d520      	bpl.n	8008c1a <__sprint_r+0x5e>
 8008bd8:	6815      	ldr	r5, [r2, #0]
 8008bda:	3508      	adds	r5, #8
 8008bdc:	e955 b602 	ldrd	fp, r6, [r5, #-8]
 8008be0:	f04f 0900 	mov.w	r9, #0
 8008be4:	ea4f 0a96 	mov.w	sl, r6, lsr #2
 8008be8:	45ca      	cmp	sl, r9
 8008bea:	dc0b      	bgt.n	8008c04 <__sprint_r+0x48>
 8008bec:	68a3      	ldr	r3, [r4, #8]
 8008bee:	f026 0003 	bic.w	r0, r6, #3
 8008bf2:	1a18      	subs	r0, r3, r0
 8008bf4:	60a0      	str	r0, [r4, #8]
 8008bf6:	3508      	adds	r5, #8
 8008bf8:	2800      	cmp	r0, #0
 8008bfa:	d1ef      	bne.n	8008bdc <__sprint_r+0x20>
 8008bfc:	2300      	movs	r3, #0
 8008bfe:	e9c4 3301 	strd	r3, r3, [r4, #4]
 8008c02:	e7e4      	b.n	8008bce <__sprint_r+0x12>
 8008c04:	f85b 1029 	ldr.w	r1, [fp, r9, lsl #2]
 8008c08:	463a      	mov	r2, r7
 8008c0a:	4640      	mov	r0, r8
 8008c0c:	f000 fd33 	bl	8009676 <_fputwc_r>
 8008c10:	1c43      	adds	r3, r0, #1
 8008c12:	d0f3      	beq.n	8008bfc <__sprint_r+0x40>
 8008c14:	f109 0901 	add.w	r9, r9, #1
 8008c18:	e7e6      	b.n	8008be8 <__sprint_r+0x2c>
 8008c1a:	f7fe ff2d 	bl	8007a78 <__sfvwrite_r>
 8008c1e:	e7ed      	b.n	8008bfc <__sprint_r+0x40>

08008c20 <_vfiprintf_r>:
 8008c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c24:	ed2d 8b02 	vpush	{d8}
 8008c28:	b0b9      	sub	sp, #228	; 0xe4
 8008c2a:	460f      	mov	r7, r1
 8008c2c:	9201      	str	r2, [sp, #4]
 8008c2e:	461d      	mov	r5, r3
 8008c30:	461c      	mov	r4, r3
 8008c32:	4681      	mov	r9, r0
 8008c34:	b118      	cbz	r0, 8008c3e <_vfiprintf_r+0x1e>
 8008c36:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8008c38:	b90b      	cbnz	r3, 8008c3e <_vfiprintf_r+0x1e>
 8008c3a:	f7fe fdcd 	bl	80077d8 <__sinit>
 8008c3e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8008c40:	07d8      	lsls	r0, r3, #31
 8008c42:	d405      	bmi.n	8008c50 <_vfiprintf_r+0x30>
 8008c44:	89bb      	ldrh	r3, [r7, #12]
 8008c46:	0599      	lsls	r1, r3, #22
 8008c48:	d402      	bmi.n	8008c50 <_vfiprintf_r+0x30>
 8008c4a:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8008c4c:	f7ff f884 	bl	8007d58 <__retarget_lock_acquire_recursive>
 8008c50:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8008c54:	049a      	lsls	r2, r3, #18
 8008c56:	d406      	bmi.n	8008c66 <_vfiprintf_r+0x46>
 8008c58:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8008c5c:	81bb      	strh	r3, [r7, #12]
 8008c5e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8008c60:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008c64:	667b      	str	r3, [r7, #100]	; 0x64
 8008c66:	89bb      	ldrh	r3, [r7, #12]
 8008c68:	071e      	lsls	r6, r3, #28
 8008c6a:	d501      	bpl.n	8008c70 <_vfiprintf_r+0x50>
 8008c6c:	693b      	ldr	r3, [r7, #16]
 8008c6e:	b9bb      	cbnz	r3, 8008ca0 <_vfiprintf_r+0x80>
 8008c70:	4639      	mov	r1, r7
 8008c72:	4648      	mov	r0, r9
 8008c74:	f7ff fcde 	bl	8008634 <__swsetup_r>
 8008c78:	b190      	cbz	r0, 8008ca0 <_vfiprintf_r+0x80>
 8008c7a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8008c7c:	07d8      	lsls	r0, r3, #31
 8008c7e:	d508      	bpl.n	8008c92 <_vfiprintf_r+0x72>
 8008c80:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008c84:	9302      	str	r3, [sp, #8]
 8008c86:	9802      	ldr	r0, [sp, #8]
 8008c88:	b039      	add	sp, #228	; 0xe4
 8008c8a:	ecbd 8b02 	vpop	{d8}
 8008c8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008c92:	89bb      	ldrh	r3, [r7, #12]
 8008c94:	0599      	lsls	r1, r3, #22
 8008c96:	d4f3      	bmi.n	8008c80 <_vfiprintf_r+0x60>
 8008c98:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8008c9a:	f7ff f85e 	bl	8007d5a <__retarget_lock_release_recursive>
 8008c9e:	e7ef      	b.n	8008c80 <_vfiprintf_r+0x60>
 8008ca0:	89bb      	ldrh	r3, [r7, #12]
 8008ca2:	f003 021a 	and.w	r2, r3, #26
 8008ca6:	2a0a      	cmp	r2, #10
 8008ca8:	d116      	bne.n	8008cd8 <_vfiprintf_r+0xb8>
 8008caa:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8008cae:	2a00      	cmp	r2, #0
 8008cb0:	db12      	blt.n	8008cd8 <_vfiprintf_r+0xb8>
 8008cb2:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8008cb4:	07d2      	lsls	r2, r2, #31
 8008cb6:	d404      	bmi.n	8008cc2 <_vfiprintf_r+0xa2>
 8008cb8:	059e      	lsls	r6, r3, #22
 8008cba:	d402      	bmi.n	8008cc2 <_vfiprintf_r+0xa2>
 8008cbc:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8008cbe:	f7ff f84c 	bl	8007d5a <__retarget_lock_release_recursive>
 8008cc2:	9a01      	ldr	r2, [sp, #4]
 8008cc4:	462b      	mov	r3, r5
 8008cc6:	4639      	mov	r1, r7
 8008cc8:	4648      	mov	r0, r9
 8008cca:	b039      	add	sp, #228	; 0xe4
 8008ccc:	ecbd 8b02 	vpop	{d8}
 8008cd0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008cd4:	f000 bc3a 	b.w	800954c <__sbprintf>
 8008cd8:	2300      	movs	r3, #0
 8008cda:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
 8008cde:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008ce2:	ae0f      	add	r6, sp, #60	; 0x3c
 8008ce4:	ee08 3a10 	vmov	s16, r3
 8008ce8:	960c      	str	r6, [sp, #48]	; 0x30
 8008cea:	9307      	str	r3, [sp, #28]
 8008cec:	9302      	str	r3, [sp, #8]
 8008cee:	9b01      	ldr	r3, [sp, #4]
 8008cf0:	461d      	mov	r5, r3
 8008cf2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008cf6:	b10a      	cbz	r2, 8008cfc <_vfiprintf_r+0xdc>
 8008cf8:	2a25      	cmp	r2, #37	; 0x25
 8008cfa:	d1f9      	bne.n	8008cf0 <_vfiprintf_r+0xd0>
 8008cfc:	9b01      	ldr	r3, [sp, #4]
 8008cfe:	ebb5 0803 	subs.w	r8, r5, r3
 8008d02:	d00d      	beq.n	8008d20 <_vfiprintf_r+0x100>
 8008d04:	e9c6 3800 	strd	r3, r8, [r6]
 8008d08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008d0a:	4443      	add	r3, r8
 8008d0c:	930e      	str	r3, [sp, #56]	; 0x38
 8008d0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008d10:	3301      	adds	r3, #1
 8008d12:	2b07      	cmp	r3, #7
 8008d14:	930d      	str	r3, [sp, #52]	; 0x34
 8008d16:	dc75      	bgt.n	8008e04 <_vfiprintf_r+0x1e4>
 8008d18:	3608      	adds	r6, #8
 8008d1a:	9b02      	ldr	r3, [sp, #8]
 8008d1c:	4443      	add	r3, r8
 8008d1e:	9302      	str	r3, [sp, #8]
 8008d20:	782b      	ldrb	r3, [r5, #0]
 8008d22:	2b00      	cmp	r3, #0
 8008d24:	f000 83d6 	beq.w	80094d4 <_vfiprintf_r+0x8b4>
 8008d28:	2300      	movs	r3, #0
 8008d2a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8008d2e:	1c6a      	adds	r2, r5, #1
 8008d30:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8008d34:	9100      	str	r1, [sp, #0]
 8008d36:	9303      	str	r3, [sp, #12]
 8008d38:	469a      	mov	sl, r3
 8008d3a:	f812 3b01 	ldrb.w	r3, [r2], #1
 8008d3e:	9201      	str	r2, [sp, #4]
 8008d40:	f1a3 0220 	sub.w	r2, r3, #32
 8008d44:	2a5a      	cmp	r2, #90	; 0x5a
 8008d46:	f200 831f 	bhi.w	8009388 <_vfiprintf_r+0x768>
 8008d4a:	e8df f012 	tbh	[pc, r2, lsl #1]
 8008d4e:	009b      	.short	0x009b
 8008d50:	031d031d 	.word	0x031d031d
 8008d54:	031d00a3 	.word	0x031d00a3
 8008d58:	031d031d 	.word	0x031d031d
 8008d5c:	031d0082 	.word	0x031d0082
 8008d60:	00a6031d 	.word	0x00a6031d
 8008d64:	031d00b0 	.word	0x031d00b0
 8008d68:	00b200ad 	.word	0x00b200ad
 8008d6c:	00cd031d 	.word	0x00cd031d
 8008d70:	00d000d0 	.word	0x00d000d0
 8008d74:	00d000d0 	.word	0x00d000d0
 8008d78:	00d000d0 	.word	0x00d000d0
 8008d7c:	00d000d0 	.word	0x00d000d0
 8008d80:	031d00d0 	.word	0x031d00d0
 8008d84:	031d031d 	.word	0x031d031d
 8008d88:	031d031d 	.word	0x031d031d
 8008d8c:	031d031d 	.word	0x031d031d
 8008d90:	031d031d 	.word	0x031d031d
 8008d94:	010800fa 	.word	0x010800fa
 8008d98:	031d031d 	.word	0x031d031d
 8008d9c:	031d031d 	.word	0x031d031d
 8008da0:	031d031d 	.word	0x031d031d
 8008da4:	031d031d 	.word	0x031d031d
 8008da8:	031d031d 	.word	0x031d031d
 8008dac:	031d0158 	.word	0x031d0158
 8008db0:	031d031d 	.word	0x031d031d
 8008db4:	031d01a1 	.word	0x031d01a1
 8008db8:	031d027e 	.word	0x031d027e
 8008dbc:	029e031d 	.word	0x029e031d
 8008dc0:	031d031d 	.word	0x031d031d
 8008dc4:	031d031d 	.word	0x031d031d
 8008dc8:	031d031d 	.word	0x031d031d
 8008dcc:	031d031d 	.word	0x031d031d
 8008dd0:	031d031d 	.word	0x031d031d
 8008dd4:	010a00fa 	.word	0x010a00fa
 8008dd8:	031d031d 	.word	0x031d031d
 8008ddc:	00e0031d 	.word	0x00e0031d
 8008de0:	00f4010a 	.word	0x00f4010a
 8008de4:	00ed031d 	.word	0x00ed031d
 8008de8:	0136031d 	.word	0x0136031d
 8008dec:	018f015a 	.word	0x018f015a
 8008df0:	031d00f4 	.word	0x031d00f4
 8008df4:	009901a1 	.word	0x009901a1
 8008df8:	031d0280 	.word	0x031d0280
 8008dfc:	0065031d 	.word	0x0065031d
 8008e00:	0099031d 	.word	0x0099031d
 8008e04:	aa0c      	add	r2, sp, #48	; 0x30
 8008e06:	4639      	mov	r1, r7
 8008e08:	4648      	mov	r0, r9
 8008e0a:	f7ff fed7 	bl	8008bbc <__sprint_r>
 8008e0e:	2800      	cmp	r0, #0
 8008e10:	f040 833f 	bne.w	8009492 <_vfiprintf_r+0x872>
 8008e14:	ae0f      	add	r6, sp, #60	; 0x3c
 8008e16:	e780      	b.n	8008d1a <_vfiprintf_r+0xfa>
 8008e18:	4a9c      	ldr	r2, [pc, #624]	; (800908c <_vfiprintf_r+0x46c>)
 8008e1a:	9205      	str	r2, [sp, #20]
 8008e1c:	f01a 0220 	ands.w	r2, sl, #32
 8008e20:	f000 8235 	beq.w	800928e <_vfiprintf_r+0x66e>
 8008e24:	3407      	adds	r4, #7
 8008e26:	f024 0207 	bic.w	r2, r4, #7
 8008e2a:	4693      	mov	fp, r2
 8008e2c:	6855      	ldr	r5, [r2, #4]
 8008e2e:	f85b 4b08 	ldr.w	r4, [fp], #8
 8008e32:	f01a 0f01 	tst.w	sl, #1
 8008e36:	d009      	beq.n	8008e4c <_vfiprintf_r+0x22c>
 8008e38:	ea54 0205 	orrs.w	r2, r4, r5
 8008e3c:	bf1f      	itttt	ne
 8008e3e:	2230      	movne	r2, #48	; 0x30
 8008e40:	f88d 202c 	strbne.w	r2, [sp, #44]	; 0x2c
 8008e44:	f88d 302d 	strbne.w	r3, [sp, #45]	; 0x2d
 8008e48:	f04a 0a02 	orrne.w	sl, sl, #2
 8008e4c:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 8008e50:	e11a      	b.n	8009088 <_vfiprintf_r+0x468>
 8008e52:	4648      	mov	r0, r9
 8008e54:	f7fe ff7a 	bl	8007d4c <_localeconv_r>
 8008e58:	6843      	ldr	r3, [r0, #4]
 8008e5a:	4618      	mov	r0, r3
 8008e5c:	ee08 3a10 	vmov	s16, r3
 8008e60:	f7f7 f9b6 	bl	80001d0 <strlen>
 8008e64:	9007      	str	r0, [sp, #28]
 8008e66:	4648      	mov	r0, r9
 8008e68:	f7fe ff70 	bl	8007d4c <_localeconv_r>
 8008e6c:	6883      	ldr	r3, [r0, #8]
 8008e6e:	9306      	str	r3, [sp, #24]
 8008e70:	9b07      	ldr	r3, [sp, #28]
 8008e72:	b12b      	cbz	r3, 8008e80 <_vfiprintf_r+0x260>
 8008e74:	9b06      	ldr	r3, [sp, #24]
 8008e76:	b11b      	cbz	r3, 8008e80 <_vfiprintf_r+0x260>
 8008e78:	781b      	ldrb	r3, [r3, #0]
 8008e7a:	b10b      	cbz	r3, 8008e80 <_vfiprintf_r+0x260>
 8008e7c:	f44a 6a80 	orr.w	sl, sl, #1024	; 0x400
 8008e80:	9a01      	ldr	r2, [sp, #4]
 8008e82:	e75a      	b.n	8008d3a <_vfiprintf_r+0x11a>
 8008e84:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
 8008e88:	2b00      	cmp	r3, #0
 8008e8a:	d1f9      	bne.n	8008e80 <_vfiprintf_r+0x260>
 8008e8c:	2320      	movs	r3, #32
 8008e8e:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8008e92:	e7f5      	b.n	8008e80 <_vfiprintf_r+0x260>
 8008e94:	f04a 0a01 	orr.w	sl, sl, #1
 8008e98:	e7f2      	b.n	8008e80 <_vfiprintf_r+0x260>
 8008e9a:	f854 3b04 	ldr.w	r3, [r4], #4
 8008e9e:	9303      	str	r3, [sp, #12]
 8008ea0:	2b00      	cmp	r3, #0
 8008ea2:	daed      	bge.n	8008e80 <_vfiprintf_r+0x260>
 8008ea4:	425b      	negs	r3, r3
 8008ea6:	9303      	str	r3, [sp, #12]
 8008ea8:	f04a 0a04 	orr.w	sl, sl, #4
 8008eac:	e7e8      	b.n	8008e80 <_vfiprintf_r+0x260>
 8008eae:	232b      	movs	r3, #43	; 0x2b
 8008eb0:	e7ed      	b.n	8008e8e <_vfiprintf_r+0x26e>
 8008eb2:	9a01      	ldr	r2, [sp, #4]
 8008eb4:	f812 3b01 	ldrb.w	r3, [r2], #1
 8008eb8:	2b2a      	cmp	r3, #42	; 0x2a
 8008eba:	d112      	bne.n	8008ee2 <_vfiprintf_r+0x2c2>
 8008ebc:	f854 0b04 	ldr.w	r0, [r4], #4
 8008ec0:	ea40 73e0 	orr.w	r3, r0, r0, asr #31
 8008ec4:	e9cd 3200 	strd	r3, r2, [sp]
 8008ec8:	e7da      	b.n	8008e80 <_vfiprintf_r+0x260>
 8008eca:	9b00      	ldr	r3, [sp, #0]
 8008ecc:	200a      	movs	r0, #10
 8008ece:	fb00 1303 	mla	r3, r0, r3, r1
 8008ed2:	9300      	str	r3, [sp, #0]
 8008ed4:	f812 3b01 	ldrb.w	r3, [r2], #1
 8008ed8:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8008edc:	2909      	cmp	r1, #9
 8008ede:	d9f4      	bls.n	8008eca <_vfiprintf_r+0x2aa>
 8008ee0:	e72d      	b.n	8008d3e <_vfiprintf_r+0x11e>
 8008ee2:	2100      	movs	r1, #0
 8008ee4:	9100      	str	r1, [sp, #0]
 8008ee6:	e7f7      	b.n	8008ed8 <_vfiprintf_r+0x2b8>
 8008ee8:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
 8008eec:	e7c8      	b.n	8008e80 <_vfiprintf_r+0x260>
 8008eee:	2100      	movs	r1, #0
 8008ef0:	9a01      	ldr	r2, [sp, #4]
 8008ef2:	9103      	str	r1, [sp, #12]
 8008ef4:	9903      	ldr	r1, [sp, #12]
 8008ef6:	3b30      	subs	r3, #48	; 0x30
 8008ef8:	200a      	movs	r0, #10
 8008efa:	fb00 3301 	mla	r3, r0, r1, r3
 8008efe:	9303      	str	r3, [sp, #12]
 8008f00:	f812 3b01 	ldrb.w	r3, [r2], #1
 8008f04:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8008f08:	2909      	cmp	r1, #9
 8008f0a:	d9f3      	bls.n	8008ef4 <_vfiprintf_r+0x2d4>
 8008f0c:	e717      	b.n	8008d3e <_vfiprintf_r+0x11e>
 8008f0e:	9b01      	ldr	r3, [sp, #4]
 8008f10:	781b      	ldrb	r3, [r3, #0]
 8008f12:	2b68      	cmp	r3, #104	; 0x68
 8008f14:	bf01      	itttt	eq
 8008f16:	9b01      	ldreq	r3, [sp, #4]
 8008f18:	3301      	addeq	r3, #1
 8008f1a:	9301      	streq	r3, [sp, #4]
 8008f1c:	f44a 7a00 	orreq.w	sl, sl, #512	; 0x200
 8008f20:	bf18      	it	ne
 8008f22:	f04a 0a40 	orrne.w	sl, sl, #64	; 0x40
 8008f26:	e7ab      	b.n	8008e80 <_vfiprintf_r+0x260>
 8008f28:	9b01      	ldr	r3, [sp, #4]
 8008f2a:	781b      	ldrb	r3, [r3, #0]
 8008f2c:	2b6c      	cmp	r3, #108	; 0x6c
 8008f2e:	d105      	bne.n	8008f3c <_vfiprintf_r+0x31c>
 8008f30:	9b01      	ldr	r3, [sp, #4]
 8008f32:	3301      	adds	r3, #1
 8008f34:	9301      	str	r3, [sp, #4]
 8008f36:	f04a 0a20 	orr.w	sl, sl, #32
 8008f3a:	e7a1      	b.n	8008e80 <_vfiprintf_r+0x260>
 8008f3c:	f04a 0a10 	orr.w	sl, sl, #16
 8008f40:	e79e      	b.n	8008e80 <_vfiprintf_r+0x260>
 8008f42:	46a3      	mov	fp, r4
 8008f44:	2100      	movs	r1, #0
 8008f46:	f85b 3b04 	ldr.w	r3, [fp], #4
 8008f4a:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 8008f4e:	f88d 102b 	strb.w	r1, [sp, #43]	; 0x2b
 8008f52:	2301      	movs	r3, #1
 8008f54:	9300      	str	r3, [sp, #0]
 8008f56:	460d      	mov	r5, r1
 8008f58:	f10d 087c 	add.w	r8, sp, #124	; 0x7c
 8008f5c:	e0ad      	b.n	80090ba <_vfiprintf_r+0x49a>
 8008f5e:	f04a 0a10 	orr.w	sl, sl, #16
 8008f62:	f01a 0f20 	tst.w	sl, #32
 8008f66:	d011      	beq.n	8008f8c <_vfiprintf_r+0x36c>
 8008f68:	3407      	adds	r4, #7
 8008f6a:	f024 0307 	bic.w	r3, r4, #7
 8008f6e:	469b      	mov	fp, r3
 8008f70:	685d      	ldr	r5, [r3, #4]
 8008f72:	f85b 4b08 	ldr.w	r4, [fp], #8
 8008f76:	2d00      	cmp	r5, #0
 8008f78:	da06      	bge.n	8008f88 <_vfiprintf_r+0x368>
 8008f7a:	4264      	negs	r4, r4
 8008f7c:	f04f 032d 	mov.w	r3, #45	; 0x2d
 8008f80:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 8008f84:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8008f88:	2301      	movs	r3, #1
 8008f8a:	e04a      	b.n	8009022 <_vfiprintf_r+0x402>
 8008f8c:	46a3      	mov	fp, r4
 8008f8e:	f01a 0f10 	tst.w	sl, #16
 8008f92:	f85b 5b04 	ldr.w	r5, [fp], #4
 8008f96:	d002      	beq.n	8008f9e <_vfiprintf_r+0x37e>
 8008f98:	462c      	mov	r4, r5
 8008f9a:	17ed      	asrs	r5, r5, #31
 8008f9c:	e7eb      	b.n	8008f76 <_vfiprintf_r+0x356>
 8008f9e:	f01a 0f40 	tst.w	sl, #64	; 0x40
 8008fa2:	d003      	beq.n	8008fac <_vfiprintf_r+0x38c>
 8008fa4:	b22c      	sxth	r4, r5
 8008fa6:	f345 35c0 	sbfx	r5, r5, #15, #1
 8008faa:	e7e4      	b.n	8008f76 <_vfiprintf_r+0x356>
 8008fac:	f41a 7f00 	tst.w	sl, #512	; 0x200
 8008fb0:	d0f2      	beq.n	8008f98 <_vfiprintf_r+0x378>
 8008fb2:	b26c      	sxtb	r4, r5
 8008fb4:	f345 15c0 	sbfx	r5, r5, #7, #1
 8008fb8:	e7dd      	b.n	8008f76 <_vfiprintf_r+0x356>
 8008fba:	f01a 0f20 	tst.w	sl, #32
 8008fbe:	f104 0b04 	add.w	fp, r4, #4
 8008fc2:	d007      	beq.n	8008fd4 <_vfiprintf_r+0x3b4>
 8008fc4:	9a02      	ldr	r2, [sp, #8]
 8008fc6:	6823      	ldr	r3, [r4, #0]
 8008fc8:	9902      	ldr	r1, [sp, #8]
 8008fca:	17d2      	asrs	r2, r2, #31
 8008fcc:	e9c3 1200 	strd	r1, r2, [r3]
 8008fd0:	465c      	mov	r4, fp
 8008fd2:	e68c      	b.n	8008cee <_vfiprintf_r+0xce>
 8008fd4:	f01a 0f10 	tst.w	sl, #16
 8008fd8:	d003      	beq.n	8008fe2 <_vfiprintf_r+0x3c2>
 8008fda:	6823      	ldr	r3, [r4, #0]
 8008fdc:	9a02      	ldr	r2, [sp, #8]
 8008fde:	601a      	str	r2, [r3, #0]
 8008fe0:	e7f6      	b.n	8008fd0 <_vfiprintf_r+0x3b0>
 8008fe2:	f01a 0f40 	tst.w	sl, #64	; 0x40
 8008fe6:	d003      	beq.n	8008ff0 <_vfiprintf_r+0x3d0>
 8008fe8:	6823      	ldr	r3, [r4, #0]
 8008fea:	9a02      	ldr	r2, [sp, #8]
 8008fec:	801a      	strh	r2, [r3, #0]
 8008fee:	e7ef      	b.n	8008fd0 <_vfiprintf_r+0x3b0>
 8008ff0:	f41a 7f00 	tst.w	sl, #512	; 0x200
 8008ff4:	d0f1      	beq.n	8008fda <_vfiprintf_r+0x3ba>
 8008ff6:	6823      	ldr	r3, [r4, #0]
 8008ff8:	9a02      	ldr	r2, [sp, #8]
 8008ffa:	701a      	strb	r2, [r3, #0]
 8008ffc:	e7e8      	b.n	8008fd0 <_vfiprintf_r+0x3b0>
 8008ffe:	f04a 0a10 	orr.w	sl, sl, #16
 8009002:	f01a 0320 	ands.w	r3, sl, #32
 8009006:	d01f      	beq.n	8009048 <_vfiprintf_r+0x428>
 8009008:	3407      	adds	r4, #7
 800900a:	f024 0307 	bic.w	r3, r4, #7
 800900e:	469b      	mov	fp, r3
 8009010:	685d      	ldr	r5, [r3, #4]
 8009012:	f85b 4b08 	ldr.w	r4, [fp], #8
 8009016:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 800901a:	2300      	movs	r3, #0
 800901c:	2200      	movs	r2, #0
 800901e:	f88d 202b 	strb.w	r2, [sp, #43]	; 0x2b
 8009022:	9a00      	ldr	r2, [sp, #0]
 8009024:	3201      	adds	r2, #1
 8009026:	f000 8262 	beq.w	80094ee <_vfiprintf_r+0x8ce>
 800902a:	f02a 0280 	bic.w	r2, sl, #128	; 0x80
 800902e:	9204      	str	r2, [sp, #16]
 8009030:	ea54 0205 	orrs.w	r2, r4, r5
 8009034:	f040 8261 	bne.w	80094fa <_vfiprintf_r+0x8da>
 8009038:	9a00      	ldr	r2, [sp, #0]
 800903a:	2a00      	cmp	r2, #0
 800903c:	f000 8199 	beq.w	8009372 <_vfiprintf_r+0x752>
 8009040:	2b01      	cmp	r3, #1
 8009042:	f040 825d 	bne.w	8009500 <_vfiprintf_r+0x8e0>
 8009046:	e139      	b.n	80092bc <_vfiprintf_r+0x69c>
 8009048:	46a3      	mov	fp, r4
 800904a:	f01a 0510 	ands.w	r5, sl, #16
 800904e:	f85b 4b04 	ldr.w	r4, [fp], #4
 8009052:	d001      	beq.n	8009058 <_vfiprintf_r+0x438>
 8009054:	461d      	mov	r5, r3
 8009056:	e7de      	b.n	8009016 <_vfiprintf_r+0x3f6>
 8009058:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
 800905c:	d001      	beq.n	8009062 <_vfiprintf_r+0x442>
 800905e:	b2a4      	uxth	r4, r4
 8009060:	e7d9      	b.n	8009016 <_vfiprintf_r+0x3f6>
 8009062:	f41a 7500 	ands.w	r5, sl, #512	; 0x200
 8009066:	d0d6      	beq.n	8009016 <_vfiprintf_r+0x3f6>
 8009068:	b2e4      	uxtb	r4, r4
 800906a:	e7f3      	b.n	8009054 <_vfiprintf_r+0x434>
 800906c:	2330      	movs	r3, #48	; 0x30
 800906e:	46a3      	mov	fp, r4
 8009070:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8009074:	2378      	movs	r3, #120	; 0x78
 8009076:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 800907a:	f85b 4b04 	ldr.w	r4, [fp], #4
 800907e:	4b03      	ldr	r3, [pc, #12]	; (800908c <_vfiprintf_r+0x46c>)
 8009080:	9305      	str	r3, [sp, #20]
 8009082:	2500      	movs	r5, #0
 8009084:	f04a 0a02 	orr.w	sl, sl, #2
 8009088:	2302      	movs	r3, #2
 800908a:	e7c7      	b.n	800901c <_vfiprintf_r+0x3fc>
 800908c:	0800e324 	.word	0x0800e324
 8009090:	9b00      	ldr	r3, [sp, #0]
 8009092:	46a3      	mov	fp, r4
 8009094:	2500      	movs	r5, #0
 8009096:	1c5c      	adds	r4, r3, #1
 8009098:	f85b 8b04 	ldr.w	r8, [fp], #4
 800909c:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80090a0:	f000 80ce 	beq.w	8009240 <_vfiprintf_r+0x620>
 80090a4:	461a      	mov	r2, r3
 80090a6:	4629      	mov	r1, r5
 80090a8:	4640      	mov	r0, r8
 80090aa:	f7f7 f899 	bl	80001e0 <memchr>
 80090ae:	2800      	cmp	r0, #0
 80090b0:	f000 8174 	beq.w	800939c <_vfiprintf_r+0x77c>
 80090b4:	eba0 0308 	sub.w	r3, r0, r8
 80090b8:	9300      	str	r3, [sp, #0]
 80090ba:	9b00      	ldr	r3, [sp, #0]
 80090bc:	42ab      	cmp	r3, r5
 80090be:	bfb8      	it	lt
 80090c0:	462b      	movlt	r3, r5
 80090c2:	9304      	str	r3, [sp, #16]
 80090c4:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
 80090c8:	b113      	cbz	r3, 80090d0 <_vfiprintf_r+0x4b0>
 80090ca:	9b04      	ldr	r3, [sp, #16]
 80090cc:	3301      	adds	r3, #1
 80090ce:	9304      	str	r3, [sp, #16]
 80090d0:	f01a 0302 	ands.w	r3, sl, #2
 80090d4:	9308      	str	r3, [sp, #32]
 80090d6:	bf1e      	ittt	ne
 80090d8:	9b04      	ldrne	r3, [sp, #16]
 80090da:	3302      	addne	r3, #2
 80090dc:	9304      	strne	r3, [sp, #16]
 80090de:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
 80090e2:	9309      	str	r3, [sp, #36]	; 0x24
 80090e4:	d11f      	bne.n	8009126 <_vfiprintf_r+0x506>
 80090e6:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 80090ea:	1a9c      	subs	r4, r3, r2
 80090ec:	2c00      	cmp	r4, #0
 80090ee:	dd1a      	ble.n	8009126 <_vfiprintf_r+0x506>
 80090f0:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 80090f4:	48aa      	ldr	r0, [pc, #680]	; (80093a0 <_vfiprintf_r+0x780>)
 80090f6:	6030      	str	r0, [r6, #0]
 80090f8:	2c10      	cmp	r4, #16
 80090fa:	f103 0301 	add.w	r3, r3, #1
 80090fe:	f106 0108 	add.w	r1, r6, #8
 8009102:	f300 8153 	bgt.w	80093ac <_vfiprintf_r+0x78c>
 8009106:	6074      	str	r4, [r6, #4]
 8009108:	2b07      	cmp	r3, #7
 800910a:	4414      	add	r4, r2
 800910c:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
 8009110:	f340 815e 	ble.w	80093d0 <_vfiprintf_r+0x7b0>
 8009114:	aa0c      	add	r2, sp, #48	; 0x30
 8009116:	4639      	mov	r1, r7
 8009118:	4648      	mov	r0, r9
 800911a:	f7ff fd4f 	bl	8008bbc <__sprint_r>
 800911e:	2800      	cmp	r0, #0
 8009120:	f040 81b7 	bne.w	8009492 <_vfiprintf_r+0x872>
 8009124:	ae0f      	add	r6, sp, #60	; 0x3c
 8009126:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
 800912a:	b173      	cbz	r3, 800914a <_vfiprintf_r+0x52a>
 800912c:	f10d 022b 	add.w	r2, sp, #43	; 0x2b
 8009130:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009132:	6032      	str	r2, [r6, #0]
 8009134:	2201      	movs	r2, #1
 8009136:	6072      	str	r2, [r6, #4]
 8009138:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800913a:	3301      	adds	r3, #1
 800913c:	3201      	adds	r2, #1
 800913e:	2b07      	cmp	r3, #7
 8009140:	e9cd 320d 	strd	r3, r2, [sp, #52]	; 0x34
 8009144:	f300 8146 	bgt.w	80093d4 <_vfiprintf_r+0x7b4>
 8009148:	3608      	adds	r6, #8
 800914a:	9b08      	ldr	r3, [sp, #32]
 800914c:	b16b      	cbz	r3, 800916a <_vfiprintf_r+0x54a>
 800914e:	aa0b      	add	r2, sp, #44	; 0x2c
 8009150:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009152:	6032      	str	r2, [r6, #0]
 8009154:	2202      	movs	r2, #2
 8009156:	6072      	str	r2, [r6, #4]
 8009158:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800915a:	3301      	adds	r3, #1
 800915c:	3202      	adds	r2, #2
 800915e:	2b07      	cmp	r3, #7
 8009160:	e9cd 320d 	strd	r3, r2, [sp, #52]	; 0x34
 8009164:	f300 813f 	bgt.w	80093e6 <_vfiprintf_r+0x7c6>
 8009168:	3608      	adds	r6, #8
 800916a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800916c:	2b80      	cmp	r3, #128	; 0x80
 800916e:	d11f      	bne.n	80091b0 <_vfiprintf_r+0x590>
 8009170:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 8009174:	1a9c      	subs	r4, r3, r2
 8009176:	2c00      	cmp	r4, #0
 8009178:	dd1a      	ble.n	80091b0 <_vfiprintf_r+0x590>
 800917a:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 800917e:	4889      	ldr	r0, [pc, #548]	; (80093a4 <_vfiprintf_r+0x784>)
 8009180:	6030      	str	r0, [r6, #0]
 8009182:	2c10      	cmp	r4, #16
 8009184:	f103 0301 	add.w	r3, r3, #1
 8009188:	f106 0108 	add.w	r1, r6, #8
 800918c:	f300 8134 	bgt.w	80093f8 <_vfiprintf_r+0x7d8>
 8009190:	6074      	str	r4, [r6, #4]
 8009192:	2b07      	cmp	r3, #7
 8009194:	4414      	add	r4, r2
 8009196:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
 800919a:	f340 813f 	ble.w	800941c <_vfiprintf_r+0x7fc>
 800919e:	aa0c      	add	r2, sp, #48	; 0x30
 80091a0:	4639      	mov	r1, r7
 80091a2:	4648      	mov	r0, r9
 80091a4:	f7ff fd0a 	bl	8008bbc <__sprint_r>
 80091a8:	2800      	cmp	r0, #0
 80091aa:	f040 8172 	bne.w	8009492 <_vfiprintf_r+0x872>
 80091ae:	ae0f      	add	r6, sp, #60	; 0x3c
 80091b0:	9b00      	ldr	r3, [sp, #0]
 80091b2:	1aec      	subs	r4, r5, r3
 80091b4:	2c00      	cmp	r4, #0
 80091b6:	dd1a      	ble.n	80091ee <_vfiprintf_r+0x5ce>
 80091b8:	4d7a      	ldr	r5, [pc, #488]	; (80093a4 <_vfiprintf_r+0x784>)
 80091ba:	6035      	str	r5, [r6, #0]
 80091bc:	e9dd 310d 	ldrd	r3, r1, [sp, #52]	; 0x34
 80091c0:	2c10      	cmp	r4, #16
 80091c2:	f103 0301 	add.w	r3, r3, #1
 80091c6:	f106 0208 	add.w	r2, r6, #8
 80091ca:	f300 8129 	bgt.w	8009420 <_vfiprintf_r+0x800>
 80091ce:	6074      	str	r4, [r6, #4]
 80091d0:	2b07      	cmp	r3, #7
 80091d2:	440c      	add	r4, r1
 80091d4:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
 80091d8:	f340 8133 	ble.w	8009442 <_vfiprintf_r+0x822>
 80091dc:	aa0c      	add	r2, sp, #48	; 0x30
 80091de:	4639      	mov	r1, r7
 80091e0:	4648      	mov	r0, r9
 80091e2:	f7ff fceb 	bl	8008bbc <__sprint_r>
 80091e6:	2800      	cmp	r0, #0
 80091e8:	f040 8153 	bne.w	8009492 <_vfiprintf_r+0x872>
 80091ec:	ae0f      	add	r6, sp, #60	; 0x3c
 80091ee:	9b00      	ldr	r3, [sp, #0]
 80091f0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80091f2:	6073      	str	r3, [r6, #4]
 80091f4:	4418      	add	r0, r3
 80091f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80091f8:	f8c6 8000 	str.w	r8, [r6]
 80091fc:	3301      	adds	r3, #1
 80091fe:	2b07      	cmp	r3, #7
 8009200:	900e      	str	r0, [sp, #56]	; 0x38
 8009202:	930d      	str	r3, [sp, #52]	; 0x34
 8009204:	f300 811f 	bgt.w	8009446 <_vfiprintf_r+0x826>
 8009208:	f106 0308 	add.w	r3, r6, #8
 800920c:	f01a 0f04 	tst.w	sl, #4
 8009210:	f040 8121 	bne.w	8009456 <_vfiprintf_r+0x836>
 8009214:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8009218:	9904      	ldr	r1, [sp, #16]
 800921a:	428a      	cmp	r2, r1
 800921c:	bfac      	ite	ge
 800921e:	189b      	addge	r3, r3, r2
 8009220:	185b      	addlt	r3, r3, r1
 8009222:	9302      	str	r3, [sp, #8]
 8009224:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009226:	b13b      	cbz	r3, 8009238 <_vfiprintf_r+0x618>
 8009228:	aa0c      	add	r2, sp, #48	; 0x30
 800922a:	4639      	mov	r1, r7
 800922c:	4648      	mov	r0, r9
 800922e:	f7ff fcc5 	bl	8008bbc <__sprint_r>
 8009232:	2800      	cmp	r0, #0
 8009234:	f040 812d 	bne.w	8009492 <_vfiprintf_r+0x872>
 8009238:	2300      	movs	r3, #0
 800923a:	930d      	str	r3, [sp, #52]	; 0x34
 800923c:	ae0f      	add	r6, sp, #60	; 0x3c
 800923e:	e6c7      	b.n	8008fd0 <_vfiprintf_r+0x3b0>
 8009240:	4640      	mov	r0, r8
 8009242:	f7f6 ffc5 	bl	80001d0 <strlen>
 8009246:	9000      	str	r0, [sp, #0]
 8009248:	e737      	b.n	80090ba <_vfiprintf_r+0x49a>
 800924a:	f04a 0a10 	orr.w	sl, sl, #16
 800924e:	f01a 0320 	ands.w	r3, sl, #32
 8009252:	d008      	beq.n	8009266 <_vfiprintf_r+0x646>
 8009254:	3407      	adds	r4, #7
 8009256:	f024 0307 	bic.w	r3, r4, #7
 800925a:	469b      	mov	fp, r3
 800925c:	685d      	ldr	r5, [r3, #4]
 800925e:	f85b 4b08 	ldr.w	r4, [fp], #8
 8009262:	2301      	movs	r3, #1
 8009264:	e6da      	b.n	800901c <_vfiprintf_r+0x3fc>
 8009266:	46a3      	mov	fp, r4
 8009268:	f01a 0510 	ands.w	r5, sl, #16
 800926c:	f85b 4b04 	ldr.w	r4, [fp], #4
 8009270:	d001      	beq.n	8009276 <_vfiprintf_r+0x656>
 8009272:	461d      	mov	r5, r3
 8009274:	e7f5      	b.n	8009262 <_vfiprintf_r+0x642>
 8009276:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
 800927a:	d001      	beq.n	8009280 <_vfiprintf_r+0x660>
 800927c:	b2a4      	uxth	r4, r4
 800927e:	e7f0      	b.n	8009262 <_vfiprintf_r+0x642>
 8009280:	f41a 7500 	ands.w	r5, sl, #512	; 0x200
 8009284:	d0ed      	beq.n	8009262 <_vfiprintf_r+0x642>
 8009286:	b2e4      	uxtb	r4, r4
 8009288:	e7f3      	b.n	8009272 <_vfiprintf_r+0x652>
 800928a:	4a47      	ldr	r2, [pc, #284]	; (80093a8 <_vfiprintf_r+0x788>)
 800928c:	e5c5      	b.n	8008e1a <_vfiprintf_r+0x1fa>
 800928e:	46a3      	mov	fp, r4
 8009290:	f01a 0510 	ands.w	r5, sl, #16
 8009294:	f85b 4b04 	ldr.w	r4, [fp], #4
 8009298:	d001      	beq.n	800929e <_vfiprintf_r+0x67e>
 800929a:	4615      	mov	r5, r2
 800929c:	e5c9      	b.n	8008e32 <_vfiprintf_r+0x212>
 800929e:	f01a 0240 	ands.w	r2, sl, #64	; 0x40
 80092a2:	d001      	beq.n	80092a8 <_vfiprintf_r+0x688>
 80092a4:	b2a4      	uxth	r4, r4
 80092a6:	e5c4      	b.n	8008e32 <_vfiprintf_r+0x212>
 80092a8:	f41a 7500 	ands.w	r5, sl, #512	; 0x200
 80092ac:	f43f adc1 	beq.w	8008e32 <_vfiprintf_r+0x212>
 80092b0:	b2e4      	uxtb	r4, r4
 80092b2:	e7f2      	b.n	800929a <_vfiprintf_r+0x67a>
 80092b4:	2c0a      	cmp	r4, #10
 80092b6:	f175 0300 	sbcs.w	r3, r5, #0
 80092ba:	d205      	bcs.n	80092c8 <_vfiprintf_r+0x6a8>
 80092bc:	3430      	adds	r4, #48	; 0x30
 80092be:	f88d 40df 	strb.w	r4, [sp, #223]	; 0xdf
 80092c2:	f10d 08df 	add.w	r8, sp, #223	; 0xdf
 80092c6:	e137      	b.n	8009538 <_vfiprintf_r+0x918>
 80092c8:	ab38      	add	r3, sp, #224	; 0xe0
 80092ca:	9308      	str	r3, [sp, #32]
 80092cc:	9b04      	ldr	r3, [sp, #16]
 80092ce:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80092d2:	f04f 0a00 	mov.w	sl, #0
 80092d6:	9309      	str	r3, [sp, #36]	; 0x24
 80092d8:	9b08      	ldr	r3, [sp, #32]
 80092da:	220a      	movs	r2, #10
 80092dc:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 80092e0:	4620      	mov	r0, r4
 80092e2:	2300      	movs	r3, #0
 80092e4:	4629      	mov	r1, r5
 80092e6:	f7f7 fc5f 	bl	8000ba8 <__aeabi_uldivmod>
 80092ea:	9b08      	ldr	r3, [sp, #32]
 80092ec:	3230      	adds	r2, #48	; 0x30
 80092ee:	f803 2c01 	strb.w	r2, [r3, #-1]
 80092f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80092f4:	f10a 0a01 	add.w	sl, sl, #1
 80092f8:	b1db      	cbz	r3, 8009332 <_vfiprintf_r+0x712>
 80092fa:	9b06      	ldr	r3, [sp, #24]
 80092fc:	781b      	ldrb	r3, [r3, #0]
 80092fe:	4553      	cmp	r3, sl
 8009300:	d117      	bne.n	8009332 <_vfiprintf_r+0x712>
 8009302:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8009306:	d014      	beq.n	8009332 <_vfiprintf_r+0x712>
 8009308:	2c0a      	cmp	r4, #10
 800930a:	f175 0300 	sbcs.w	r3, r5, #0
 800930e:	d310      	bcc.n	8009332 <_vfiprintf_r+0x712>
 8009310:	9b07      	ldr	r3, [sp, #28]
 8009312:	eba8 0803 	sub.w	r8, r8, r3
 8009316:	461a      	mov	r2, r3
 8009318:	ee18 1a10 	vmov	r1, s16
 800931c:	4640      	mov	r0, r8
 800931e:	f7ff f8e8 	bl	80084f2 <strncpy>
 8009322:	9b06      	ldr	r3, [sp, #24]
 8009324:	785b      	ldrb	r3, [r3, #1]
 8009326:	b1a3      	cbz	r3, 8009352 <_vfiprintf_r+0x732>
 8009328:	9b06      	ldr	r3, [sp, #24]
 800932a:	3301      	adds	r3, #1
 800932c:	9306      	str	r3, [sp, #24]
 800932e:	f04f 0a00 	mov.w	sl, #0
 8009332:	2300      	movs	r3, #0
 8009334:	220a      	movs	r2, #10
 8009336:	4620      	mov	r0, r4
 8009338:	4629      	mov	r1, r5
 800933a:	f7f7 fc35 	bl	8000ba8 <__aeabi_uldivmod>
 800933e:	2c0a      	cmp	r4, #10
 8009340:	f175 0300 	sbcs.w	r3, r5, #0
 8009344:	f0c0 80f8 	bcc.w	8009538 <_vfiprintf_r+0x918>
 8009348:	4604      	mov	r4, r0
 800934a:	460d      	mov	r5, r1
 800934c:	f8cd 8020 	str.w	r8, [sp, #32]
 8009350:	e7c2      	b.n	80092d8 <_vfiprintf_r+0x6b8>
 8009352:	469a      	mov	sl, r3
 8009354:	e7ed      	b.n	8009332 <_vfiprintf_r+0x712>
 8009356:	f004 030f 	and.w	r3, r4, #15
 800935a:	9a05      	ldr	r2, [sp, #20]
 800935c:	0924      	lsrs	r4, r4, #4
 800935e:	5cd3      	ldrb	r3, [r2, r3]
 8009360:	f808 3d01 	strb.w	r3, [r8, #-1]!
 8009364:	ea44 7405 	orr.w	r4, r4, r5, lsl #28
 8009368:	092d      	lsrs	r5, r5, #4
 800936a:	ea54 0305 	orrs.w	r3, r4, r5
 800936e:	d1f2      	bne.n	8009356 <_vfiprintf_r+0x736>
 8009370:	e0e2      	b.n	8009538 <_vfiprintf_r+0x918>
 8009372:	b933      	cbnz	r3, 8009382 <_vfiprintf_r+0x762>
 8009374:	f01a 0f01 	tst.w	sl, #1
 8009378:	d003      	beq.n	8009382 <_vfiprintf_r+0x762>
 800937a:	2330      	movs	r3, #48	; 0x30
 800937c:	f88d 30df 	strb.w	r3, [sp, #223]	; 0xdf
 8009380:	e79f      	b.n	80092c2 <_vfiprintf_r+0x6a2>
 8009382:	f10d 08e0 	add.w	r8, sp, #224	; 0xe0
 8009386:	e0d7      	b.n	8009538 <_vfiprintf_r+0x918>
 8009388:	2b00      	cmp	r3, #0
 800938a:	f000 80a3 	beq.w	80094d4 <_vfiprintf_r+0x8b4>
 800938e:	2100      	movs	r1, #0
 8009390:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 8009394:	f88d 102b 	strb.w	r1, [sp, #43]	; 0x2b
 8009398:	46a3      	mov	fp, r4
 800939a:	e5da      	b.n	8008f52 <_vfiprintf_r+0x332>
 800939c:	4605      	mov	r5, r0
 800939e:	e68c      	b.n	80090ba <_vfiprintf_r+0x49a>
 80093a0:	0800e582 	.word	0x0800e582
 80093a4:	0800e592 	.word	0x0800e592
 80093a8:	0800e335 	.word	0x0800e335
 80093ac:	2010      	movs	r0, #16
 80093ae:	4402      	add	r2, r0
 80093b0:	2b07      	cmp	r3, #7
 80093b2:	e9cd 320d 	strd	r3, r2, [sp, #52]	; 0x34
 80093b6:	6070      	str	r0, [r6, #4]
 80093b8:	dd07      	ble.n	80093ca <_vfiprintf_r+0x7aa>
 80093ba:	aa0c      	add	r2, sp, #48	; 0x30
 80093bc:	4639      	mov	r1, r7
 80093be:	4648      	mov	r0, r9
 80093c0:	f7ff fbfc 	bl	8008bbc <__sprint_r>
 80093c4:	2800      	cmp	r0, #0
 80093c6:	d164      	bne.n	8009492 <_vfiprintf_r+0x872>
 80093c8:	a90f      	add	r1, sp, #60	; 0x3c
 80093ca:	3c10      	subs	r4, #16
 80093cc:	460e      	mov	r6, r1
 80093ce:	e68f      	b.n	80090f0 <_vfiprintf_r+0x4d0>
 80093d0:	460e      	mov	r6, r1
 80093d2:	e6a8      	b.n	8009126 <_vfiprintf_r+0x506>
 80093d4:	aa0c      	add	r2, sp, #48	; 0x30
 80093d6:	4639      	mov	r1, r7
 80093d8:	4648      	mov	r0, r9
 80093da:	f7ff fbef 	bl	8008bbc <__sprint_r>
 80093de:	2800      	cmp	r0, #0
 80093e0:	d157      	bne.n	8009492 <_vfiprintf_r+0x872>
 80093e2:	ae0f      	add	r6, sp, #60	; 0x3c
 80093e4:	e6b1      	b.n	800914a <_vfiprintf_r+0x52a>
 80093e6:	aa0c      	add	r2, sp, #48	; 0x30
 80093e8:	4639      	mov	r1, r7
 80093ea:	4648      	mov	r0, r9
 80093ec:	f7ff fbe6 	bl	8008bbc <__sprint_r>
 80093f0:	2800      	cmp	r0, #0
 80093f2:	d14e      	bne.n	8009492 <_vfiprintf_r+0x872>
 80093f4:	ae0f      	add	r6, sp, #60	; 0x3c
 80093f6:	e6b8      	b.n	800916a <_vfiprintf_r+0x54a>
 80093f8:	2010      	movs	r0, #16
 80093fa:	4402      	add	r2, r0
 80093fc:	2b07      	cmp	r3, #7
 80093fe:	e9cd 320d 	strd	r3, r2, [sp, #52]	; 0x34
 8009402:	6070      	str	r0, [r6, #4]
 8009404:	dd07      	ble.n	8009416 <_vfiprintf_r+0x7f6>
 8009406:	aa0c      	add	r2, sp, #48	; 0x30
 8009408:	4639      	mov	r1, r7
 800940a:	4648      	mov	r0, r9
 800940c:	f7ff fbd6 	bl	8008bbc <__sprint_r>
 8009410:	2800      	cmp	r0, #0
 8009412:	d13e      	bne.n	8009492 <_vfiprintf_r+0x872>
 8009414:	a90f      	add	r1, sp, #60	; 0x3c
 8009416:	3c10      	subs	r4, #16
 8009418:	460e      	mov	r6, r1
 800941a:	e6ae      	b.n	800917a <_vfiprintf_r+0x55a>
 800941c:	460e      	mov	r6, r1
 800941e:	e6c7      	b.n	80091b0 <_vfiprintf_r+0x590>
 8009420:	2010      	movs	r0, #16
 8009422:	4401      	add	r1, r0
 8009424:	2b07      	cmp	r3, #7
 8009426:	e9cd 310d 	strd	r3, r1, [sp, #52]	; 0x34
 800942a:	6070      	str	r0, [r6, #4]
 800942c:	dd06      	ble.n	800943c <_vfiprintf_r+0x81c>
 800942e:	aa0c      	add	r2, sp, #48	; 0x30
 8009430:	4639      	mov	r1, r7
 8009432:	4648      	mov	r0, r9
 8009434:	f7ff fbc2 	bl	8008bbc <__sprint_r>
 8009438:	bb58      	cbnz	r0, 8009492 <_vfiprintf_r+0x872>
 800943a:	aa0f      	add	r2, sp, #60	; 0x3c
 800943c:	3c10      	subs	r4, #16
 800943e:	4616      	mov	r6, r2
 8009440:	e6bb      	b.n	80091ba <_vfiprintf_r+0x59a>
 8009442:	4616      	mov	r6, r2
 8009444:	e6d3      	b.n	80091ee <_vfiprintf_r+0x5ce>
 8009446:	aa0c      	add	r2, sp, #48	; 0x30
 8009448:	4639      	mov	r1, r7
 800944a:	4648      	mov	r0, r9
 800944c:	f7ff fbb6 	bl	8008bbc <__sprint_r>
 8009450:	b9f8      	cbnz	r0, 8009492 <_vfiprintf_r+0x872>
 8009452:	ab0f      	add	r3, sp, #60	; 0x3c
 8009454:	e6da      	b.n	800920c <_vfiprintf_r+0x5ec>
 8009456:	e9dd 2103 	ldrd	r2, r1, [sp, #12]
 800945a:	1a54      	subs	r4, r2, r1
 800945c:	2c00      	cmp	r4, #0
 800945e:	f77f aed9 	ble.w	8009214 <_vfiprintf_r+0x5f4>
 8009462:	4d39      	ldr	r5, [pc, #228]	; (8009548 <_vfiprintf_r+0x928>)
 8009464:	2610      	movs	r6, #16
 8009466:	e9dd 210d 	ldrd	r2, r1, [sp, #52]	; 0x34
 800946a:	2c10      	cmp	r4, #16
 800946c:	f102 0201 	add.w	r2, r2, #1
 8009470:	601d      	str	r5, [r3, #0]
 8009472:	dc1d      	bgt.n	80094b0 <_vfiprintf_r+0x890>
 8009474:	605c      	str	r4, [r3, #4]
 8009476:	2a07      	cmp	r2, #7
 8009478:	440c      	add	r4, r1
 800947a:	e9cd 240d 	strd	r2, r4, [sp, #52]	; 0x34
 800947e:	f77f aec9 	ble.w	8009214 <_vfiprintf_r+0x5f4>
 8009482:	aa0c      	add	r2, sp, #48	; 0x30
 8009484:	4639      	mov	r1, r7
 8009486:	4648      	mov	r0, r9
 8009488:	f7ff fb98 	bl	8008bbc <__sprint_r>
 800948c:	2800      	cmp	r0, #0
 800948e:	f43f aec1 	beq.w	8009214 <_vfiprintf_r+0x5f4>
 8009492:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8009494:	07d9      	lsls	r1, r3, #31
 8009496:	d405      	bmi.n	80094a4 <_vfiprintf_r+0x884>
 8009498:	89bb      	ldrh	r3, [r7, #12]
 800949a:	059a      	lsls	r2, r3, #22
 800949c:	d402      	bmi.n	80094a4 <_vfiprintf_r+0x884>
 800949e:	6db8      	ldr	r0, [r7, #88]	; 0x58
 80094a0:	f7fe fc5b 	bl	8007d5a <__retarget_lock_release_recursive>
 80094a4:	89bb      	ldrh	r3, [r7, #12]
 80094a6:	065b      	lsls	r3, r3, #25
 80094a8:	f57f abed 	bpl.w	8008c86 <_vfiprintf_r+0x66>
 80094ac:	f7ff bbe8 	b.w	8008c80 <_vfiprintf_r+0x60>
 80094b0:	3110      	adds	r1, #16
 80094b2:	2a07      	cmp	r2, #7
 80094b4:	e9cd 210d 	strd	r2, r1, [sp, #52]	; 0x34
 80094b8:	605e      	str	r6, [r3, #4]
 80094ba:	dc02      	bgt.n	80094c2 <_vfiprintf_r+0x8a2>
 80094bc:	3308      	adds	r3, #8
 80094be:	3c10      	subs	r4, #16
 80094c0:	e7d1      	b.n	8009466 <_vfiprintf_r+0x846>
 80094c2:	aa0c      	add	r2, sp, #48	; 0x30
 80094c4:	4639      	mov	r1, r7
 80094c6:	4648      	mov	r0, r9
 80094c8:	f7ff fb78 	bl	8008bbc <__sprint_r>
 80094cc:	2800      	cmp	r0, #0
 80094ce:	d1e0      	bne.n	8009492 <_vfiprintf_r+0x872>
 80094d0:	ab0f      	add	r3, sp, #60	; 0x3c
 80094d2:	e7f4      	b.n	80094be <_vfiprintf_r+0x89e>
 80094d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80094d6:	b913      	cbnz	r3, 80094de <_vfiprintf_r+0x8be>
 80094d8:	2300      	movs	r3, #0
 80094da:	930d      	str	r3, [sp, #52]	; 0x34
 80094dc:	e7d9      	b.n	8009492 <_vfiprintf_r+0x872>
 80094de:	aa0c      	add	r2, sp, #48	; 0x30
 80094e0:	4639      	mov	r1, r7
 80094e2:	4648      	mov	r0, r9
 80094e4:	f7ff fb6a 	bl	8008bbc <__sprint_r>
 80094e8:	2800      	cmp	r0, #0
 80094ea:	d0f5      	beq.n	80094d8 <_vfiprintf_r+0x8b8>
 80094ec:	e7d1      	b.n	8009492 <_vfiprintf_r+0x872>
 80094ee:	ea54 0205 	orrs.w	r2, r4, r5
 80094f2:	f8cd a010 	str.w	sl, [sp, #16]
 80094f6:	f43f ada3 	beq.w	8009040 <_vfiprintf_r+0x420>
 80094fa:	2b01      	cmp	r3, #1
 80094fc:	f43f aeda 	beq.w	80092b4 <_vfiprintf_r+0x694>
 8009500:	2b02      	cmp	r3, #2
 8009502:	f10d 08e0 	add.w	r8, sp, #224	; 0xe0
 8009506:	f43f af26 	beq.w	8009356 <_vfiprintf_r+0x736>
 800950a:	f004 0307 	and.w	r3, r4, #7
 800950e:	08e4      	lsrs	r4, r4, #3
 8009510:	ea44 7445 	orr.w	r4, r4, r5, lsl #29
 8009514:	08ed      	lsrs	r5, r5, #3
 8009516:	3330      	adds	r3, #48	; 0x30
 8009518:	ea54 0105 	orrs.w	r1, r4, r5
 800951c:	4642      	mov	r2, r8
 800951e:	f808 3d01 	strb.w	r3, [r8, #-1]!
 8009522:	d1f2      	bne.n	800950a <_vfiprintf_r+0x8ea>
 8009524:	9904      	ldr	r1, [sp, #16]
 8009526:	07c8      	lsls	r0, r1, #31
 8009528:	d506      	bpl.n	8009538 <_vfiprintf_r+0x918>
 800952a:	2b30      	cmp	r3, #48	; 0x30
 800952c:	d004      	beq.n	8009538 <_vfiprintf_r+0x918>
 800952e:	2330      	movs	r3, #48	; 0x30
 8009530:	f808 3c01 	strb.w	r3, [r8, #-1]
 8009534:	f1a2 0802 	sub.w	r8, r2, #2
 8009538:	ab38      	add	r3, sp, #224	; 0xe0
 800953a:	eba3 0308 	sub.w	r3, r3, r8
 800953e:	9d00      	ldr	r5, [sp, #0]
 8009540:	f8dd a010 	ldr.w	sl, [sp, #16]
 8009544:	9300      	str	r3, [sp, #0]
 8009546:	e5b8      	b.n	80090ba <_vfiprintf_r+0x49a>
 8009548:	0800e582 	.word	0x0800e582

0800954c <__sbprintf>:
 800954c:	b570      	push	{r4, r5, r6, lr}
 800954e:	460c      	mov	r4, r1
 8009550:	8989      	ldrh	r1, [r1, #12]
 8009552:	f5ad 6d8e 	sub.w	sp, sp, #1136	; 0x470
 8009556:	f021 0102 	bic.w	r1, r1, #2
 800955a:	f8ad 1014 	strh.w	r1, [sp, #20]
 800955e:	6e61      	ldr	r1, [r4, #100]	; 0x64
 8009560:	911b      	str	r1, [sp, #108]	; 0x6c
 8009562:	89e1      	ldrh	r1, [r4, #14]
 8009564:	f8ad 1016 	strh.w	r1, [sp, #22]
 8009568:	69e1      	ldr	r1, [r4, #28]
 800956a:	9109      	str	r1, [sp, #36]	; 0x24
 800956c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800956e:	910b      	str	r1, [sp, #44]	; 0x2c
 8009570:	a91c      	add	r1, sp, #112	; 0x70
 8009572:	9102      	str	r1, [sp, #8]
 8009574:	9106      	str	r1, [sp, #24]
 8009576:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800957a:	4606      	mov	r6, r0
 800957c:	9104      	str	r1, [sp, #16]
 800957e:	9107      	str	r1, [sp, #28]
 8009580:	a818      	add	r0, sp, #96	; 0x60
 8009582:	2100      	movs	r1, #0
 8009584:	e9cd 3200 	strd	r3, r2, [sp]
 8009588:	9108      	str	r1, [sp, #32]
 800958a:	f7fe fbe3 	bl	8007d54 <__retarget_lock_init_recursive>
 800958e:	e9dd 3200 	ldrd	r3, r2, [sp]
 8009592:	a902      	add	r1, sp, #8
 8009594:	4630      	mov	r0, r6
 8009596:	f7ff fb43 	bl	8008c20 <_vfiprintf_r>
 800959a:	1e05      	subs	r5, r0, #0
 800959c:	db07      	blt.n	80095ae <__sbprintf+0x62>
 800959e:	a902      	add	r1, sp, #8
 80095a0:	4630      	mov	r0, r6
 80095a2:	f7ff fa2b 	bl	80089fc <_fflush_r>
 80095a6:	2800      	cmp	r0, #0
 80095a8:	bf18      	it	ne
 80095aa:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
 80095ae:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80095b2:	9818      	ldr	r0, [sp, #96]	; 0x60
 80095b4:	065b      	lsls	r3, r3, #25
 80095b6:	bf42      	ittt	mi
 80095b8:	89a3      	ldrhmi	r3, [r4, #12]
 80095ba:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 80095be:	81a3      	strhmi	r3, [r4, #12]
 80095c0:	f7fe fbc9 	bl	8007d56 <__retarget_lock_close_recursive>
 80095c4:	4628      	mov	r0, r5
 80095c6:	f50d 6d8e 	add.w	sp, sp, #1136	; 0x470
 80095ca:	bd70      	pop	{r4, r5, r6, pc}

080095cc <__ascii_wctomb>:
 80095cc:	b149      	cbz	r1, 80095e2 <__ascii_wctomb+0x16>
 80095ce:	2aff      	cmp	r2, #255	; 0xff
 80095d0:	bf85      	ittet	hi
 80095d2:	238a      	movhi	r3, #138	; 0x8a
 80095d4:	6003      	strhi	r3, [r0, #0]
 80095d6:	700a      	strbls	r2, [r1, #0]
 80095d8:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 80095dc:	bf98      	it	ls
 80095de:	2001      	movls	r0, #1
 80095e0:	4770      	bx	lr
 80095e2:	4608      	mov	r0, r1
 80095e4:	4770      	bx	lr

080095e6 <abort>:
 80095e6:	b508      	push	{r3, lr}
 80095e8:	2006      	movs	r0, #6
 80095ea:	f000 f8bb 	bl	8009764 <raise>
 80095ee:	2001      	movs	r0, #1
 80095f0:	f000 f974 	bl	80098dc <_exit>

080095f4 <__fputwc>:
 80095f4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80095f8:	4680      	mov	r8, r0
 80095fa:	460e      	mov	r6, r1
 80095fc:	4615      	mov	r5, r2
 80095fe:	f7ff fa35 	bl	8008a6c <__locale_mb_cur_max>
 8009602:	2801      	cmp	r0, #1
 8009604:	d11c      	bne.n	8009640 <__fputwc+0x4c>
 8009606:	1e73      	subs	r3, r6, #1
 8009608:	2bfe      	cmp	r3, #254	; 0xfe
 800960a:	d819      	bhi.n	8009640 <__fputwc+0x4c>
 800960c:	f88d 6004 	strb.w	r6, [sp, #4]
 8009610:	4604      	mov	r4, r0
 8009612:	2700      	movs	r7, #0
 8009614:	f10d 0904 	add.w	r9, sp, #4
 8009618:	42a7      	cmp	r7, r4
 800961a:	d020      	beq.n	800965e <__fputwc+0x6a>
 800961c:	68ab      	ldr	r3, [r5, #8]
 800961e:	f817 1009 	ldrb.w	r1, [r7, r9]
 8009622:	3b01      	subs	r3, #1
 8009624:	2b00      	cmp	r3, #0
 8009626:	60ab      	str	r3, [r5, #8]
 8009628:	da04      	bge.n	8009634 <__fputwc+0x40>
 800962a:	69aa      	ldr	r2, [r5, #24]
 800962c:	4293      	cmp	r3, r2
 800962e:	db1a      	blt.n	8009666 <__fputwc+0x72>
 8009630:	290a      	cmp	r1, #10
 8009632:	d018      	beq.n	8009666 <__fputwc+0x72>
 8009634:	682b      	ldr	r3, [r5, #0]
 8009636:	1c5a      	adds	r2, r3, #1
 8009638:	602a      	str	r2, [r5, #0]
 800963a:	7019      	strb	r1, [r3, #0]
 800963c:	3701      	adds	r7, #1
 800963e:	e7eb      	b.n	8009618 <__fputwc+0x24>
 8009640:	a901      	add	r1, sp, #4
 8009642:	f105 035c 	add.w	r3, r5, #92	; 0x5c
 8009646:	4632      	mov	r2, r6
 8009648:	4640      	mov	r0, r8
 800964a:	f000 f8f1 	bl	8009830 <_wcrtomb_r>
 800964e:	1c41      	adds	r1, r0, #1
 8009650:	4604      	mov	r4, r0
 8009652:	d1de      	bne.n	8009612 <__fputwc+0x1e>
 8009654:	89ab      	ldrh	r3, [r5, #12]
 8009656:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800965a:	81ab      	strh	r3, [r5, #12]
 800965c:	4606      	mov	r6, r0
 800965e:	4630      	mov	r0, r6
 8009660:	b003      	add	sp, #12
 8009662:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009666:	462a      	mov	r2, r5
 8009668:	4640      	mov	r0, r8
 800966a:	f000 f897 	bl	800979c <__swbuf_r>
 800966e:	1c42      	adds	r2, r0, #1
 8009670:	d1e4      	bne.n	800963c <__fputwc+0x48>
 8009672:	4606      	mov	r6, r0
 8009674:	e7f3      	b.n	800965e <__fputwc+0x6a>

08009676 <_fputwc_r>:
 8009676:	6e53      	ldr	r3, [r2, #100]	; 0x64
 8009678:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800967a:	4614      	mov	r4, r2
 800967c:	07da      	lsls	r2, r3, #31
 800967e:	4605      	mov	r5, r0
 8009680:	d407      	bmi.n	8009692 <_fputwc_r+0x1c>
 8009682:	89a3      	ldrh	r3, [r4, #12]
 8009684:	059b      	lsls	r3, r3, #22
 8009686:	d404      	bmi.n	8009692 <_fputwc_r+0x1c>
 8009688:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800968a:	9101      	str	r1, [sp, #4]
 800968c:	f7fe fb64 	bl	8007d58 <__retarget_lock_acquire_recursive>
 8009690:	9901      	ldr	r1, [sp, #4]
 8009692:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009696:	0498      	lsls	r0, r3, #18
 8009698:	d406      	bmi.n	80096a8 <_fputwc_r+0x32>
 800969a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800969e:	81a3      	strh	r3, [r4, #12]
 80096a0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80096a2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80096a6:	6663      	str	r3, [r4, #100]	; 0x64
 80096a8:	4622      	mov	r2, r4
 80096aa:	4628      	mov	r0, r5
 80096ac:	f7ff ffa2 	bl	80095f4 <__fputwc>
 80096b0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80096b2:	07da      	lsls	r2, r3, #31
 80096b4:	4605      	mov	r5, r0
 80096b6:	d405      	bmi.n	80096c4 <_fputwc_r+0x4e>
 80096b8:	89a3      	ldrh	r3, [r4, #12]
 80096ba:	059b      	lsls	r3, r3, #22
 80096bc:	d402      	bmi.n	80096c4 <_fputwc_r+0x4e>
 80096be:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80096c0:	f7fe fb4b 	bl	8007d5a <__retarget_lock_release_recursive>
 80096c4:	4628      	mov	r0, r5
 80096c6:	b003      	add	sp, #12
 80096c8:	bd30      	pop	{r4, r5, pc}
	...

080096cc <_fstat_r>:
 80096cc:	b538      	push	{r3, r4, r5, lr}
 80096ce:	4d07      	ldr	r5, [pc, #28]	; (80096ec <_fstat_r+0x20>)
 80096d0:	2300      	movs	r3, #0
 80096d2:	4604      	mov	r4, r0
 80096d4:	4608      	mov	r0, r1
 80096d6:	4611      	mov	r1, r2
 80096d8:	602b      	str	r3, [r5, #0]
 80096da:	f000 f8c7 	bl	800986c <_fstat>
 80096de:	1c43      	adds	r3, r0, #1
 80096e0:	d102      	bne.n	80096e8 <_fstat_r+0x1c>
 80096e2:	682b      	ldr	r3, [r5, #0]
 80096e4:	b103      	cbz	r3, 80096e8 <_fstat_r+0x1c>
 80096e6:	6023      	str	r3, [r4, #0]
 80096e8:	bd38      	pop	{r3, r4, r5, pc}
 80096ea:	bf00      	nop
 80096ec:	2000154c 	.word	0x2000154c

080096f0 <_isatty_r>:
 80096f0:	b538      	push	{r3, r4, r5, lr}
 80096f2:	4d06      	ldr	r5, [pc, #24]	; (800970c <_isatty_r+0x1c>)
 80096f4:	2300      	movs	r3, #0
 80096f6:	4604      	mov	r4, r0
 80096f8:	4608      	mov	r0, r1
 80096fa:	602b      	str	r3, [r5, #0]
 80096fc:	f000 f8c6 	bl	800988c <_isatty>
 8009700:	1c43      	adds	r3, r0, #1
 8009702:	d102      	bne.n	800970a <_isatty_r+0x1a>
 8009704:	682b      	ldr	r3, [r5, #0]
 8009706:	b103      	cbz	r3, 800970a <_isatty_r+0x1a>
 8009708:	6023      	str	r3, [r4, #0]
 800970a:	bd38      	pop	{r3, r4, r5, pc}
 800970c:	2000154c 	.word	0x2000154c

08009710 <_raise_r>:
 8009710:	291f      	cmp	r1, #31
 8009712:	b538      	push	{r3, r4, r5, lr}
 8009714:	4604      	mov	r4, r0
 8009716:	460d      	mov	r5, r1
 8009718:	d904      	bls.n	8009724 <_raise_r+0x14>
 800971a:	2316      	movs	r3, #22
 800971c:	6003      	str	r3, [r0, #0]
 800971e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009722:	bd38      	pop	{r3, r4, r5, pc}
 8009724:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
 8009728:	b112      	cbz	r2, 8009730 <_raise_r+0x20>
 800972a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800972e:	b94b      	cbnz	r3, 8009744 <_raise_r+0x34>
 8009730:	4620      	mov	r0, r4
 8009732:	f000 f831 	bl	8009798 <_getpid_r>
 8009736:	462a      	mov	r2, r5
 8009738:	4601      	mov	r1, r0
 800973a:	4620      	mov	r0, r4
 800973c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009740:	f000 b818 	b.w	8009774 <_kill_r>
 8009744:	2b01      	cmp	r3, #1
 8009746:	d00a      	beq.n	800975e <_raise_r+0x4e>
 8009748:	1c59      	adds	r1, r3, #1
 800974a:	d103      	bne.n	8009754 <_raise_r+0x44>
 800974c:	2316      	movs	r3, #22
 800974e:	6003      	str	r3, [r0, #0]
 8009750:	2001      	movs	r0, #1
 8009752:	e7e6      	b.n	8009722 <_raise_r+0x12>
 8009754:	2400      	movs	r4, #0
 8009756:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800975a:	4628      	mov	r0, r5
 800975c:	4798      	blx	r3
 800975e:	2000      	movs	r0, #0
 8009760:	e7df      	b.n	8009722 <_raise_r+0x12>
	...

08009764 <raise>:
 8009764:	4b02      	ldr	r3, [pc, #8]	; (8009770 <raise+0xc>)
 8009766:	4601      	mov	r1, r0
 8009768:	6818      	ldr	r0, [r3, #0]
 800976a:	f7ff bfd1 	b.w	8009710 <_raise_r>
 800976e:	bf00      	nop
 8009770:	20000738 	.word	0x20000738

08009774 <_kill_r>:
 8009774:	b538      	push	{r3, r4, r5, lr}
 8009776:	4d07      	ldr	r5, [pc, #28]	; (8009794 <_kill_r+0x20>)
 8009778:	2300      	movs	r3, #0
 800977a:	4604      	mov	r4, r0
 800977c:	4608      	mov	r0, r1
 800977e:	4611      	mov	r1, r2
 8009780:	602b      	str	r3, [r5, #0]
 8009782:	f000 f88b 	bl	800989c <_kill>
 8009786:	1c43      	adds	r3, r0, #1
 8009788:	d102      	bne.n	8009790 <_kill_r+0x1c>
 800978a:	682b      	ldr	r3, [r5, #0]
 800978c:	b103      	cbz	r3, 8009790 <_kill_r+0x1c>
 800978e:	6023      	str	r3, [r4, #0]
 8009790:	bd38      	pop	{r3, r4, r5, pc}
 8009792:	bf00      	nop
 8009794:	2000154c 	.word	0x2000154c

08009798 <_getpid_r>:
 8009798:	f000 b870 	b.w	800987c <_getpid>

0800979c <__swbuf_r>:
 800979c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800979e:	460e      	mov	r6, r1
 80097a0:	4614      	mov	r4, r2
 80097a2:	4605      	mov	r5, r0
 80097a4:	b118      	cbz	r0, 80097ae <__swbuf_r+0x12>
 80097a6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80097a8:	b90b      	cbnz	r3, 80097ae <__swbuf_r+0x12>
 80097aa:	f7fe f815 	bl	80077d8 <__sinit>
 80097ae:	69a3      	ldr	r3, [r4, #24]
 80097b0:	60a3      	str	r3, [r4, #8]
 80097b2:	89a3      	ldrh	r3, [r4, #12]
 80097b4:	0719      	lsls	r1, r3, #28
 80097b6:	d529      	bpl.n	800980c <__swbuf_r+0x70>
 80097b8:	6923      	ldr	r3, [r4, #16]
 80097ba:	b33b      	cbz	r3, 800980c <__swbuf_r+0x70>
 80097bc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80097c0:	b2f6      	uxtb	r6, r6
 80097c2:	049a      	lsls	r2, r3, #18
 80097c4:	4637      	mov	r7, r6
 80097c6:	d52a      	bpl.n	800981e <__swbuf_r+0x82>
 80097c8:	6823      	ldr	r3, [r4, #0]
 80097ca:	6920      	ldr	r0, [r4, #16]
 80097cc:	1a18      	subs	r0, r3, r0
 80097ce:	6963      	ldr	r3, [r4, #20]
 80097d0:	4283      	cmp	r3, r0
 80097d2:	dc04      	bgt.n	80097de <__swbuf_r+0x42>
 80097d4:	4621      	mov	r1, r4
 80097d6:	4628      	mov	r0, r5
 80097d8:	f7ff f910 	bl	80089fc <_fflush_r>
 80097dc:	b9e0      	cbnz	r0, 8009818 <__swbuf_r+0x7c>
 80097de:	68a3      	ldr	r3, [r4, #8]
 80097e0:	3b01      	subs	r3, #1
 80097e2:	60a3      	str	r3, [r4, #8]
 80097e4:	6823      	ldr	r3, [r4, #0]
 80097e6:	1c5a      	adds	r2, r3, #1
 80097e8:	6022      	str	r2, [r4, #0]
 80097ea:	701e      	strb	r6, [r3, #0]
 80097ec:	6962      	ldr	r2, [r4, #20]
 80097ee:	1c43      	adds	r3, r0, #1
 80097f0:	429a      	cmp	r2, r3
 80097f2:	d004      	beq.n	80097fe <__swbuf_r+0x62>
 80097f4:	89a3      	ldrh	r3, [r4, #12]
 80097f6:	07db      	lsls	r3, r3, #31
 80097f8:	d506      	bpl.n	8009808 <__swbuf_r+0x6c>
 80097fa:	2e0a      	cmp	r6, #10
 80097fc:	d104      	bne.n	8009808 <__swbuf_r+0x6c>
 80097fe:	4621      	mov	r1, r4
 8009800:	4628      	mov	r0, r5
 8009802:	f7ff f8fb 	bl	80089fc <_fflush_r>
 8009806:	b938      	cbnz	r0, 8009818 <__swbuf_r+0x7c>
 8009808:	4638      	mov	r0, r7
 800980a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800980c:	4621      	mov	r1, r4
 800980e:	4628      	mov	r0, r5
 8009810:	f7fe ff10 	bl	8008634 <__swsetup_r>
 8009814:	2800      	cmp	r0, #0
 8009816:	d0d1      	beq.n	80097bc <__swbuf_r+0x20>
 8009818:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800981c:	e7f4      	b.n	8009808 <__swbuf_r+0x6c>
 800981e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8009822:	81a3      	strh	r3, [r4, #12]
 8009824:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8009826:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800982a:	6663      	str	r3, [r4, #100]	; 0x64
 800982c:	e7cc      	b.n	80097c8 <__swbuf_r+0x2c>
	...

08009830 <_wcrtomb_r>:
 8009830:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009832:	4c09      	ldr	r4, [pc, #36]	; (8009858 <_wcrtomb_r+0x28>)
 8009834:	b085      	sub	sp, #20
 8009836:	f8d4 70e0 	ldr.w	r7, [r4, #224]	; 0xe0
 800983a:	4605      	mov	r5, r0
 800983c:	461e      	mov	r6, r3
 800983e:	b909      	cbnz	r1, 8009844 <_wcrtomb_r+0x14>
 8009840:	460a      	mov	r2, r1
 8009842:	a901      	add	r1, sp, #4
 8009844:	47b8      	blx	r7
 8009846:	1c43      	adds	r3, r0, #1
 8009848:	bf01      	itttt	eq
 800984a:	2300      	moveq	r3, #0
 800984c:	6033      	streq	r3, [r6, #0]
 800984e:	238a      	moveq	r3, #138	; 0x8a
 8009850:	602b      	streq	r3, [r5, #0]
 8009852:	b005      	add	sp, #20
 8009854:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009856:	bf00      	nop
 8009858:	20000f7c 	.word	0x20000f7c

0800985c <_close>:
 800985c:	4b02      	ldr	r3, [pc, #8]	; (8009868 <_close+0xc>)
 800985e:	2258      	movs	r2, #88	; 0x58
 8009860:	601a      	str	r2, [r3, #0]
 8009862:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009866:	4770      	bx	lr
 8009868:	2000154c 	.word	0x2000154c

0800986c <_fstat>:
 800986c:	4b02      	ldr	r3, [pc, #8]	; (8009878 <_fstat+0xc>)
 800986e:	2258      	movs	r2, #88	; 0x58
 8009870:	601a      	str	r2, [r3, #0]
 8009872:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009876:	4770      	bx	lr
 8009878:	2000154c 	.word	0x2000154c

0800987c <_getpid>:
 800987c:	4b02      	ldr	r3, [pc, #8]	; (8009888 <_getpid+0xc>)
 800987e:	2258      	movs	r2, #88	; 0x58
 8009880:	601a      	str	r2, [r3, #0]
 8009882:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009886:	4770      	bx	lr
 8009888:	2000154c 	.word	0x2000154c

0800988c <_isatty>:
 800988c:	4b02      	ldr	r3, [pc, #8]	; (8009898 <_isatty+0xc>)
 800988e:	2258      	movs	r2, #88	; 0x58
 8009890:	601a      	str	r2, [r3, #0]
 8009892:	2000      	movs	r0, #0
 8009894:	4770      	bx	lr
 8009896:	bf00      	nop
 8009898:	2000154c 	.word	0x2000154c

0800989c <_kill>:
 800989c:	4b02      	ldr	r3, [pc, #8]	; (80098a8 <_kill+0xc>)
 800989e:	2258      	movs	r2, #88	; 0x58
 80098a0:	601a      	str	r2, [r3, #0]
 80098a2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80098a6:	4770      	bx	lr
 80098a8:	2000154c 	.word	0x2000154c

080098ac <_lseek>:
 80098ac:	4b02      	ldr	r3, [pc, #8]	; (80098b8 <_lseek+0xc>)
 80098ae:	2258      	movs	r2, #88	; 0x58
 80098b0:	601a      	str	r2, [r3, #0]
 80098b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80098b6:	4770      	bx	lr
 80098b8:	2000154c 	.word	0x2000154c

080098bc <_read>:
 80098bc:	4b02      	ldr	r3, [pc, #8]	; (80098c8 <_read+0xc>)
 80098be:	2258      	movs	r2, #88	; 0x58
 80098c0:	601a      	str	r2, [r3, #0]
 80098c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80098c6:	4770      	bx	lr
 80098c8:	2000154c 	.word	0x2000154c

080098cc <_write>:
 80098cc:	4b02      	ldr	r3, [pc, #8]	; (80098d8 <_write+0xc>)
 80098ce:	2258      	movs	r2, #88	; 0x58
 80098d0:	601a      	str	r2, [r3, #0]
 80098d2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80098d6:	4770      	bx	lr
 80098d8:	2000154c 	.word	0x2000154c

080098dc <_exit>:
 80098dc:	e7fe      	b.n	80098dc <_exit>
	...

080098e0 <_init>:
 80098e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80098e2:	bf00      	nop
 80098e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80098e6:	bc08      	pop	{r3}
 80098e8:	469e      	mov	lr, r3
 80098ea:	4770      	bx	lr

080098ec <_fini>:
 80098ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80098ee:	bf00      	nop
 80098f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80098f2:	bc08      	pop	{r3}
 80098f4:	469e      	mov	lr, r3
 80098f6:	4770      	bx	lr
